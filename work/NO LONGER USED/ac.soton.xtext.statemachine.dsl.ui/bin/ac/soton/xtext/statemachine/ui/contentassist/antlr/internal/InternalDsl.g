/*
* generated by Xtext
*/
grammar InternalDsl;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package ac.soton.xtext.statemachine.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package ac.soton.xtext.statemachine.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import ac.soton.xtext.statemachine.services.DslGrammarAccess;

}

@parser::members {
 
 	private DslGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(DslGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleStateMachine
entryRuleStateMachine 
:
{ before(grammarAccess.getStateMachineRule()); }
	 ruleStateMachine
{ after(grammarAccess.getStateMachineRule()); } 
	 EOF 
;

// Rule StateMachine
ruleStateMachine
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStateMachineAccess().getGroup()); }
(rule__StateMachine__Group__0)
{ after(grammarAccess.getStateMachineAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAbstractNode
entryRuleAbstractNode 
:
{ before(grammarAccess.getAbstractNodeRule()); }
	 ruleAbstractNode
{ after(grammarAccess.getAbstractNodeRule()); } 
	 EOF 
;

// Rule AbstractNode
ruleAbstractNode
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAbstractNodeAccess().getAlternatives()); }
(rule__AbstractNode__Alternatives)
{ after(grammarAccess.getAbstractNodeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEString
entryRuleEString 
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEStringAccess().getAlternatives()); }
(rule__EString__Alternatives)
{ after(grammarAccess.getEStringAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTransition
entryRuleTransition 
:
{ before(grammarAccess.getTransitionRule()); }
	 ruleTransition
{ after(grammarAccess.getTransitionRule()); } 
	 EOF 
;

// Rule Transition
ruleTransition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTransitionAccess().getGroup()); }
(rule__Transition__Group__0)
{ after(grammarAccess.getTransitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleState
entryRuleState 
:
{ before(grammarAccess.getStateRule()); }
	 ruleState
{ after(grammarAccess.getStateRule()); } 
	 EOF 
;

// Rule State
ruleState
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStateAccess().getGroup()); }
(rule__State__Group__0)
{ after(grammarAccess.getStateAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInitial
entryRuleInitial 
:
{ before(grammarAccess.getInitialRule()); }
	 ruleInitial
{ after(grammarAccess.getInitialRule()); } 
	 EOF 
;

// Rule Initial
ruleInitial
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInitialAccess().getGroup()); }
(rule__Initial__Group__0)
{ after(grammarAccess.getInitialAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJunction
entryRuleJunction 
:
{ before(grammarAccess.getJunctionRule()); }
	 ruleJunction
{ after(grammarAccess.getJunctionRule()); } 
	 EOF 
;

// Rule Junction
ruleJunction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJunctionAccess().getGroup()); }
(rule__Junction__Group__0)
{ after(grammarAccess.getJunctionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFork
entryRuleFork 
:
{ before(grammarAccess.getForkRule()); }
	 ruleFork
{ after(grammarAccess.getForkRule()); } 
	 EOF 
;

// Rule Fork
ruleFork
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getForkAccess().getGroup()); }
(rule__Fork__Group__0)
{ after(grammarAccess.getForkAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJoin
entryRuleJoin 
:
{ before(grammarAccess.getJoinRule()); }
	 ruleJoin
{ after(grammarAccess.getJoinRule()); } 
	 EOF 
;

// Rule Join
ruleJoin
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJoinAccess().getGroup()); }
(rule__Join__Group__0)
{ after(grammarAccess.getJoinAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAny
entryRuleAny 
:
{ before(grammarAccess.getAnyRule()); }
	 ruleAny
{ after(grammarAccess.getAnyRule()); } 
	 EOF 
;

// Rule Any
ruleAny
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAnyAccess().getGroup()); }
(rule__Any__Group__0)
{ after(grammarAccess.getAnyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFinal
entryRuleFinal 
:
{ before(grammarAccess.getFinalRule()); }
	 ruleFinal
{ after(grammarAccess.getFinalRule()); } 
	 EOF 
;

// Rule Final
ruleFinal
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFinalAccess().getGroup()); }
(rule__Final__Group__0)
{ after(grammarAccess.getFinalAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__AbstractNode__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbstractNodeAccess().getStateParserRuleCall_0()); }
	ruleState
{ after(grammarAccess.getAbstractNodeAccess().getStateParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getAbstractNodeAccess().getInitialParserRuleCall_1()); }
	ruleInitial
{ after(grammarAccess.getAbstractNodeAccess().getInitialParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getAbstractNodeAccess().getJunctionParserRuleCall_2()); }
	ruleJunction
{ after(grammarAccess.getAbstractNodeAccess().getJunctionParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getAbstractNodeAccess().getForkParserRuleCall_3()); }
	ruleFork
{ after(grammarAccess.getAbstractNodeAccess().getForkParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getAbstractNodeAccess().getJoinParserRuleCall_4()); }
	ruleJoin
{ after(grammarAccess.getAbstractNodeAccess().getJoinParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getAbstractNodeAccess().getAnyParserRuleCall_5()); }
	ruleAny
{ after(grammarAccess.getAbstractNodeAccess().getAnyParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getAbstractNodeAccess().getFinalParserRuleCall_6()); }
	ruleFinal
{ after(grammarAccess.getAbstractNodeAccess().getFinalParserRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EString__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	RULE_STRING
{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	RULE_ID
{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__StateMachine__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group__0__Impl
	rule__StateMachine__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getStateMachineAction_0()); }
(

)
{ after(grammarAccess.getStateMachineAccess().getStateMachineAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateMachine__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group__1__Impl
	rule__StateMachine__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getStateMachineKeyword_1()); }

	'StateMachine' 

{ after(grammarAccess.getStateMachineAccess().getStateMachineKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateMachine__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group__2__Impl
	rule__StateMachine__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getNameAssignment_2()); }
(rule__StateMachine__NameAssignment_2)
{ after(grammarAccess.getStateMachineAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateMachine__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group__3__Impl
	rule__StateMachine__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getGroup_3()); }
(rule__StateMachine__Group_3__0)?
{ after(grammarAccess.getStateMachineAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateMachine__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group__4__Impl
	rule__StateMachine__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getGroup_4()); }
(rule__StateMachine__Group_4__0)?
{ after(grammarAccess.getStateMachineAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateMachine__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group__5__Impl
	rule__StateMachine__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getGroup_5()); }
(rule__StateMachine__Group_5__0)?
{ after(grammarAccess.getStateMachineAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateMachine__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getEndStateMachineKeyword_6()); }

	'End StateMachine' 

{ after(grammarAccess.getStateMachineAccess().getEndStateMachineKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__StateMachine__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group_3__0__Impl
	rule__StateMachine__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getNodesKeyword_3_0()); }

	'Nodes' 

{ after(grammarAccess.getStateMachineAccess().getNodesKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateMachine__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group_3__1__Impl
	rule__StateMachine__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getNodesAssignment_3_1()); }
(rule__StateMachine__NodesAssignment_3_1)
{ after(grammarAccess.getStateMachineAccess().getNodesAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateMachine__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getGroup_3_2()); }
(rule__StateMachine__Group_3_2__0)*
{ after(grammarAccess.getStateMachineAccess().getGroup_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__StateMachine__Group_3_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group_3_2__0__Impl
	rule__StateMachine__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group_3_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getCommaKeyword_3_2_0()); }

	',' 

{ after(grammarAccess.getStateMachineAccess().getCommaKeyword_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateMachine__Group_3_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group_3_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getNodesAssignment_3_2_1()); }
(rule__StateMachine__NodesAssignment_3_2_1)
{ after(grammarAccess.getStateMachineAccess().getNodesAssignment_3_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StateMachine__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group_4__0__Impl
	rule__StateMachine__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getTransitionsKeyword_4_0()); }

	'Transitions' 

{ after(grammarAccess.getStateMachineAccess().getTransitionsKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateMachine__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group_4__1__Impl
	rule__StateMachine__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getTransitionsAssignment_4_1()); }
(rule__StateMachine__TransitionsAssignment_4_1)
{ after(grammarAccess.getStateMachineAccess().getTransitionsAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateMachine__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getGroup_4_2()); }
(rule__StateMachine__Group_4_2__0)*
{ after(grammarAccess.getStateMachineAccess().getGroup_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__StateMachine__Group_4_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group_4_2__0__Impl
	rule__StateMachine__Group_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group_4_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getCommaKeyword_4_2_0()); }

	',' 

{ after(grammarAccess.getStateMachineAccess().getCommaKeyword_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateMachine__Group_4_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group_4_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group_4_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getTransitionsAssignment_4_2_1()); }
(rule__StateMachine__TransitionsAssignment_4_2_1)
{ after(grammarAccess.getStateMachineAccess().getTransitionsAssignment_4_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StateMachine__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group_5__0__Impl
	rule__StateMachine__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getStateMachinesKeyword_5_0()); }

	'StateMachines' 

{ after(grammarAccess.getStateMachineAccess().getStateMachinesKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateMachine__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group_5__1__Impl
	rule__StateMachine__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getStateMachinesAssignment_5_1()); }
(rule__StateMachine__StateMachinesAssignment_5_1)
{ after(grammarAccess.getStateMachineAccess().getStateMachinesAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateMachine__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getGroup_5_2()); }
(rule__StateMachine__Group_5_2__0)*
{ after(grammarAccess.getStateMachineAccess().getGroup_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__StateMachine__Group_5_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group_5_2__0__Impl
	rule__StateMachine__Group_5_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group_5_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getCommaKeyword_5_2_0()); }

	',' 

{ after(grammarAccess.getStateMachineAccess().getCommaKeyword_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateMachine__Group_5_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateMachine__Group_5_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__Group_5_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getStateMachinesAssignment_5_2_1()); }
(rule__StateMachine__StateMachinesAssignment_5_2_1)
{ after(grammarAccess.getStateMachineAccess().getStateMachinesAssignment_5_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Transition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__0__Impl
	rule__Transition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getTransitionAction_0()); }
(

)
{ after(grammarAccess.getTransitionAccess().getTransitionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__1__Impl
	rule__Transition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getTransitionKeyword_1()); }

	'Transition' 

{ after(grammarAccess.getTransitionAccess().getTransitionKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__2__Impl
	rule__Transition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getGroup_2()); }
(rule__Transition__Group_2__0)?
{ after(grammarAccess.getTransitionAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__3__Impl
	rule__Transition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getGroup_3()); }
(rule__Transition__Group_3__0)?
{ after(grammarAccess.getTransitionAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getGroup_4()); }
(rule__Transition__Group_4__0)?
{ after(grammarAccess.getTransitionAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Transition__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group_2__0__Impl
	rule__Transition__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getEventKeyword_2_0()); }

	'event' 

{ after(grammarAccess.getTransitionAccess().getEventKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getEventAssignment_2_1()); }
(rule__Transition__EventAssignment_2_1)
{ after(grammarAccess.getTransitionAccess().getEventAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Transition__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group_3__0__Impl
	rule__Transition__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getSourceKeyword_3_0()); }

	'source' 

{ after(grammarAccess.getTransitionAccess().getSourceKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getSourceAssignment_3_1()); }
(rule__Transition__SourceAssignment_3_1)
{ after(grammarAccess.getTransitionAccess().getSourceAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Transition__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group_4__0__Impl
	rule__Transition__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getTargetKeyword_4_0()); }

	'target' 

{ after(grammarAccess.getTransitionAccess().getTargetKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getTargetAssignment_4_1()); }
(rule__Transition__TargetAssignment_4_1)
{ after(grammarAccess.getTransitionAccess().getTargetAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__State__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group__0__Impl
	rule__State__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getStateAction_0()); }
(

)
{ after(grammarAccess.getStateAccess().getStateAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group__1__Impl
	rule__State__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getStateKeyword_1()); }

	'State' 

{ after(grammarAccess.getStateAccess().getStateKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group__2__Impl
	rule__State__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getNameAssignment_2()); }
(rule__State__NameAssignment_2)
{ after(grammarAccess.getStateAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getGroup_3()); }
(rule__State__Group_3__0)?
{ after(grammarAccess.getStateAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__State__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group_3__0__Impl
	rule__State__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getNestedKeyword_3_0()); }

	'nested' 

{ after(grammarAccess.getStateAccess().getNestedKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getNestedAssignment_3_1()); }
(rule__State__NestedAssignment_3_1)
{ after(grammarAccess.getStateAccess().getNestedAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Initial__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Initial__Group__0__Impl
	rule__Initial__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Initial__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitialAccess().getInitialAction_0()); }
(

)
{ after(grammarAccess.getInitialAccess().getInitialAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Initial__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Initial__Group__1__Impl
	rule__Initial__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Initial__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitialAccess().getInitialKeyword_1()); }

	'Initial' 

{ after(grammarAccess.getInitialAccess().getInitialKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Initial__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Initial__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Initial__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitialAccess().getNameAssignment_2()); }
(rule__Initial__NameAssignment_2)
{ after(grammarAccess.getInitialAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Junction__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Junction__Group__0__Impl
	rule__Junction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Junction__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJunctionAccess().getJunctionAction_0()); }
(

)
{ after(grammarAccess.getJunctionAccess().getJunctionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Junction__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Junction__Group__1__Impl
	rule__Junction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Junction__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJunctionAccess().getJunctionKeyword_1()); }

	'Junction' 

{ after(grammarAccess.getJunctionAccess().getJunctionKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Junction__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Junction__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Junction__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJunctionAccess().getNameAssignment_2()); }
(rule__Junction__NameAssignment_2)
{ after(grammarAccess.getJunctionAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Fork__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Fork__Group__0__Impl
	rule__Fork__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Fork__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForkAccess().getForkAction_0()); }
(

)
{ after(grammarAccess.getForkAccess().getForkAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Fork__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Fork__Group__1__Impl
	rule__Fork__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Fork__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForkAccess().getForkKeyword_1()); }

	'Fork' 

{ after(grammarAccess.getForkAccess().getForkKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Fork__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Fork__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Fork__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForkAccess().getNameAssignment_2()); }
(rule__Fork__NameAssignment_2)
{ after(grammarAccess.getForkAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Join__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Join__Group__0__Impl
	rule__Join__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Join__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoinAccess().getJoinAction_0()); }
(

)
{ after(grammarAccess.getJoinAccess().getJoinAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Join__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Join__Group__1__Impl
	rule__Join__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Join__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoinAccess().getJoinKeyword_1()); }

	'Join' 

{ after(grammarAccess.getJoinAccess().getJoinKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Join__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Join__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Join__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoinAccess().getNameAssignment_2()); }
(rule__Join__NameAssignment_2)
{ after(grammarAccess.getJoinAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Any__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Any__Group__0__Impl
	rule__Any__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Any__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnyAccess().getAnyAction_0()); }
(

)
{ after(grammarAccess.getAnyAccess().getAnyAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Any__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Any__Group__1__Impl
	rule__Any__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Any__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnyAccess().getAnyKeyword_1()); }

	'Any' 

{ after(grammarAccess.getAnyAccess().getAnyKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Any__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Any__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Any__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnyAccess().getNameAssignment_2()); }
(rule__Any__NameAssignment_2)
{ after(grammarAccess.getAnyAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Final__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Final__Group__0__Impl
	rule__Final__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Final__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFinalAccess().getFinalAction_0()); }
(

)
{ after(grammarAccess.getFinalAccess().getFinalAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Final__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Final__Group__1__Impl
	rule__Final__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Final__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFinalAccess().getFinalKeyword_1()); }

	'Final' 

{ after(grammarAccess.getFinalAccess().getFinalKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Final__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Final__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Final__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFinalAccess().getNameAssignment_2()); }
(rule__Final__NameAssignment_2)
{ after(grammarAccess.getFinalAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__StateMachine__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getNameEStringParserRuleCall_2_0()); }
	ruleEString{ after(grammarAccess.getStateMachineAccess().getNameEStringParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__NodesAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getNodesAbstractNodeParserRuleCall_3_1_0()); }
	ruleAbstractNode{ after(grammarAccess.getStateMachineAccess().getNodesAbstractNodeParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__NodesAssignment_3_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getNodesAbstractNodeParserRuleCall_3_2_1_0()); }
	ruleAbstractNode{ after(grammarAccess.getStateMachineAccess().getNodesAbstractNodeParserRuleCall_3_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__TransitionsAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getTransitionsTransitionParserRuleCall_4_1_0()); }
	ruleTransition{ after(grammarAccess.getStateMachineAccess().getTransitionsTransitionParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__TransitionsAssignment_4_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getTransitionsTransitionParserRuleCall_4_2_1_0()); }
	ruleTransition{ after(grammarAccess.getStateMachineAccess().getTransitionsTransitionParserRuleCall_4_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__StateMachinesAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getStateMachinesStateMachineParserRuleCall_5_1_0()); }
	ruleStateMachine{ after(grammarAccess.getStateMachineAccess().getStateMachinesStateMachineParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StateMachine__StateMachinesAssignment_5_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateMachineAccess().getStateMachinesStateMachineParserRuleCall_5_2_1_0()); }
	ruleStateMachine{ after(grammarAccess.getStateMachineAccess().getStateMachinesStateMachineParserRuleCall_5_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__EventAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getEventEStringParserRuleCall_2_1_0()); }
	ruleEString{ after(grammarAccess.getTransitionAccess().getEventEStringParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__SourceAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getSourceAbstractNodeCrossReference_3_1_0()); }
(
{ before(grammarAccess.getTransitionAccess().getSourceAbstractNodeEStringParserRuleCall_3_1_0_1()); }
	ruleEString{ after(grammarAccess.getTransitionAccess().getSourceAbstractNodeEStringParserRuleCall_3_1_0_1()); }
)
{ after(grammarAccess.getTransitionAccess().getSourceAbstractNodeCrossReference_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__TargetAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getTargetAbstractNodeCrossReference_4_1_0()); }
(
{ before(grammarAccess.getTransitionAccess().getTargetAbstractNodeEStringParserRuleCall_4_1_0_1()); }
	ruleEString{ after(grammarAccess.getTransitionAccess().getTargetAbstractNodeEStringParserRuleCall_4_1_0_1()); }
)
{ after(grammarAccess.getTransitionAccess().getTargetAbstractNodeCrossReference_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getNameEStringParserRuleCall_2_0()); }
	ruleEString{ after(grammarAccess.getStateAccess().getNameEStringParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__NestedAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getNestedStateMachineParserRuleCall_3_1_0()); }
	ruleStateMachine{ after(grammarAccess.getStateAccess().getNestedStateMachineParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Initial__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitialAccess().getNameEStringParserRuleCall_2_0()); }
	ruleEString{ after(grammarAccess.getInitialAccess().getNameEStringParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Junction__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJunctionAccess().getNameEStringParserRuleCall_2_0()); }
	ruleEString{ after(grammarAccess.getJunctionAccess().getNameEStringParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Fork__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForkAccess().getNameEStringParserRuleCall_2_0()); }
	ruleEString{ after(grammarAccess.getForkAccess().getNameEStringParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Join__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJoinAccess().getNameEStringParserRuleCall_2_0()); }
	ruleEString{ after(grammarAccess.getJoinAccess().getNameEStringParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Any__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnyAccess().getNameEStringParserRuleCall_2_0()); }
	ruleEString{ after(grammarAccess.getAnyAccess().getNameEStringParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Final__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFinalAccess().getNameEStringParserRuleCall_2_0()); }
	ruleEString{ after(grammarAccess.getFinalAccess().getNameEStringParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


