diff --git a/EMF_EventB/org.eventb.emf.core/src/org/eventb/emf/core/machine/impl/EventImpl.java b/EMF_EventB/org.eventb.emf.core/src/org/eventb/emf/core/machine/impl/EventImpl.java
index 815df8b..f6fe4eb 100644
--- a/EMF_EventB/org.eventb.emf.core/src/org/eventb/emf/core/machine/impl/EventImpl.java
+++ b/EMF_EventB/org.eventb.emf.core/src/org/eventb/emf/core/machine/impl/EventImpl.java
@@ -27,6 +27,7 @@
 import org.eclipse.emf.ecore.util.EDataTypeEList;
 import org.eclipse.emf.ecore.util.EObjectContainmentEList;
 import org.eclipse.emf.ecore.util.EObjectResolvingEList;
+import org.eclipse.emf.ecore.util.EcoreUtil;
 import org.eclipse.emf.ecore.util.InternalEList;
 import org.eventb.emf.core.CorePackage;
 import org.eventb.emf.core.impl.EventBElementImpl;
@@ -41,6 +42,8 @@
 import org.eventb.emf.core.machine.Parameter;
 import org.eventb.emf.core.machine.Witness;
 import org.eventb.emf.core.provider.EventbcoreEditPlugin;
+
+import ac.soton.eventb.textout.utils.TextOutUtil;
 
 /**
  * <!-- begin-user-doc -->
@@ -293,6 +296,27 @@
 		try{
 			//get the current BEvent at the given index (using basicGet to avoid resolving)
 			Event event = ((BasicEList<Event>)getRefines()).basicGet(index);
+			
+			// >>>>>>>>>>>>>>>>>>>>
+			// andy's bit to look for the xtextLink
+			// .. of course will be a proxy
+			if(event.eIsProxy()){
+				String ref = event.getReference();
+				String id = ref.substring(ref.indexOf("xtextLink_"));
+				String replacementName = TextOutUtil.crossRefMap.get(id);
+				//remove incorrect identifier
+				ref = ref.replace("." + id, "::") + replacementName;
+				String uri = getURI().toString();
+				URI appendFragment = URI
+						.createPlatformResourceURI(uri, true).appendFragment(ref);
+				((InternalEObject) event).eSetProxyURI(appendFragment);
+			}
+			
+			//>>>>>>>>>>>>>>>>>>>>>>>>
+			
+			
+			
+			
 			//return the name of the referenced element (either from the unresolved URI fragment or from the resolved element's name)
 			return event.getName();
 		}catch (Exception e){
@@ -601,19 +625,32 @@
 	public EObject eResolveProxy(InternalEObject proxy){
 		if (proxy instanceof Event && proxy.eIsProxy() && getRefines().contains(proxy) && eResource()!=null){
 			URI proxyURI = proxy.eProxyURI();
-			try { 
+			try {
+				
 
 				Machine refinedMachine = ((MachineImpl)eContainer).getRefines().get(0);
 
 				String fragment = proxyURI.fragment();
-				  if (fragment.contains("::")) {
-					  fragment = fragment.substring(fragment.lastIndexOf("::",fragment.length())+2, fragment.length());
-				  }	
-				  if (fragment.contains(".")) {
-					  fragment = fragment.substring(fragment.lastIndexOf(".",fragment.length())+1, fragment.length());
-				  }
-				  
-				String reference = ((EventBElementImpl)proxy).getElementTypePrefix()+"::"+refinedMachine.getName()+"."+fragment;
+				if (fragment.contains("::")) {
+				  fragment = fragment.substring(fragment.lastIndexOf("::",fragment.length())+2, fragment.length());
+				}	
+				if (fragment.contains(".")) {
+				  fragment = fragment.substring(fragment.lastIndexOf(".",fragment.length())+1, fragment.length());
+				}
+				
+				// >>>>>>>>>>>>>>>>>>>>>>>>>
+				// Andy's bit to get the fragment right 
+			    String reference = "";
+			    String path = proxyURI.toString();
+				String properFragment = path.substring(path.indexOf("#")+1, path.length());
+				if(path.contains("textLink_")){  
+					reference = ((EventBElementImpl)proxy).getElementTypePrefix()+"::"+refinedMachine.getName()+"."+properFragment;
+				}
+				else{
+					reference = ((EventBElementImpl)proxy).getElementTypePrefix()+"::"+refinedMachine.getName()+"."+fragment;
+				}
+				
+				//>>>>>>>>>>>>>>>>>>>>>>>>>>>
 				
 				proxy.eSetProxyURI(refinedMachine.getURI().appendFragment(reference));
 				