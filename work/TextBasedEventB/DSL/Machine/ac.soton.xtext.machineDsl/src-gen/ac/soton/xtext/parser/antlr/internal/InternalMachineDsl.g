/*
* generated by Xtext
*/
grammar InternalMachineDsl;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package ac.soton.xtext.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package ac.soton.xtext.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import ac.soton.xtext.services.MachineDslGrammarAccess;

}

@parser::members {

 	private MachineDslGrammarAccess grammarAccess;
 	
    public InternalMachineDslParser(TokenStream input, MachineDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Machine";	
   	}
   	
   	@Override
   	protected MachineDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleMachine
entryRuleMachine returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMachineRule()); }
	 iv_ruleMachine=ruleMachine 
	 { $current=$iv_ruleMachine.current; } 
	 EOF 
;

// Rule Machine
ruleMachine returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getMachineAccess().getMachineAction_0(),
            $current);
    }
)	otherlv_1='machine' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMachineAccess().getMachineKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMachineAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMachineRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3='//' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getMachineAccess().getSolidusSolidusKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMachineAccess().getCommentEStringParserRuleCall_3_1_0()); 
	    }
		lv_comment_4_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMachineRule());
	        }
       		set(
       			$current, 
       			"comment",
        		lv_comment_4_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_5='refines' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getMachineAccess().getRefinesKeyword_4_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getMachineRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getMachineAccess().getRefinesMachineCrossReference_4_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getMachineRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getMachineAccess().getRefinesMachineCrossReference_4_2_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)*)?(	otherlv_8='sees' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getMachineAccess().getSeesKeyword_5_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getMachineRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getMachineAccess().getSeesContextCrossReference_5_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getMachineRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getMachineAccess().getSeesContextCrossReference_5_2_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)*)?(	otherlv_11='variables' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getMachineAccess().getVariablesKeyword_6_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMachineAccess().getVariablesVariableParserRuleCall_6_1_0()); 
	    }
		lv_variables_12_0=ruleVariable		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMachineRule());
	        }
       		add(
       			$current, 
       			"variables",
        		lv_variables_12_0, 
        		"Variable");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMachineAccess().getVariablesVariableParserRuleCall_6_2_0()); 
	    }
		lv_variables_13_0=ruleVariable		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMachineRule());
	        }
       		add(
       			$current, 
       			"variables",
        		lv_variables_13_0, 
        		"Variable");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?(	otherlv_14='invariants' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getMachineAccess().getInvariantsKeyword_7_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMachineAccess().getInvariantsInvariantParserRuleCall_7_1_0()); 
	    }
		lv_invariants_15_0=ruleInvariant		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMachineRule());
	        }
       		add(
       			$current, 
       			"invariants",
        		lv_invariants_15_0, 
        		"Invariant");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMachineAccess().getInvariantsInvariantParserRuleCall_7_2_0()); 
	    }
		lv_invariants_16_0=ruleInvariant		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMachineRule());
	        }
       		add(
       			$current, 
       			"invariants",
        		lv_invariants_16_0, 
        		"Invariant");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?(	otherlv_17='variant' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getMachineAccess().getVariantKeyword_8_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMachineAccess().getVariantVariantParserRuleCall_8_1_0()); 
	    }
		lv_variant_18_0=ruleVariant		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMachineRule());
	        }
       		set(
       			$current, 
       			"variant",
        		lv_variant_18_0, 
        		"Variant");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_19='events' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getMachineAccess().getEventsKeyword_9_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMachineAccess().getEventsEventParserRuleCall_9_1_0()); 
	    }
		lv_events_20_0=ruleevent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMachineRule());
	        }
       		add(
       			$current, 
       			"events",
        		lv_events_20_0, 
        		"event");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMachineAccess().getEventsEventParserRuleCall_9_2_0()); 
	    }
		lv_events_21_0=ruleevent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMachineRule());
	        }
       		add(
       			$current, 
       			"events",
        		lv_events_21_0, 
        		"event");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?	otherlv_22='end' 
    {
    	newLeafNode(otherlv_22, grammarAccess.getMachineAccess().getEndKeyword_10());
    }
)
;





// Entry rule entryRuleEString
entryRuleEString returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getEStringRule()); } 
	 iv_ruleEString=ruleEString 
	 { $current=$iv_ruleEString.current.getText(); }  
	 EOF 
;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_STRING_0=RULE_STRING    {
		$current.merge(this_STRING_0);
    }

    { 
    newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); 
    }

    |    this_ID_1=RULE_ID    {
		$current.merge(this_ID_1);
    }

    { 
    newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleVariable
entryRuleVariable returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVariableRule()); }
	 iv_ruleVariable=ruleVariable 
	 { $current=$iv_ruleVariable.current; } 
	 EOF 
;

// Rule Variable
ruleVariable returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getVariableAccess().getVariableAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getVariableAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariableRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2='//' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getVariableAccess().getSolidusSolidusKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVariableAccess().getCommentEStringParserRuleCall_2_1_0()); 
	    }
		lv_comment_3_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariableRule());
	        }
       		set(
       			$current, 
       			"comment",
        		lv_comment_3_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleInvariant
entryRuleInvariant returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInvariantRule()); }
	 iv_ruleInvariant=ruleInvariant 
	 { $current=$iv_ruleInvariant.current; } 
	 EOF 
;

// Rule Invariant
ruleInvariant returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='@' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getInvariantAccess().getCommercialAtKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInvariantAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInvariantRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_theorem_2_0=	'theorem' 
    {
        newLeafNode(lv_theorem_2_0, grammarAccess.getInvariantAccess().getTheoremTheoremKeyword_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInvariantRule());
	        }
       		setWithLastConsumed($current, "theorem", true, "theorem");
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getInvariantAccess().getPredicateEStringParserRuleCall_3_0()); 
	    }
		lv_predicate_3_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInvariantRule());
	        }
       		set(
       			$current, 
       			"predicate",
        		lv_predicate_3_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)?(	otherlv_4='//' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getInvariantAccess().getSolidusSolidusKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInvariantAccess().getCommentEStringParserRuleCall_4_1_0()); 
	    }
		lv_comment_5_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInvariantRule());
	        }
       		set(
       			$current, 
       			"comment",
        		lv_comment_5_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleVariant
entryRuleVariant returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVariantRule()); }
	 iv_ruleVariant=ruleVariant 
	 { $current=$iv_ruleVariant.current; } 
	 EOF 
;

// Rule Variant
ruleVariant returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Variant' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getVariantAccess().getVariantKeyword_0());
    }
	otherlv_1='expression' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getVariantAccess().getExpressionKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVariantAccess().getExpressionEStringParserRuleCall_2_0()); 
	    }
		lv_expression_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariantRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)?(	otherlv_3='//' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getVariantAccess().getSolidusSolidusKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVariantAccess().getCommentEStringParserRuleCall_3_1_0()); 
	    }
		lv_comment_4_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariantRule());
	        }
       		set(
       			$current, 
       			"comment",
        		lv_comment_4_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleevent
entryRuleevent returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEventRule()); }
	 iv_ruleevent=ruleevent 
	 { $current=$iv_ruleevent.current; } 
	 EOF 
;

// Rule event
ruleevent returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getEventAccess().getEventAction_0(),
            $current);
    }
)	otherlv_1='event' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getEventAccess().getEventKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEventAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEventRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_extended_3_0=	'extended' 
    {
        newLeafNode(lv_extended_3_0, grammarAccess.getEventAccess().getExtendedExtendedKeyword_3_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEventRule());
	        }
       		setWithLastConsumed($current, "extended", true, "extended");
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getEventAccess().getConvergenceConvergenceEnumRuleCall_4_0()); 
	    }
		lv_convergence_4_0=ruleConvergence		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEventRule());
	        }
       		set(
       			$current, 
       			"convergence",
        		lv_convergence_4_0, 
        		"Convergence");
	        afterParserOrEnumRuleCall();
	    }

)
)?(	otherlv_5='//' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getEventAccess().getSolidusSolidusKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEventAccess().getCommentEStringParserRuleCall_5_1_0()); 
	    }
		lv_comment_6_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEventRule());
	        }
       		set(
       			$current, 
       			"comment",
        		lv_comment_6_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_7='refines' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getEventAccess().getRefinesKeyword_6_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getEventRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getEventAccess().getRefinesEventCrossReference_6_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_9=',' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getEventAccess().getCommaKeyword_6_2_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getEventRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getEventAccess().getRefinesEventCrossReference_6_2_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*)?(	otherlv_11='when' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getEventAccess().getWhenKeyword_7_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEventAccess().getGuardsGuardParserRuleCall_7_1_0()); 
	    }
		lv_guards_12_0=ruleGuard		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEventRule());
	        }
       		add(
       			$current, 
       			"guards",
        		lv_guards_12_0, 
        		"Guard");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getEventAccess().getGuardsGuardParserRuleCall_7_2_0()); 
	    }
		lv_guards_13_0=ruleGuard		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEventRule());
	        }
       		add(
       			$current, 
       			"guards",
        		lv_guards_13_0, 
        		"Guard");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?(	otherlv_14='any' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getEventAccess().getAnyKeyword_8_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEventAccess().getParametersParameterParserRuleCall_8_1_0()); 
	    }
		lv_parameters_15_0=ruleParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEventRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_15_0, 
        		"Parameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getEventAccess().getParametersParameterParserRuleCall_8_2_0()); 
	    }
		lv_parameters_16_0=ruleParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEventRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_16_0, 
        		"Parameter");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_17='where' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getEventAccess().getWhereKeyword_8_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEventAccess().getGuardsGuardParserRuleCall_8_4_0()); 
	    }
		lv_guards_18_0=ruleGuard		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEventRule());
	        }
       		add(
       			$current, 
       			"guards",
        		lv_guards_18_0, 
        		"Guard");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getEventAccess().getGuardsGuardParserRuleCall_8_5_0()); 
	    }
		lv_guards_19_0=ruleGuard		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEventRule());
	        }
       		add(
       			$current, 
       			"guards",
        		lv_guards_19_0, 
        		"Guard");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?(	otherlv_20='with' 
    {
    	newLeafNode(otherlv_20, grammarAccess.getEventAccess().getWithKeyword_9_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEventAccess().getWitnessesWitnessParserRuleCall_9_1_0()); 
	    }
		lv_witnesses_21_0=ruleWitness		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEventRule());
	        }
       		add(
       			$current, 
       			"witnesses",
        		lv_witnesses_21_0, 
        		"Witness");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getEventAccess().getWitnessesWitnessParserRuleCall_9_2_0()); 
	    }
		lv_witnesses_22_0=ruleWitness		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEventRule());
	        }
       		add(
       			$current, 
       			"witnesses",
        		lv_witnesses_22_0, 
        		"Witness");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?(	otherlv_23='then' 
    {
    	newLeafNode(otherlv_23, grammarAccess.getEventAccess().getThenKeyword_10_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEventAccess().getActionsActionParserRuleCall_10_1_0()); 
	    }
		lv_actions_24_0=ruleAction		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEventRule());
	        }
       		add(
       			$current, 
       			"actions",
        		lv_actions_24_0, 
        		"Action");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getEventAccess().getActionsActionParserRuleCall_10_2_0()); 
	    }
		lv_actions_25_0=ruleAction		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEventRule());
	        }
       		add(
       			$current, 
       			"actions",
        		lv_actions_25_0, 
        		"Action");
	        afterParserOrEnumRuleCall();
	    }

)
)*)?	otherlv_26='end' 
    {
    	newLeafNode(otherlv_26, grammarAccess.getEventAccess().getEndKeyword_11());
    }
)
;







// Entry rule entryRuleParameter
entryRuleParameter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getParameterRule()); }
	 iv_ruleParameter=ruleParameter 
	 { $current=$iv_ruleParameter.current; } 
	 EOF 
;

// Rule Parameter
ruleParameter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getParameterAccess().getParameterAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getParameterAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParameterRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2='//' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getParameterAccess().getSolidusSolidusKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getParameterAccess().getCommentEStringParserRuleCall_2_1_0()); 
	    }
		lv_comment_3_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParameterRule());
	        }
       		set(
       			$current, 
       			"comment",
        		lv_comment_3_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleGuard
entryRuleGuard returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGuardRule()); }
	 iv_ruleGuard=ruleGuard 
	 { $current=$iv_ruleGuard.current; } 
	 EOF 
;

// Rule Guard
ruleGuard returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='@' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getGuardAccess().getCommercialAtKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGuardAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGuardRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_theorem_2_0=	'theorem' 
    {
        newLeafNode(lv_theorem_2_0, grammarAccess.getGuardAccess().getTheoremTheoremKeyword_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGuardRule());
	        }
       		setWithLastConsumed($current, "theorem", true, "theorem");
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getGuardAccess().getPredicateEStringParserRuleCall_3_0()); 
	    }
		lv_predicate_3_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGuardRule());
	        }
       		set(
       			$current, 
       			"predicate",
        		lv_predicate_3_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4='//' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getGuardAccess().getSolidusSolidusKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGuardAccess().getCommentEStringParserRuleCall_4_1_0()); 
	    }
		lv_comment_5_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGuardRule());
	        }
       		set(
       			$current, 
       			"comment",
        		lv_comment_5_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleWitness
entryRuleWitness returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getWitnessRule()); }
	 iv_ruleWitness=ruleWitness 
	 { $current=$iv_ruleWitness.current; } 
	 EOF 
;

// Rule Witness
ruleWitness returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_localGenerated_0_0=	'localGenerated' 
    {
        newLeafNode(lv_localGenerated_0_0, grammarAccess.getWitnessAccess().getLocalGeneratedLocalGeneratedKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getWitnessRule());
	        }
       		setWithLastConsumed($current, "localGenerated", true, "localGenerated");
	    }

)
)?	otherlv_1='@' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getWitnessAccess().getCommercialAtKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWitnessAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWitnessRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getWitnessAccess().getPredicateEStringParserRuleCall_3_0()); 
	    }
		lv_predicate_3_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWitnessRule());
	        }
       		set(
       			$current, 
       			"predicate",
        		lv_predicate_3_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)?(	otherlv_4='//' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getWitnessAccess().getSolidusSolidusKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWitnessAccess().getCommentEStringParserRuleCall_4_1_0()); 
	    }
		lv_comment_5_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWitnessRule());
	        }
       		set(
       			$current, 
       			"comment",
        		lv_comment_5_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleAction
entryRuleAction returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getActionRule()); }
	 iv_ruleAction=ruleAction 
	 { $current=$iv_ruleAction.current; } 
	 EOF 
;

// Rule Action
ruleAction returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='@' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getActionAccess().getCommercialAtKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getActionAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActionRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getActionAccess().getActionEStringParserRuleCall_2_0()); 
	    }
		lv_action_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActionRule());
	        }
       		set(
       			$current, 
       			"action",
        		lv_action_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)?(	otherlv_3='//' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getActionAccess().getSolidusSolidusKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getActionAccess().getCommentEStringParserRuleCall_3_1_0()); 
	    }
		lv_comment_4_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActionRule());
	        }
       		set(
       			$current, 
       			"comment",
        		lv_comment_4_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Rule Convergence
ruleConvergence returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='ordinary' 
	{
        $current = grammarAccess.getConvergenceAccess().getOrdinaryEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getConvergenceAccess().getOrdinaryEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='convergent' 
	{
        $current = grammarAccess.getConvergenceAccess().getConvergentEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getConvergenceAccess().getConvergentEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='anticipated' 
	{
        $current = grammarAccess.getConvergenceAccess().getAnticipatedEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getConvergenceAccess().getAnticipatedEnumLiteralDeclaration_2()); 
    }
));



RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


