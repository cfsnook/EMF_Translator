/*
* generated by Xtext
*/
package ac.soton.xtext.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class MachineDslGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class MachineElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Machine");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMachineAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cMachineKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cGreaterThanSignKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cCommentAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cCommentEStringParserRuleCall_3_1_0 = (RuleCall)cCommentAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cRefinesKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cRefinesAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cRefinesMachineCrossReference_4_1_0 = (CrossReference)cRefinesAssignment_4_1.eContents().get(0);
		private final RuleCall cRefinesMachineEStringParserRuleCall_4_1_0_1 = (RuleCall)cRefinesMachineCrossReference_4_1_0.eContents().get(1);
		private final Assignment cRefinesAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final CrossReference cRefinesMachineCrossReference_4_2_0 = (CrossReference)cRefinesAssignment_4_2.eContents().get(0);
		private final RuleCall cRefinesMachineEStringParserRuleCall_4_2_0_1 = (RuleCall)cRefinesMachineCrossReference_4_2_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cSeesKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cSeesAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final CrossReference cSeesContextCrossReference_5_1_0 = (CrossReference)cSeesAssignment_5_1.eContents().get(0);
		private final RuleCall cSeesContextEStringParserRuleCall_5_1_0_1 = (RuleCall)cSeesContextCrossReference_5_1_0.eContents().get(1);
		private final Assignment cSeesAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final CrossReference cSeesContextCrossReference_5_2_0 = (CrossReference)cSeesAssignment_5_2.eContents().get(0);
		private final RuleCall cSeesContextEStringParserRuleCall_5_2_0_1 = (RuleCall)cSeesContextCrossReference_5_2_0.eContents().get(1);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cVariablesKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cVariablesAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cVariablesVariableParserRuleCall_6_1_0 = (RuleCall)cVariablesAssignment_6_1.eContents().get(0);
		private final Assignment cVariablesAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cVariablesVariableParserRuleCall_6_2_0 = (RuleCall)cVariablesAssignment_6_2.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cInvariantsKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cInvariantsAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cInvariantsInvariantParserRuleCall_7_1_0 = (RuleCall)cInvariantsAssignment_7_1.eContents().get(0);
		private final Assignment cInvariantsAssignment_7_2 = (Assignment)cGroup_7.eContents().get(2);
		private final RuleCall cInvariantsInvariantParserRuleCall_7_2_0 = (RuleCall)cInvariantsAssignment_7_2.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cVariantKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cVariantAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cVariantVariantParserRuleCall_8_1_0 = (RuleCall)cVariantAssignment_8_1.eContents().get(0);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cEventsKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Assignment cEventsAssignment_9_1 = (Assignment)cGroup_9.eContents().get(1);
		private final RuleCall cEventsEventParserRuleCall_9_1_0 = (RuleCall)cEventsAssignment_9_1.eContents().get(0);
		private final Assignment cEventsAssignment_9_2 = (Assignment)cGroup_9.eContents().get(2);
		private final RuleCall cEventsEventParserRuleCall_9_2_0 = (RuleCall)cEventsAssignment_9_2.eContents().get(0);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Assignment cExtensionsAssignment_10_0 = (Assignment)cGroup_10.eContents().get(0);
		private final RuleCall cExtensionsAbstractExtensionParserRuleCall_10_0_0 = (RuleCall)cExtensionsAssignment_10_0.eContents().get(0);
		private final Assignment cExtensionsAssignment_10_1 = (Assignment)cGroup_10.eContents().get(1);
		private final RuleCall cExtensionsAbstractExtensionParserRuleCall_10_1_0 = (RuleCall)cExtensionsAssignment_10_1.eContents().get(0);
		private final Keyword cEndKeyword_11 = (Keyword)cGroup.eContents().get(11);
		
		//Machine:
		//	{Machine} //	(localGenerated?='localGenerated')?
		//	"machine" name=EString //	'{'
		//	//		('internalId' internalId=EString)?
		//	(">" comment=EString)? ("refines" / *'('* / refines+=[Machine|EString] / *","* / refines+=[Machine|EString]*)? / *')'* /
		//	("sees" / *'('* / sees+=[context::Context|EString] / *","* / sees+=[context::Context|EString]*)? / *')'* / //		('annotations' '{' annotations+=Annotation ( "," annotations+=Annotation)* '}' )?
		//	//		('attributes' '{' attributes+=StringToAttributeMapEntry ( "," attributes+=StringToAttributeMapEntry)* '}' )?
		//	("variables" / *'{'* / variables+=Variable / *","* / variables+=Variable*)? / *'}'* / ("invariants" / *'{'* /
		//	invariants+=Invariant invariants+=Invariant*)? / *'}'* / ("variant" variant=Variant)? ("events" / *'{'* / events+=event
		//	/ *","* / events+=event*)? / *'}'* / / *'extensions'* / / *'{'* / (extensions+=AbstractExtension / *","* /
		//	extensions+=AbstractExtension*)? / *'}'* / //	'}'
		//	"end";
		public ParserRule getRule() { return rule; }

		//{Machine} //	(localGenerated?='localGenerated')?
		//"machine" name=EString //	'{'
		////		('internalId' internalId=EString)?
		//(">" comment=EString)? ("refines" / *'('* / refines+=[Machine|EString] / *","* / refines+=[Machine|EString]*)? / *')'* /
		//("sees" / *'('* / sees+=[context::Context|EString] / *","* / sees+=[context::Context|EString]*)? / *')'* / //		('annotations' '{' annotations+=Annotation ( "," annotations+=Annotation)* '}' )?
		////		('attributes' '{' attributes+=StringToAttributeMapEntry ( "," attributes+=StringToAttributeMapEntry)* '}' )?
		//("variables" / *'{'* / variables+=Variable / *","* / variables+=Variable*)? / *'}'* / ("invariants" / *'{'* /
		//invariants+=Invariant invariants+=Invariant*)? / *'}'* / ("variant" variant=Variant)? ("events" / *'{'* / events+=event
		/// *","* / events+=event*)? / *'}'* / / *'extensions'* / / *'{'* / (extensions+=AbstractExtension / *","* /
		//extensions+=AbstractExtension*)? / *'}'* / //	'}'
		//"end"
		public Group getGroup() { return cGroup; }

		//{Machine}
		public Action getMachineAction_0() { return cMachineAction_0; }

		////	(localGenerated?='localGenerated')?
		//"machine"
		public Keyword getMachineKeyword_1() { return cMachineKeyword_1; }

		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }

		//(">" comment=EString)?
		public Group getGroup_3() { return cGroup_3; }

		//">"
		public Keyword getGreaterThanSignKeyword_3_0() { return cGreaterThanSignKeyword_3_0; }

		//comment=EString
		public Assignment getCommentAssignment_3_1() { return cCommentAssignment_3_1; }

		//EString
		public RuleCall getCommentEStringParserRuleCall_3_1_0() { return cCommentEStringParserRuleCall_3_1_0; }

		//("refines" / *'('* / refines+=[Machine|EString] / *","* / refines+=[Machine|EString]*)?
		public Group getGroup_4() { return cGroup_4; }

		//"refines"
		public Keyword getRefinesKeyword_4_0() { return cRefinesKeyword_4_0; }

		/// *'('* / refines+=[Machine|EString]
		public Assignment getRefinesAssignment_4_1() { return cRefinesAssignment_4_1; }

		//[Machine|EString]
		public CrossReference getRefinesMachineCrossReference_4_1_0() { return cRefinesMachineCrossReference_4_1_0; }

		//EString
		public RuleCall getRefinesMachineEStringParserRuleCall_4_1_0_1() { return cRefinesMachineEStringParserRuleCall_4_1_0_1; }

		/// *","* / refines+=[Machine|EString]*
		public Assignment getRefinesAssignment_4_2() { return cRefinesAssignment_4_2; }

		//[Machine|EString]
		public CrossReference getRefinesMachineCrossReference_4_2_0() { return cRefinesMachineCrossReference_4_2_0; }

		//EString
		public RuleCall getRefinesMachineEStringParserRuleCall_4_2_0_1() { return cRefinesMachineEStringParserRuleCall_4_2_0_1; }

		//("sees" / *'('* / sees+=[context::Context|EString] / *","* / sees+=[context::Context|EString]*)?
		public Group getGroup_5() { return cGroup_5; }

		//"sees"
		public Keyword getSeesKeyword_5_0() { return cSeesKeyword_5_0; }

		/// *'('* / sees+=[context::Context|EString]
		public Assignment getSeesAssignment_5_1() { return cSeesAssignment_5_1; }

		//[context::Context|EString]
		public CrossReference getSeesContextCrossReference_5_1_0() { return cSeesContextCrossReference_5_1_0; }

		//EString
		public RuleCall getSeesContextEStringParserRuleCall_5_1_0_1() { return cSeesContextEStringParserRuleCall_5_1_0_1; }

		/// *","* / sees+=[context::Context|EString]*
		public Assignment getSeesAssignment_5_2() { return cSeesAssignment_5_2; }

		//[context::Context|EString]
		public CrossReference getSeesContextCrossReference_5_2_0() { return cSeesContextCrossReference_5_2_0; }

		//EString
		public RuleCall getSeesContextEStringParserRuleCall_5_2_0_1() { return cSeesContextEStringParserRuleCall_5_2_0_1; }

		//("variables" / *'{'* / variables+=Variable / *","* / variables+=Variable*)?
		public Group getGroup_6() { return cGroup_6; }

		//"variables"
		public Keyword getVariablesKeyword_6_0() { return cVariablesKeyword_6_0; }

		/// *'{'* / variables+=Variable
		public Assignment getVariablesAssignment_6_1() { return cVariablesAssignment_6_1; }

		//Variable
		public RuleCall getVariablesVariableParserRuleCall_6_1_0() { return cVariablesVariableParserRuleCall_6_1_0; }

		/// *","* / variables+=Variable*
		public Assignment getVariablesAssignment_6_2() { return cVariablesAssignment_6_2; }

		//Variable
		public RuleCall getVariablesVariableParserRuleCall_6_2_0() { return cVariablesVariableParserRuleCall_6_2_0; }

		//("invariants" / *'{'* / invariants+=Invariant invariants+=Invariant*)?
		public Group getGroup_7() { return cGroup_7; }

		//"invariants"
		public Keyword getInvariantsKeyword_7_0() { return cInvariantsKeyword_7_0; }

		/// *'{'* / invariants+=Invariant
		public Assignment getInvariantsAssignment_7_1() { return cInvariantsAssignment_7_1; }

		//Invariant
		public RuleCall getInvariantsInvariantParserRuleCall_7_1_0() { return cInvariantsInvariantParserRuleCall_7_1_0; }

		//invariants+=Invariant*
		public Assignment getInvariantsAssignment_7_2() { return cInvariantsAssignment_7_2; }

		//Invariant
		public RuleCall getInvariantsInvariantParserRuleCall_7_2_0() { return cInvariantsInvariantParserRuleCall_7_2_0; }

		//("variant" variant=Variant)?
		public Group getGroup_8() { return cGroup_8; }

		//"variant"
		public Keyword getVariantKeyword_8_0() { return cVariantKeyword_8_0; }

		//variant=Variant
		public Assignment getVariantAssignment_8_1() { return cVariantAssignment_8_1; }

		//Variant
		public RuleCall getVariantVariantParserRuleCall_8_1_0() { return cVariantVariantParserRuleCall_8_1_0; }

		//("events" / *'{'* / events+=event / *","* / events+=event*)?
		public Group getGroup_9() { return cGroup_9; }

		//"events"
		public Keyword getEventsKeyword_9_0() { return cEventsKeyword_9_0; }

		/// *'{'* / events+=event
		public Assignment getEventsAssignment_9_1() { return cEventsAssignment_9_1; }

		//event
		public RuleCall getEventsEventParserRuleCall_9_1_0() { return cEventsEventParserRuleCall_9_1_0; }

		/// *","* / events+=event*
		public Assignment getEventsAssignment_9_2() { return cEventsAssignment_9_2; }

		//event
		public RuleCall getEventsEventParserRuleCall_9_2_0() { return cEventsEventParserRuleCall_9_2_0; }

		/// *'extensions'* / / *'{'* / (extensions+=AbstractExtension / *","* / extensions+=AbstractExtension*)?
		public Group getGroup_10() { return cGroup_10; }

		/// *'extensions'* / / *'{'* / extensions+=AbstractExtension
		public Assignment getExtensionsAssignment_10_0() { return cExtensionsAssignment_10_0; }

		//AbstractExtension
		public RuleCall getExtensionsAbstractExtensionParserRuleCall_10_0_0() { return cExtensionsAbstractExtensionParserRuleCall_10_0_0; }

		/// *","* / extensions+=AbstractExtension*
		public Assignment getExtensionsAssignment_10_1() { return cExtensionsAssignment_10_1; }

		//AbstractExtension
		public RuleCall getExtensionsAbstractExtensionParserRuleCall_10_1_0() { return cExtensionsAbstractExtensionParserRuleCall_10_1_0; }

		////	'}'
		//"end"
		public Keyword getEndKeyword_11() { return cEndKeyword_11; }
	}

	public class AbstractExtensionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AbstractExtension");
		private final RuleCall cStatemachineParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//AbstractExtension returns core::AbstractExtension:
		//	Statemachine;
		public ParserRule getRule() { return rule; }

		//Statemachine
		public RuleCall getStatemachineParserRuleCall() { return cStatemachineParserRuleCall; }
	}

	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		////Annotation returns core::Annotation:
		////	{core::Annotation}
		////	'Annotation'
		////	'{'
		////		('source' source=EString)?
		////		('references' '(' references+=[ecore::EObject|EString] ( "," references+=[ecore::EObject|EString])* ')' )?
		////		('annotations' '{' annotations+=Annotation ( "," annotations+=Annotation)* '}' )?
		////		('details' '{' details+=StringToStringMapEntry ( "," details+=StringToStringMapEntry)* '}' )?
		////		('contents' '{' contents+=EObject ( "," contents+=EObject)* '}' )?
		////	'}';
		////StringToAttributeMapEntry returns core::StringToAttributeMapEntry:
		////	'StringToAttributeMapEntry'
		////	'{'
		////		'key' key=EString
		////		('value' value=Attribute)?
		////	'}';
		////EBoolean returns ecore::EBoolean:
		////	'true' | 'false';
		//EString returns ecore::EString:
		//	STRING | ID;
		public ParserRule getRule() { return rule; }

		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }

		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}

	public class VariableElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Variable");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cVariableAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cGreaterThanSignKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cCommentAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cCommentEStringParserRuleCall_2_1_0 = (RuleCall)cCommentAssignment_2_1.eContents().get(0);
		
		////Context returns context::Context:
		////	{context::Context}
		////	(localGenerated?='localGenerated')?
		////	'Context'
		////	name=EString
		////	'{'
		////		('internalId' internalId=EString)?
		////		('>' comment=EString)?
		////		('extends' '(' extends+=[context::Context|EString] ( "," extends+=[context::Context|EString])* ')' )?
		////		('annotations' '{' annotations+=Annotation ( "," annotations+=Annotation)* '}' )?
		////		('extensions' '{' extensions+=AbstractExtension ( "," extensions+=AbstractExtension)* '}' )?
		////		('attributes' '{' attributes+=StringToAttributeMapEntry ( "," attributes+=StringToAttributeMapEntry)* '}' )?
		////		('sets' '{' sets+=CarrierSet ( "," sets+=CarrierSet)* '}' )?
		////		('constants' '{' constants+=Constant ( "," constants+=Constant)* '}' )?
		////		('axioms' '{' axioms+=Axiom ( "," axioms+=Axiom)* '}' )?
		////	'}';
		////		('annotations' '{' annotations+=Annotation ( "," annotations+=Annotation)* '}' )?
		////		('extensions' '{' extensions+=AbstractExtension ( "," extensions+=AbstractExtension)* '}' )?
		////		('attributes' '{' attributes+=StringToAttributeMapEntry ( "," attributes+=StringToAttributeMapEntry)* '}' )?
		////	'}'
		//Variable:
		//	{Variable} //	(localGenerated?='localGenerated')?
		//	//	'Variable'
		//	name=EString //	'{'
		//	//		('internalId' internalId=EString)?
		//	(">" comment=EString)?;
		public ParserRule getRule() { return rule; }

		//{Variable} //	(localGenerated?='localGenerated')?
		////	'Variable'
		//name=EString //	'{'
		////		('internalId' internalId=EString)?
		//(">" comment=EString)?
		public Group getGroup() { return cGroup; }

		//{Variable}
		public Action getVariableAction_0() { return cVariableAction_0; }

		////	(localGenerated?='localGenerated')?
		////	'Variable'
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }

		//(">" comment=EString)?
		public Group getGroup_2() { return cGroup_2; }

		//">"
		public Keyword getGreaterThanSignKeyword_2_0() { return cGreaterThanSignKeyword_2_0; }

		//comment=EString
		public Assignment getCommentAssignment_2_1() { return cCommentAssignment_2_1; }

		//EString
		public RuleCall getCommentEStringParserRuleCall_2_1_0() { return cCommentEStringParserRuleCall_2_1_0; }
	}

	public class InvariantElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Invariant");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCommercialAtKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cPredicateAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cPredicateEStringParserRuleCall_2_0 = (RuleCall)cPredicateAssignment_2.eContents().get(0);
		private final Assignment cTheoremAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cTheoremTheoremKeyword_3_0 = (Keyword)cTheoremAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cGreaterThanSignKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cCommentAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cCommentEStringParserRuleCall_4_1_0 = (RuleCall)cCommentAssignment_4_1.eContents().get(0);
		
		////		('annotations' '{' annotations+=Annotation ( "," annotations+=Annotation)* '}' )?
		////		('extensions' '{' extensions+=AbstractExtension ( "," extensions+=AbstractExtension)* '}' )?
		////		('attributes' '{' attributes+=StringToAttributeMapEntry ( "," attributes+=StringToAttributeMapEntry)* '}' )?
		////	'}'
		//Invariant: //	(localGenerated?='localGenerated')?
		////	'Invariant'
		//	"@" name=EString //	'{'
		//	//		('internalId' internalId=EString)?
		//	//		'is' 
		//	predicate=EString? theorem?="theorem"? (">" comment=EString)?;
		public ParserRule getRule() { return rule; }

		////	(localGenerated?='localGenerated')?
		////	'Invariant'
		//"@" name=EString //	'{'
		////		('internalId' internalId=EString)?
		////		'is' 
		//predicate=EString? theorem?="theorem"? (">" comment=EString)?
		public Group getGroup() { return cGroup; }

		////	(localGenerated?='localGenerated')?
		////	'Invariant'
		//"@"
		public Keyword getCommercialAtKeyword_0() { return cCommercialAtKeyword_0; }

		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }

		////	'{'
		////		('internalId' internalId=EString)?
		////		'is' 
		//predicate=EString?
		public Assignment getPredicateAssignment_2() { return cPredicateAssignment_2; }

		//EString
		public RuleCall getPredicateEStringParserRuleCall_2_0() { return cPredicateEStringParserRuleCall_2_0; }

		//theorem?="theorem"?
		public Assignment getTheoremAssignment_3() { return cTheoremAssignment_3; }

		//"theorem"
		public Keyword getTheoremTheoremKeyword_3_0() { return cTheoremTheoremKeyword_3_0; }

		//(">" comment=EString)?
		public Group getGroup_4() { return cGroup_4; }

		//">"
		public Keyword getGreaterThanSignKeyword_4_0() { return cGreaterThanSignKeyword_4_0; }

		//comment=EString
		public Assignment getCommentAssignment_4_1() { return cCommentAssignment_4_1; }

		//EString
		public RuleCall getCommentEStringParserRuleCall_4_1_0() { return cCommentEStringParserRuleCall_4_1_0; }
	}

	public class VariantElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Variant");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cVariantAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cVariantKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cExpressionKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cExpressionAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cExpressionEStringParserRuleCall_3_0 = (RuleCall)cExpressionAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cGreaterThanSignKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cCommentAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cCommentEStringParserRuleCall_4_1_0 = (RuleCall)cCommentAssignment_4_1.eContents().get(0);
		
		////		('annotations' '{' annotations+=Annotation ( "," annotations+=Annotation)* '}' )?
		////		('extensions' '{' extensions+=AbstractExtension ( "," extensions+=AbstractExtension)* '}' )?
		////		('attributes' '{' attributes+=StringToAttributeMapEntry ( "," attributes+=StringToAttributeMapEntry)* '}' )?
		////	'}'
		//Variant:
		//	{Variant} //	(localGenerated?='localGenerated')?
		//	"Variant" //	'{'
		//	//		('internalId' internalId=EString)?
		//	"expression" expression=EString? (">" comment=EString)?;
		public ParserRule getRule() { return rule; }

		//{Variant} //	(localGenerated?='localGenerated')?
		//"Variant" //	'{'
		////		('internalId' internalId=EString)?
		//"expression" expression=EString? (">" comment=EString)?
		public Group getGroup() { return cGroup; }

		//{Variant}
		public Action getVariantAction_0() { return cVariantAction_0; }

		////	(localGenerated?='localGenerated')?
		//"Variant"
		public Keyword getVariantKeyword_1() { return cVariantKeyword_1; }

		////	'{'
		////		('internalId' internalId=EString)?
		//"expression"
		public Keyword getExpressionKeyword_2() { return cExpressionKeyword_2; }

		//expression=EString?
		public Assignment getExpressionAssignment_3() { return cExpressionAssignment_3; }

		//EString
		public RuleCall getExpressionEStringParserRuleCall_3_0() { return cExpressionEStringParserRuleCall_3_0; }

		//(">" comment=EString)?
		public Group getGroup_4() { return cGroup_4; }

		//">"
		public Keyword getGreaterThanSignKeyword_4_0() { return cGreaterThanSignKeyword_4_0; }

		//comment=EString
		public Assignment getCommentAssignment_4_1() { return cCommentAssignment_4_1; }

		//EString
		public RuleCall getCommentEStringParserRuleCall_4_1_0() { return cCommentEStringParserRuleCall_4_1_0; }
	}

	public class EventElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "event");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cEventAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cEventKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Assignment cExtendedAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cExtendedExtendedKeyword_3_0 = (Keyword)cExtendedAssignment_3.eContents().get(0);
		private final Assignment cConvergenceAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cConvergenceConvergenceEnumRuleCall_4_0 = (RuleCall)cConvergenceAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cGreaterThanSignKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cCommentAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cCommentEStringParserRuleCall_5_1_0 = (RuleCall)cCommentAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cRefinesKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cRefinesAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final CrossReference cRefinesEventCrossReference_6_1_0 = (CrossReference)cRefinesAssignment_6_1.eContents().get(0);
		private final RuleCall cRefinesEventQStringParserRuleCall_6_1_0_1 = (RuleCall)cRefinesEventCrossReference_6_1_0.eContents().get(1);
		private final Assignment cRefinesAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final CrossReference cRefinesEventCrossReference_6_2_0 = (CrossReference)cRefinesAssignment_6_2.eContents().get(0);
		private final RuleCall cRefinesEventQStringParserRuleCall_6_2_0_1 = (RuleCall)cRefinesEventCrossReference_6_2_0.eContents().get(1);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cAnyKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cParametersAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cParametersParameterParserRuleCall_7_1_0 = (RuleCall)cParametersAssignment_7_1.eContents().get(0);
		private final Assignment cParametersAssignment_7_2 = (Assignment)cGroup_7.eContents().get(2);
		private final RuleCall cParametersParameterParserRuleCall_7_2_0 = (RuleCall)cParametersAssignment_7_2.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cWhereKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cGuardsAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cGuardsGuardParserRuleCall_8_1_0 = (RuleCall)cGuardsAssignment_8_1.eContents().get(0);
		private final Assignment cGuardsAssignment_8_2 = (Assignment)cGroup_8.eContents().get(2);
		private final RuleCall cGuardsGuardParserRuleCall_8_2_0 = (RuleCall)cGuardsAssignment_8_2.eContents().get(0);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cWithKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Assignment cWitnessesAssignment_9_1 = (Assignment)cGroup_9.eContents().get(1);
		private final RuleCall cWitnessesWitnessParserRuleCall_9_1_0 = (RuleCall)cWitnessesAssignment_9_1.eContents().get(0);
		private final Assignment cWitnessesAssignment_9_2 = (Assignment)cGroup_9.eContents().get(2);
		private final RuleCall cWitnessesWitnessParserRuleCall_9_2_0 = (RuleCall)cWitnessesAssignment_9_2.eContents().get(0);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cThenKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Assignment cActionsAssignment_10_1 = (Assignment)cGroup_10.eContents().get(1);
		private final RuleCall cActionsActionParserRuleCall_10_1_0 = (RuleCall)cActionsAssignment_10_1.eContents().get(0);
		private final Assignment cActionsAssignment_10_2 = (Assignment)cGroup_10.eContents().get(2);
		private final RuleCall cActionsActionParserRuleCall_10_2_0 = (RuleCall)cActionsAssignment_10_2.eContents().get(0);
		private final Keyword cEndKeyword_11 = (Keyword)cGroup.eContents().get(11);
		
		//event returns Event:
		//	{Event} //	(localGenerated?='localGenerated')?
		//	"event" name=EString extended?="extended"? //		('internalId' internalId=EString)?
		//	convergence=Convergence? (">" comment=EString)? ("refines" refines+=[Event|QString] refines+=[Event|QString]*)? //		('annotations' '{' annotations+=Annotation ( "," annotations+=Annotation)* '}' )?
		//	//		('extensions' '{' extensions+=AbstractExtension ( "," extensions+=AbstractExtension)* '}' )?
		//	//		('attributes' '{' attributes+=StringToAttributeMapEntry ( "," attributes+=StringToAttributeMapEntry)* '}' )?
		//	("any" parameters+=Parameter parameters+=Parameter*)? ("where" guards+=Guard guards+=Guard*)? ("with"
		//	witnesses+=Witness witnesses+=Witness*)? ("then" actions+=Action actions+=Action*)? "end";
		public ParserRule getRule() { return rule; }

		//{Event} //	(localGenerated?='localGenerated')?
		//"event" name=EString extended?="extended"? //		('internalId' internalId=EString)?
		//convergence=Convergence? (">" comment=EString)? ("refines" refines+=[Event|QString] refines+=[Event|QString]*)? //		('annotations' '{' annotations+=Annotation ( "," annotations+=Annotation)* '}' )?
		////		('extensions' '{' extensions+=AbstractExtension ( "," extensions+=AbstractExtension)* '}' )?
		////		('attributes' '{' attributes+=StringToAttributeMapEntry ( "," attributes+=StringToAttributeMapEntry)* '}' )?
		//("any" parameters+=Parameter parameters+=Parameter*)? ("where" guards+=Guard guards+=Guard*)? ("with" witnesses+=Witness
		//witnesses+=Witness*)? ("then" actions+=Action actions+=Action*)? "end"
		public Group getGroup() { return cGroup; }

		//{Event}
		public Action getEventAction_0() { return cEventAction_0; }

		////	(localGenerated?='localGenerated')?
		//"event"
		public Keyword getEventKeyword_1() { return cEventKeyword_1; }

		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }

		//extended?="extended"?
		public Assignment getExtendedAssignment_3() { return cExtendedAssignment_3; }

		//"extended"
		public Keyword getExtendedExtendedKeyword_3_0() { return cExtendedExtendedKeyword_3_0; }

		//convergence=Convergence?
		public Assignment getConvergenceAssignment_4() { return cConvergenceAssignment_4; }

		//Convergence
		public RuleCall getConvergenceConvergenceEnumRuleCall_4_0() { return cConvergenceConvergenceEnumRuleCall_4_0; }

		//(">" comment=EString)?
		public Group getGroup_5() { return cGroup_5; }

		//">"
		public Keyword getGreaterThanSignKeyword_5_0() { return cGreaterThanSignKeyword_5_0; }

		//comment=EString
		public Assignment getCommentAssignment_5_1() { return cCommentAssignment_5_1; }

		//EString
		public RuleCall getCommentEStringParserRuleCall_5_1_0() { return cCommentEStringParserRuleCall_5_1_0; }

		//("refines" refines+=[Event|QString] refines+=[Event|QString]*)?
		public Group getGroup_6() { return cGroup_6; }

		//"refines"
		public Keyword getRefinesKeyword_6_0() { return cRefinesKeyword_6_0; }

		//refines+=[Event|QString]
		public Assignment getRefinesAssignment_6_1() { return cRefinesAssignment_6_1; }

		//[Event|QString]
		public CrossReference getRefinesEventCrossReference_6_1_0() { return cRefinesEventCrossReference_6_1_0; }

		//QString
		public RuleCall getRefinesEventQStringParserRuleCall_6_1_0_1() { return cRefinesEventQStringParserRuleCall_6_1_0_1; }

		//refines+=[Event|QString]*
		public Assignment getRefinesAssignment_6_2() { return cRefinesAssignment_6_2; }

		//[Event|QString]
		public CrossReference getRefinesEventCrossReference_6_2_0() { return cRefinesEventCrossReference_6_2_0; }

		//QString
		public RuleCall getRefinesEventQStringParserRuleCall_6_2_0_1() { return cRefinesEventQStringParserRuleCall_6_2_0_1; }

		//("any" parameters+=Parameter parameters+=Parameter*)?
		public Group getGroup_7() { return cGroup_7; }

		//"any"
		public Keyword getAnyKeyword_7_0() { return cAnyKeyword_7_0; }

		//parameters+=Parameter
		public Assignment getParametersAssignment_7_1() { return cParametersAssignment_7_1; }

		//Parameter
		public RuleCall getParametersParameterParserRuleCall_7_1_0() { return cParametersParameterParserRuleCall_7_1_0; }

		//parameters+=Parameter*
		public Assignment getParametersAssignment_7_2() { return cParametersAssignment_7_2; }

		//Parameter
		public RuleCall getParametersParameterParserRuleCall_7_2_0() { return cParametersParameterParserRuleCall_7_2_0; }

		//("where" guards+=Guard guards+=Guard*)?
		public Group getGroup_8() { return cGroup_8; }

		//"where"
		public Keyword getWhereKeyword_8_0() { return cWhereKeyword_8_0; }

		//guards+=Guard
		public Assignment getGuardsAssignment_8_1() { return cGuardsAssignment_8_1; }

		//Guard
		public RuleCall getGuardsGuardParserRuleCall_8_1_0() { return cGuardsGuardParserRuleCall_8_1_0; }

		//guards+=Guard*
		public Assignment getGuardsAssignment_8_2() { return cGuardsAssignment_8_2; }

		//Guard
		public RuleCall getGuardsGuardParserRuleCall_8_2_0() { return cGuardsGuardParserRuleCall_8_2_0; }

		//("with" witnesses+=Witness witnesses+=Witness*)?
		public Group getGroup_9() { return cGroup_9; }

		//"with"
		public Keyword getWithKeyword_9_0() { return cWithKeyword_9_0; }

		//witnesses+=Witness
		public Assignment getWitnessesAssignment_9_1() { return cWitnessesAssignment_9_1; }

		//Witness
		public RuleCall getWitnessesWitnessParserRuleCall_9_1_0() { return cWitnessesWitnessParserRuleCall_9_1_0; }

		//witnesses+=Witness*
		public Assignment getWitnessesAssignment_9_2() { return cWitnessesAssignment_9_2; }

		//Witness
		public RuleCall getWitnessesWitnessParserRuleCall_9_2_0() { return cWitnessesWitnessParserRuleCall_9_2_0; }

		//("then" actions+=Action actions+=Action*)?
		public Group getGroup_10() { return cGroup_10; }

		//"then"
		public Keyword getThenKeyword_10_0() { return cThenKeyword_10_0; }

		//actions+=Action
		public Assignment getActionsAssignment_10_1() { return cActionsAssignment_10_1; }

		//Action
		public RuleCall getActionsActionParserRuleCall_10_1_0() { return cActionsActionParserRuleCall_10_1_0; }

		//actions+=Action*
		public Assignment getActionsAssignment_10_2() { return cActionsAssignment_10_2; }

		//Action
		public RuleCall getActionsActionParserRuleCall_10_2_0() { return cActionsActionParserRuleCall_10_2_0; }

		//"end"
		public Keyword getEndKeyword_11() { return cEndKeyword_11; }
	}

	public class QStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "QString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cGroup_1.eContents().get(1);
		private final Keyword cMiddleDotKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1_1_1 = (RuleCall)cGroup_1_1.eContents().get(1);
		
		//QString returns ecore::EString:
		//	STRING | ID ("?" ID)*;
		public ParserRule getRule() { return rule; }

		//STRING | ID ("?" ID)*
		public Alternatives getAlternatives() { return cAlternatives; }

		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }

		//ID ("?" ID)*
		public Group getGroup_1() { return cGroup_1; }

		//ID
		public RuleCall getIDTerminalRuleCall_1_0() { return cIDTerminalRuleCall_1_0; }

		//("?" ID)*
		public Group getGroup_1_1() { return cGroup_1_1; }

		//"?"
		public Keyword getMiddleDotKeyword_1_1_0() { return cMiddleDotKeyword_1_1_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_1_1_1() { return cIDTerminalRuleCall_1_1_1; }
	}

	public class ParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Parameter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cParameterAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cGreaterThanSignKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cCommentAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cCommentEStringParserRuleCall_2_1_0 = (RuleCall)cCommentAssignment_2_1.eContents().get(0);
		
		////		('annotations' '{' annotations+=Annotation ( "," annotations+=Annotation)* '}' )?
		////		('extensions' '{' extensions+=AbstractExtension ( "," extensions+=AbstractExtension)* '}' )?
		////		('attributes' '{' attributes+=StringToAttributeMapEntry ( "," attributes+=StringToAttributeMapEntry)* '}' )?
		////	'}'
		//Parameter:
		//	{Parameter} //	(localGenerated?='localGenerated')?
		//	//	'Parameter'
		//	name=EString //	'{'
		//	//		('internalId' internalId=EString)?
		//	(">" comment=EString)?;
		public ParserRule getRule() { return rule; }

		//{Parameter} //	(localGenerated?='localGenerated')?
		////	'Parameter'
		//name=EString //	'{'
		////		('internalId' internalId=EString)?
		//(">" comment=EString)?
		public Group getGroup() { return cGroup; }

		//{Parameter}
		public Action getParameterAction_0() { return cParameterAction_0; }

		////	(localGenerated?='localGenerated')?
		////	'Parameter'
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }

		//(">" comment=EString)?
		public Group getGroup_2() { return cGroup_2; }

		//">"
		public Keyword getGreaterThanSignKeyword_2_0() { return cGreaterThanSignKeyword_2_0; }

		//comment=EString
		public Assignment getCommentAssignment_2_1() { return cCommentAssignment_2_1; }

		//EString
		public RuleCall getCommentEStringParserRuleCall_2_1_0() { return cCommentEStringParserRuleCall_2_1_0; }
	}

	public class GuardElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Guard");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCommercialAtKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cPredicateAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cPredicateEStringParserRuleCall_2_0 = (RuleCall)cPredicateAssignment_2.eContents().get(0);
		private final Assignment cTheoremAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cTheoremTheoremKeyword_3_0 = (Keyword)cTheoremAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cGreaterThanSignKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cCommentAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cCommentEStringParserRuleCall_4_1_0 = (RuleCall)cCommentAssignment_4_1.eContents().get(0);
		
		////		('annotations' '{' annotations+=Annotation ( "," annotations+=Annotation)* '}' )?
		////		('extensions' '{' extensions+=AbstractExtension ( "," extensions+=AbstractExtension)* '}' )?
		////		('attributes' '{' attributes+=StringToAttributeMapEntry ( "," attributes+=StringToAttributeMapEntry)* '}' )?
		////	'}'
		//Guard: //	(localGenerated?='localGenerated')?
		////	'Guard'
		//	"@" name=EString //	'{'
		//	//		('internalId' internalId=EString)?
		//	predicate=EString? theorem?="theorem"? (">" comment=EString)?;
		public ParserRule getRule() { return rule; }

		////	(localGenerated?='localGenerated')?
		////	'Guard'
		//"@" name=EString //	'{'
		////		('internalId' internalId=EString)?
		//predicate=EString? theorem?="theorem"? (">" comment=EString)?
		public Group getGroup() { return cGroup; }

		////	(localGenerated?='localGenerated')?
		////	'Guard'
		//"@"
		public Keyword getCommercialAtKeyword_0() { return cCommercialAtKeyword_0; }

		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }

		////	'{'
		////		('internalId' internalId=EString)?
		//predicate=EString?
		public Assignment getPredicateAssignment_2() { return cPredicateAssignment_2; }

		//EString
		public RuleCall getPredicateEStringParserRuleCall_2_0() { return cPredicateEStringParserRuleCall_2_0; }

		//theorem?="theorem"?
		public Assignment getTheoremAssignment_3() { return cTheoremAssignment_3; }

		//"theorem"
		public Keyword getTheoremTheoremKeyword_3_0() { return cTheoremTheoremKeyword_3_0; }

		//(">" comment=EString)?
		public Group getGroup_4() { return cGroup_4; }

		//">"
		public Keyword getGreaterThanSignKeyword_4_0() { return cGreaterThanSignKeyword_4_0; }

		//comment=EString
		public Assignment getCommentAssignment_4_1() { return cCommentAssignment_4_1; }

		//EString
		public RuleCall getCommentEStringParserRuleCall_4_1_0() { return cCommentEStringParserRuleCall_4_1_0; }
	}

	public class WitnessElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Witness");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cLocalGeneratedAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cLocalGeneratedLocalGeneratedKeyword_0_0 = (Keyword)cLocalGeneratedAssignment_0.eContents().get(0);
		private final Keyword cCommercialAtKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Assignment cPredicateAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cPredicateEStringParserRuleCall_3_0 = (RuleCall)cPredicateAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cGreaterThanSignKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cCommentAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cCommentEStringParserRuleCall_4_1_0 = (RuleCall)cCommentAssignment_4_1.eContents().get(0);
		
		////		('annotations' '{' annotations+=Annotation ( "," annotations+=Annotation)* '}' )?
		////		('extensions' '{' extensions+=AbstractExtension ( "," extensions+=AbstractExtension)* '}' )?
		////		('attributes' '{' attributes+=StringToAttributeMapEntry ( "," attributes+=StringToAttributeMapEntry)* '}' )?
		////	'}'
		//Witness:
		//	localGenerated?="localGenerated"? //	'witness'
		//	"@" name=EString //	'{'
		//	//		('internalId' internalId=EString)?
		//	/ *'predicate'* / predicate=EString? (">" comment=EString)?;
		public ParserRule getRule() { return rule; }

		//localGenerated?="localGenerated"? //	'witness'
		//"@" name=EString //	'{'
		////		('internalId' internalId=EString)?
		/// *'predicate'* / predicate=EString? (">" comment=EString)?
		public Group getGroup() { return cGroup; }

		//localGenerated?="localGenerated"?
		public Assignment getLocalGeneratedAssignment_0() { return cLocalGeneratedAssignment_0; }

		//"localGenerated"
		public Keyword getLocalGeneratedLocalGeneratedKeyword_0_0() { return cLocalGeneratedLocalGeneratedKeyword_0_0; }

		////	'witness'
		//"@"
		public Keyword getCommercialAtKeyword_1() { return cCommercialAtKeyword_1; }

		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }

		////	'{'
		////		('internalId' internalId=EString)?
		/// *'predicate'* / predicate=EString?
		public Assignment getPredicateAssignment_3() { return cPredicateAssignment_3; }

		//EString
		public RuleCall getPredicateEStringParserRuleCall_3_0() { return cPredicateEStringParserRuleCall_3_0; }

		//(">" comment=EString)?
		public Group getGroup_4() { return cGroup_4; }

		//">"
		public Keyword getGreaterThanSignKeyword_4_0() { return cGreaterThanSignKeyword_4_0; }

		//comment=EString
		public Assignment getCommentAssignment_4_1() { return cCommentAssignment_4_1; }

		//EString
		public RuleCall getCommentEStringParserRuleCall_4_1_0() { return cCommentEStringParserRuleCall_4_1_0; }
	}

	public class ActionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Action");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCommercialAtKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cActionAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cActionEStringParserRuleCall_2_0 = (RuleCall)cActionAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cGreaterThanSignKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cCommentAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cCommentEStringParserRuleCall_3_1_0 = (RuleCall)cCommentAssignment_3_1.eContents().get(0);
		
		////		('annotations' '{' annotations+=Annotation ( "," annotations+=Annotation)* '}' )?
		////		('extensions' '{' extensions+=AbstractExtension ( "," extensions+=AbstractExtension)* '}' )?
		////		('attributes' '{' attributes+=StringToAttributeMapEntry ( "," attributes+=StringToAttributeMapEntry)* '}' )?
		////	'}'
		//Action: //	(localGenerated?='localGenerated')?
		////	'Action'
		//	"@" name=EString //	'{'
		//	//		('internalId' internalId=EString)?
		//	//		'then' 
		//	action=EString? (">" comment=EString)?;
		public ParserRule getRule() { return rule; }

		////	(localGenerated?='localGenerated')?
		////	'Action'
		//"@" name=EString //	'{'
		////		('internalId' internalId=EString)?
		////		'then' 
		//action=EString? (">" comment=EString)?
		public Group getGroup() { return cGroup; }

		////	(localGenerated?='localGenerated')?
		////	'Action'
		//"@"
		public Keyword getCommercialAtKeyword_0() { return cCommercialAtKeyword_0; }

		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }

		////	'{'
		////		('internalId' internalId=EString)?
		////		'then' 
		//action=EString?
		public Assignment getActionAssignment_2() { return cActionAssignment_2; }

		//EString
		public RuleCall getActionEStringParserRuleCall_2_0() { return cActionEStringParserRuleCall_2_0; }

		//(">" comment=EString)?
		public Group getGroup_3() { return cGroup_3; }

		//">"
		public Keyword getGreaterThanSignKeyword_3_0() { return cGreaterThanSignKeyword_3_0; }

		//comment=EString
		public Assignment getCommentAssignment_3_1() { return cCommentAssignment_3_1; }

		//EString
		public RuleCall getCommentEStringParserRuleCall_3_1_0() { return cCommentEStringParserRuleCall_3_1_0; }
	}

	public class StatemachineElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Statemachine");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cStatemachineKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cGreaterThanSignKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cCommentAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cCommentEStringParserRuleCall_2_1_0 = (RuleCall)cCommentAssignment_2_1.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cTranslationKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cTranslationAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cTranslationTranslationKindEnumRuleCall_3_1_0 = (RuleCall)cTranslationAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cElaboratesKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cElaboratesAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cElaboratesEventBNamedCrossReference_4_1_0 = (CrossReference)cElaboratesAssignment_4_1.eContents().get(0);
		private final RuleCall cElaboratesEventBNamedEStringParserRuleCall_4_1_0_1 = (RuleCall)cElaboratesEventBNamedCrossReference_4_1_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cRefinesKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cRefinesAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final CrossReference cRefinesStatemachineCrossReference_5_1_0 = (CrossReference)cRefinesAssignment_5_1.eContents().get(0);
		private final RuleCall cRefinesStatemachineEStringParserRuleCall_5_1_0_1 = (RuleCall)cRefinesStatemachineCrossReference_5_1_0.eContents().get(1);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cNodesKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cNodesAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cNodesAbstractNodeParserRuleCall_6_1_0 = (RuleCall)cNodesAssignment_6_1.eContents().get(0);
		private final Group cGroup_6_2 = (Group)cGroup_6.eContents().get(2);
		private final Keyword cCommaKeyword_6_2_0 = (Keyword)cGroup_6_2.eContents().get(0);
		private final Assignment cNodesAssignment_6_2_1 = (Assignment)cGroup_6_2.eContents().get(1);
		private final RuleCall cNodesAbstractNodeParserRuleCall_6_2_1_0 = (RuleCall)cNodesAssignment_6_2_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cTransitionsKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cTransitionsAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cTransitionsTransitionParserRuleCall_7_1_0 = (RuleCall)cTransitionsAssignment_7_1.eContents().get(0);
		private final Assignment cTransitionsAssignment_7_2 = (Assignment)cGroup_7.eContents().get(2);
		private final RuleCall cTransitionsTransitionParserRuleCall_7_2_0 = (RuleCall)cTransitionsAssignment_7_2.eContents().get(0);
		private final Keyword cEndKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//Statemachine: //	(localGenerated?='localGenerated')?
		//	"Statemachine" name=EString //	'{'
		//	//		('internalId' internalId=EString)?
		//	//		('dataKind' dataKind=DataKind)?
		//	//		'extensionId' extensionId=EString
		//	//		('selfName' selfName=EString)?
		//	(">" comment=EString)? ("translation" translation=TranslationKind)? ("elaborates"
		//	elaborates=[core::EventBNamed|EString])? ("refines" refines=[Statemachine|EString])? //		('instances' instances=[core::EventBNamedCommentedElement|EString])?
		//	//		('annotations' '{' annotations+=Annotation ( "," annotations+=Annotation)* '}' )?
		//	//		('extensions' '{' extensions+=AbstractExtension ( "," extensions+=AbstractExtension)* '}' )?
		//	//		('attributes' '{' attributes+=StringToAttributeMapEntry ( "," attributes+=StringToAttributeMapEntry)* '}' )?
		//	("nodes" / *'{'* / nodes+=AbstractNode ("," nodes+=AbstractNode)*)? / *'}'* / ("transitions" / *'{'* /
		//	transitions+=Transition / *","* / transitions+=Transition*)? / *'}'* / //	'}'
		//	"end";
		public ParserRule getRule() { return rule; }

		////	(localGenerated?='localGenerated')?
		//"Statemachine" name=EString //	'{'
		////		('internalId' internalId=EString)?
		////		('dataKind' dataKind=DataKind)?
		////		'extensionId' extensionId=EString
		////		('selfName' selfName=EString)?
		//(">" comment=EString)? ("translation" translation=TranslationKind)? ("elaborates"
		//elaborates=[core::EventBNamed|EString])? ("refines" refines=[Statemachine|EString])? //		('instances' instances=[core::EventBNamedCommentedElement|EString])?
		////		('annotations' '{' annotations+=Annotation ( "," annotations+=Annotation)* '}' )?
		////		('extensions' '{' extensions+=AbstractExtension ( "," extensions+=AbstractExtension)* '}' )?
		////		('attributes' '{' attributes+=StringToAttributeMapEntry ( "," attributes+=StringToAttributeMapEntry)* '}' )?
		//("nodes" / *'{'* / nodes+=AbstractNode ("," nodes+=AbstractNode)*)? / *'}'* / ("transitions" / *'{'* / transitions+=Transition
		/// *","* / transitions+=Transition*)? / *'}'* / //	'}'
		//"end"
		public Group getGroup() { return cGroup; }

		////	(localGenerated?='localGenerated')?
		//"Statemachine"
		public Keyword getStatemachineKeyword_0() { return cStatemachineKeyword_0; }

		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }

		//(">" comment=EString)?
		public Group getGroup_2() { return cGroup_2; }

		//">"
		public Keyword getGreaterThanSignKeyword_2_0() { return cGreaterThanSignKeyword_2_0; }

		//comment=EString
		public Assignment getCommentAssignment_2_1() { return cCommentAssignment_2_1; }

		//EString
		public RuleCall getCommentEStringParserRuleCall_2_1_0() { return cCommentEStringParserRuleCall_2_1_0; }

		//("translation" translation=TranslationKind)?
		public Group getGroup_3() { return cGroup_3; }

		//"translation"
		public Keyword getTranslationKeyword_3_0() { return cTranslationKeyword_3_0; }

		//translation=TranslationKind
		public Assignment getTranslationAssignment_3_1() { return cTranslationAssignment_3_1; }

		//TranslationKind
		public RuleCall getTranslationTranslationKindEnumRuleCall_3_1_0() { return cTranslationTranslationKindEnumRuleCall_3_1_0; }

		//("elaborates" elaborates=[core::EventBNamed|EString])?
		public Group getGroup_4() { return cGroup_4; }

		//"elaborates"
		public Keyword getElaboratesKeyword_4_0() { return cElaboratesKeyword_4_0; }

		//elaborates=[core::EventBNamed|EString]
		public Assignment getElaboratesAssignment_4_1() { return cElaboratesAssignment_4_1; }

		//[core::EventBNamed|EString]
		public CrossReference getElaboratesEventBNamedCrossReference_4_1_0() { return cElaboratesEventBNamedCrossReference_4_1_0; }

		//EString
		public RuleCall getElaboratesEventBNamedEStringParserRuleCall_4_1_0_1() { return cElaboratesEventBNamedEStringParserRuleCall_4_1_0_1; }

		//("refines" refines=[Statemachine|EString])?
		public Group getGroup_5() { return cGroup_5; }

		//"refines"
		public Keyword getRefinesKeyword_5_0() { return cRefinesKeyword_5_0; }

		//refines=[Statemachine|EString]
		public Assignment getRefinesAssignment_5_1() { return cRefinesAssignment_5_1; }

		//[Statemachine|EString]
		public CrossReference getRefinesStatemachineCrossReference_5_1_0() { return cRefinesStatemachineCrossReference_5_1_0; }

		//EString
		public RuleCall getRefinesStatemachineEStringParserRuleCall_5_1_0_1() { return cRefinesStatemachineEStringParserRuleCall_5_1_0_1; }

		//("nodes" / *'{'* / nodes+=AbstractNode ("," nodes+=AbstractNode)*)?
		public Group getGroup_6() { return cGroup_6; }

		//"nodes"
		public Keyword getNodesKeyword_6_0() { return cNodesKeyword_6_0; }

		/// *'{'* / nodes+=AbstractNode
		public Assignment getNodesAssignment_6_1() { return cNodesAssignment_6_1; }

		//AbstractNode
		public RuleCall getNodesAbstractNodeParserRuleCall_6_1_0() { return cNodesAbstractNodeParserRuleCall_6_1_0; }

		//("," nodes+=AbstractNode)*
		public Group getGroup_6_2() { return cGroup_6_2; }

		//","
		public Keyword getCommaKeyword_6_2_0() { return cCommaKeyword_6_2_0; }

		//nodes+=AbstractNode
		public Assignment getNodesAssignment_6_2_1() { return cNodesAssignment_6_2_1; }

		//AbstractNode
		public RuleCall getNodesAbstractNodeParserRuleCall_6_2_1_0() { return cNodesAbstractNodeParserRuleCall_6_2_1_0; }

		//("transitions" / *'{'* / transitions+=Transition / *","* / transitions+=Transition*)?
		public Group getGroup_7() { return cGroup_7; }

		//"transitions"
		public Keyword getTransitionsKeyword_7_0() { return cTransitionsKeyword_7_0; }

		/// *'{'* / transitions+=Transition
		public Assignment getTransitionsAssignment_7_1() { return cTransitionsAssignment_7_1; }

		//Transition
		public RuleCall getTransitionsTransitionParserRuleCall_7_1_0() { return cTransitionsTransitionParserRuleCall_7_1_0; }

		/// *","* / transitions+=Transition*
		public Assignment getTransitionsAssignment_7_2() { return cTransitionsAssignment_7_2; }

		//Transition
		public RuleCall getTransitionsTransitionParserRuleCall_7_2_0() { return cTransitionsTransitionParserRuleCall_7_2_0; }

		////	'}'
		//"end"
		public Keyword getEndKeyword_8() { return cEndKeyword_8; }
	}

	public class TransitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Transition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTransitionAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cExtendedAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cExtendedExtendedKeyword_1_0 = (Keyword)cExtendedAssignment_1.eContents().get(0);
		private final Keyword cTransitionKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cGreaterThanSignKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cCommentAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cCommentEStringParserRuleCall_3_1_0 = (RuleCall)cCommentAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cElaboratesKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cElaboratesAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cElaboratesEventCrossReference_4_1_0 = (CrossReference)cElaboratesAssignment_4_1.eContents().get(0);
		private final RuleCall cElaboratesEventQStringParserRuleCall_4_1_0_1 = (RuleCall)cElaboratesEventCrossReference_4_1_0.eContents().get(1);
		private final Assignment cElaboratesAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final CrossReference cElaboratesEventCrossReference_4_2_0 = (CrossReference)cElaboratesAssignment_4_2.eContents().get(0);
		private final RuleCall cElaboratesEventQStringParserRuleCall_4_2_0_1 = (RuleCall)cElaboratesEventCrossReference_4_2_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cSourceKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cSourceAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final CrossReference cSourceAbstractNodeCrossReference_5_1_0 = (CrossReference)cSourceAssignment_5_1.eContents().get(0);
		private final RuleCall cSourceAbstractNodeQStringParserRuleCall_5_1_0_1 = (RuleCall)cSourceAbstractNodeCrossReference_5_1_0.eContents().get(1);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cTargetKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cTargetAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final CrossReference cTargetAbstractNodeCrossReference_6_1_0 = (CrossReference)cTargetAssignment_6_1.eContents().get(0);
		private final RuleCall cTargetAbstractNodeQStringParserRuleCall_6_1_0_1 = (RuleCall)cTargetAbstractNodeCrossReference_6_1_0.eContents().get(1);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cParametersKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cParametersAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cParametersTypedParameterParserRuleCall_7_1_0 = (RuleCall)cParametersAssignment_7_1.eContents().get(0);
		private final Assignment cParametersAssignment_7_2 = (Assignment)cGroup_7.eContents().get(2);
		private final RuleCall cParametersTypedParameterParserRuleCall_7_2_0 = (RuleCall)cParametersAssignment_7_2.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cWhereKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cGuardsAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cGuardsGuardParserRuleCall_8_1_0 = (RuleCall)cGuardsAssignment_8_1.eContents().get(0);
		private final Assignment cGuardsAssignment_8_2 = (Assignment)cGroup_8.eContents().get(2);
		private final RuleCall cGuardsGuardParserRuleCall_8_2_0 = (RuleCall)cGuardsAssignment_8_2.eContents().get(0);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cWithKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Assignment cWitnessesAssignment_9_1 = (Assignment)cGroup_9.eContents().get(1);
		private final RuleCall cWitnessesWitnessParserRuleCall_9_1_0 = (RuleCall)cWitnessesAssignment_9_1.eContents().get(0);
		private final Assignment cWitnessesAssignment_9_2 = (Assignment)cGroup_9.eContents().get(2);
		private final RuleCall cWitnessesWitnessParserRuleCall_9_2_0 = (RuleCall)cWitnessesAssignment_9_2.eContents().get(0);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cThenKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Assignment cActionsAssignment_10_1 = (Assignment)cGroup_10.eContents().get(1);
		private final RuleCall cActionsActionParserRuleCall_10_1_0 = (RuleCall)cActionsAssignment_10_1.eContents().get(0);
		private final Assignment cActionsAssignment_10_2 = (Assignment)cGroup_10.eContents().get(2);
		private final RuleCall cActionsActionParserRuleCall_10_2_0 = (RuleCall)cActionsAssignment_10_2.eContents().get(0);
		private final Keyword cEndKeyword_11 = (Keyword)cGroup.eContents().get(11);
		
		////	'}'
		//Transition:
		//	{Transition} //	(localGenerated?='localGenerated')?
		//	extended?="extended"? "Transition" //	'{'
		//	//		('internalId' internalId=EString)?
		//	(">" comment=EString)? ("elaborates" / *'('* / elaborates+=[Event|QString] / *","* / elaborates+=[Event|QString]*)? / *')'* /
		//	("source" source=[AbstractNode|QString])? ("target" target=[AbstractNode|QString])? //		('targetContainer' targetContainer=[core::EventBElement|EString])?
		//	//		('annotations' '{' annotations+=Annotation ( "," annotations+=Annotation)* '}' )?
		//	//		('extensions' '{' extensions+=AbstractExtension ( "," extensions+=AbstractExtension)* '}' )?
		//	//		('attributes' '{' attributes+=StringToAttributeMapEntry ( "," attributes+=StringToAttributeMapEntry)* '}' )?
		//	("parameters" / *'{'* / parameters+=TypedParameter / *","* / parameters+=TypedParameter*)? / *'}'* / ("where" / *'{'* /
		//	guards+=Guard / *","* / guards+=Guard*)? / *'}'* / ("with" / *'{'* / witnesses+=Witness / *","* / witnesses+=Witness*)?
		//	/ *'}'* / ("then" / *'{'* / actions+=Action / *","* / actions+=Action*)? / *'}'* / "end";
		public ParserRule getRule() { return rule; }

		//{Transition} //	(localGenerated?='localGenerated')?
		//extended?="extended"? "Transition" //	'{'
		////		('internalId' internalId=EString)?
		//(">" comment=EString)? ("elaborates" / *'('* / elaborates+=[Event|QString] / *","* / elaborates+=[Event|QString]*)? / *')'* /
		//("source" source=[AbstractNode|QString])? ("target" target=[AbstractNode|QString])? //		('targetContainer' targetContainer=[core::EventBElement|EString])?
		////		('annotations' '{' annotations+=Annotation ( "," annotations+=Annotation)* '}' )?
		////		('extensions' '{' extensions+=AbstractExtension ( "," extensions+=AbstractExtension)* '}' )?
		////		('attributes' '{' attributes+=StringToAttributeMapEntry ( "," attributes+=StringToAttributeMapEntry)* '}' )?
		//("parameters" / *'{'* / parameters+=TypedParameter / *","* / parameters+=TypedParameter*)? / *'}'* / ("where" / *'{'* /
		//guards+=Guard / *","* / guards+=Guard*)? / *'}'* / ("with" / *'{'* / witnesses+=Witness / *","* / witnesses+=Witness*)? / *'}'* /
		//("then" / *'{'* / actions+=Action / *","* / actions+=Action*)? / *'}'* / "end"
		public Group getGroup() { return cGroup; }

		//{Transition}
		public Action getTransitionAction_0() { return cTransitionAction_0; }

		//extended?="extended"?
		public Assignment getExtendedAssignment_1() { return cExtendedAssignment_1; }

		//"extended"
		public Keyword getExtendedExtendedKeyword_1_0() { return cExtendedExtendedKeyword_1_0; }

		//"Transition"
		public Keyword getTransitionKeyword_2() { return cTransitionKeyword_2; }

		//(">" comment=EString)?
		public Group getGroup_3() { return cGroup_3; }

		//">"
		public Keyword getGreaterThanSignKeyword_3_0() { return cGreaterThanSignKeyword_3_0; }

		//comment=EString
		public Assignment getCommentAssignment_3_1() { return cCommentAssignment_3_1; }

		//EString
		public RuleCall getCommentEStringParserRuleCall_3_1_0() { return cCommentEStringParserRuleCall_3_1_0; }

		//("elaborates" / *'('* / elaborates+=[Event|QString] / *","* / elaborates+=[Event|QString]*)?
		public Group getGroup_4() { return cGroup_4; }

		//"elaborates"
		public Keyword getElaboratesKeyword_4_0() { return cElaboratesKeyword_4_0; }

		/// *'('* / elaborates+=[Event|QString]
		public Assignment getElaboratesAssignment_4_1() { return cElaboratesAssignment_4_1; }

		//[Event|QString]
		public CrossReference getElaboratesEventCrossReference_4_1_0() { return cElaboratesEventCrossReference_4_1_0; }

		//QString
		public RuleCall getElaboratesEventQStringParserRuleCall_4_1_0_1() { return cElaboratesEventQStringParserRuleCall_4_1_0_1; }

		/// *","* / elaborates+=[Event|QString]*
		public Assignment getElaboratesAssignment_4_2() { return cElaboratesAssignment_4_2; }

		//[Event|QString]
		public CrossReference getElaboratesEventCrossReference_4_2_0() { return cElaboratesEventCrossReference_4_2_0; }

		//QString
		public RuleCall getElaboratesEventQStringParserRuleCall_4_2_0_1() { return cElaboratesEventQStringParserRuleCall_4_2_0_1; }

		//("source" source=[AbstractNode|QString])?
		public Group getGroup_5() { return cGroup_5; }

		//"source"
		public Keyword getSourceKeyword_5_0() { return cSourceKeyword_5_0; }

		//source=[AbstractNode|QString]
		public Assignment getSourceAssignment_5_1() { return cSourceAssignment_5_1; }

		//[AbstractNode|QString]
		public CrossReference getSourceAbstractNodeCrossReference_5_1_0() { return cSourceAbstractNodeCrossReference_5_1_0; }

		//QString
		public RuleCall getSourceAbstractNodeQStringParserRuleCall_5_1_0_1() { return cSourceAbstractNodeQStringParserRuleCall_5_1_0_1; }

		//("target" target=[AbstractNode|QString])?
		public Group getGroup_6() { return cGroup_6; }

		//"target"
		public Keyword getTargetKeyword_6_0() { return cTargetKeyword_6_0; }

		//target=[AbstractNode|QString]
		public Assignment getTargetAssignment_6_1() { return cTargetAssignment_6_1; }

		//[AbstractNode|QString]
		public CrossReference getTargetAbstractNodeCrossReference_6_1_0() { return cTargetAbstractNodeCrossReference_6_1_0; }

		//QString
		public RuleCall getTargetAbstractNodeQStringParserRuleCall_6_1_0_1() { return cTargetAbstractNodeQStringParserRuleCall_6_1_0_1; }

		//("parameters" / *'{'* / parameters+=TypedParameter / *","* / parameters+=TypedParameter*)?
		public Group getGroup_7() { return cGroup_7; }

		//"parameters"
		public Keyword getParametersKeyword_7_0() { return cParametersKeyword_7_0; }

		/// *'{'* / parameters+=TypedParameter
		public Assignment getParametersAssignment_7_1() { return cParametersAssignment_7_1; }

		//TypedParameter
		public RuleCall getParametersTypedParameterParserRuleCall_7_1_0() { return cParametersTypedParameterParserRuleCall_7_1_0; }

		/// *","* / parameters+=TypedParameter*
		public Assignment getParametersAssignment_7_2() { return cParametersAssignment_7_2; }

		//TypedParameter
		public RuleCall getParametersTypedParameterParserRuleCall_7_2_0() { return cParametersTypedParameterParserRuleCall_7_2_0; }

		//("where" / *'{'* / guards+=Guard / *","* / guards+=Guard*)?
		public Group getGroup_8() { return cGroup_8; }

		//"where"
		public Keyword getWhereKeyword_8_0() { return cWhereKeyword_8_0; }

		/// *'{'* / guards+=Guard
		public Assignment getGuardsAssignment_8_1() { return cGuardsAssignment_8_1; }

		//Guard
		public RuleCall getGuardsGuardParserRuleCall_8_1_0() { return cGuardsGuardParserRuleCall_8_1_0; }

		/// *","* / guards+=Guard*
		public Assignment getGuardsAssignment_8_2() { return cGuardsAssignment_8_2; }

		//Guard
		public RuleCall getGuardsGuardParserRuleCall_8_2_0() { return cGuardsGuardParserRuleCall_8_2_0; }

		//("with" / *'{'* / witnesses+=Witness / *","* / witnesses+=Witness*)?
		public Group getGroup_9() { return cGroup_9; }

		//"with"
		public Keyword getWithKeyword_9_0() { return cWithKeyword_9_0; }

		/// *'{'* / witnesses+=Witness
		public Assignment getWitnessesAssignment_9_1() { return cWitnessesAssignment_9_1; }

		//Witness
		public RuleCall getWitnessesWitnessParserRuleCall_9_1_0() { return cWitnessesWitnessParserRuleCall_9_1_0; }

		/// *","* / witnesses+=Witness*
		public Assignment getWitnessesAssignment_9_2() { return cWitnessesAssignment_9_2; }

		//Witness
		public RuleCall getWitnessesWitnessParserRuleCall_9_2_0() { return cWitnessesWitnessParserRuleCall_9_2_0; }

		//("then" / *'{'* / actions+=Action / *","* / actions+=Action*)?
		public Group getGroup_10() { return cGroup_10; }

		//"then"
		public Keyword getThenKeyword_10_0() { return cThenKeyword_10_0; }

		/// *'{'* / actions+=Action
		public Assignment getActionsAssignment_10_1() { return cActionsAssignment_10_1; }

		//Action
		public RuleCall getActionsActionParserRuleCall_10_1_0() { return cActionsActionParserRuleCall_10_1_0; }

		/// *","* / actions+=Action*
		public Assignment getActionsAssignment_10_2() { return cActionsAssignment_10_2; }

		//Action
		public RuleCall getActionsActionParserRuleCall_10_2_0() { return cActionsActionParserRuleCall_10_2_0; }

		//"end"
		public Keyword getEndKeyword_11() { return cEndKeyword_11; }
	}

	public class StateElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "State");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cStateAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cStateKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cRefinesKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cRefinesAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cRefinesStateCrossReference_3_1_0 = (CrossReference)cRefinesAssignment_3_1.eContents().get(0);
		private final RuleCall cRefinesStateEStringParserRuleCall_3_1_0_1 = (RuleCall)cRefinesStateCrossReference_3_1_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cInvariantsKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cInvariantsAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cInvariantsInvariantParserRuleCall_4_1_0 = (RuleCall)cInvariantsAssignment_4_1.eContents().get(0);
		private final Assignment cInvariantsAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cInvariantsInvariantParserRuleCall_4_2_0 = (RuleCall)cInvariantsAssignment_4_2.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cStatemachinesKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cStatemachinesAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cStatemachinesStatemachineParserRuleCall_5_1_0 = (RuleCall)cStatemachinesAssignment_5_1.eContents().get(0);
		private final Assignment cStatemachinesAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cStatemachinesStatemachineParserRuleCall_5_2_0 = (RuleCall)cStatemachinesAssignment_5_2.eContents().get(0);
		private final Keyword cEndKeyword_5_3 = (Keyword)cGroup_5.eContents().get(3);
		
		////	'}'
		//State:
		//	{State} //	(localGenerated?='localGenerated')?
		//	"State" name=EString //	'{'
		//	//		('internalId' internalId=EString)?
		//	//		('incoming' '(' incoming+=[Transition|EString] ( "," incoming+=[Transition|EString])* ')' )?
		//	//		('outgoing' '(' outgoing+=[Transition|EString] ( "," outgoing+=[Transition|EString])* ')' )?
		//	("refines" refines=[State|EString])? //		('annotations' '{' annotations+=Annotation ( "," annotations+=Annotation)* '}' )?
		//	//		('extensions' '{' extensions+=AbstractExtension ( "," extensions+=AbstractExtension)* '}' )?
		//	//		('attributes' '{' attributes+=StringToAttributeMapEntry ( "," attributes+=StringToAttributeMapEntry)* '}' )?
		//	("invariants" / *'{'* / invariants+=Invariant / *","* / invariants+=Invariant*)? / *'}'* / ("statemachines" / *'{'* /
		//	statemachines+=Statemachine / *","* / statemachines+=Statemachine* "end")?;
		public ParserRule getRule() { return rule; }

		//{State} //	(localGenerated?='localGenerated')?
		//"State" name=EString //	'{'
		////		('internalId' internalId=EString)?
		////		('incoming' '(' incoming+=[Transition|EString] ( "," incoming+=[Transition|EString])* ')' )?
		////		('outgoing' '(' outgoing+=[Transition|EString] ( "," outgoing+=[Transition|EString])* ')' )?
		//("refines" refines=[State|EString])? //		('annotations' '{' annotations+=Annotation ( "," annotations+=Annotation)* '}' )?
		////		('extensions' '{' extensions+=AbstractExtension ( "," extensions+=AbstractExtension)* '}' )?
		////		('attributes' '{' attributes+=StringToAttributeMapEntry ( "," attributes+=StringToAttributeMapEntry)* '}' )?
		//("invariants" / *'{'* / invariants+=Invariant / *","* / invariants+=Invariant*)? / *'}'* / ("statemachines" / *'{'* /
		//statemachines+=Statemachine / *","* / statemachines+=Statemachine* "end")?
		public Group getGroup() { return cGroup; }

		//{State}
		public Action getStateAction_0() { return cStateAction_0; }

		////	(localGenerated?='localGenerated')?
		//"State"
		public Keyword getStateKeyword_1() { return cStateKeyword_1; }

		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }

		//("refines" refines=[State|EString])?
		public Group getGroup_3() { return cGroup_3; }

		//"refines"
		public Keyword getRefinesKeyword_3_0() { return cRefinesKeyword_3_0; }

		//refines=[State|EString]
		public Assignment getRefinesAssignment_3_1() { return cRefinesAssignment_3_1; }

		//[State|EString]
		public CrossReference getRefinesStateCrossReference_3_1_0() { return cRefinesStateCrossReference_3_1_0; }

		//EString
		public RuleCall getRefinesStateEStringParserRuleCall_3_1_0_1() { return cRefinesStateEStringParserRuleCall_3_1_0_1; }

		//("invariants" / *'{'* / invariants+=Invariant / *","* / invariants+=Invariant*)?
		public Group getGroup_4() { return cGroup_4; }

		//"invariants"
		public Keyword getInvariantsKeyword_4_0() { return cInvariantsKeyword_4_0; }

		/// *'{'* / invariants+=Invariant
		public Assignment getInvariantsAssignment_4_1() { return cInvariantsAssignment_4_1; }

		//Invariant
		public RuleCall getInvariantsInvariantParserRuleCall_4_1_0() { return cInvariantsInvariantParserRuleCall_4_1_0; }

		/// *","* / invariants+=Invariant*
		public Assignment getInvariantsAssignment_4_2() { return cInvariantsAssignment_4_2; }

		//Invariant
		public RuleCall getInvariantsInvariantParserRuleCall_4_2_0() { return cInvariantsInvariantParserRuleCall_4_2_0; }

		//("statemachines" / *'{'* / statemachines+=Statemachine / *","* / statemachines+=Statemachine* "end")?
		public Group getGroup_5() { return cGroup_5; }

		//"statemachines"
		public Keyword getStatemachinesKeyword_5_0() { return cStatemachinesKeyword_5_0; }

		/// *'{'* / statemachines+=Statemachine
		public Assignment getStatemachinesAssignment_5_1() { return cStatemachinesAssignment_5_1; }

		//Statemachine
		public RuleCall getStatemachinesStatemachineParserRuleCall_5_1_0() { return cStatemachinesStatemachineParserRuleCall_5_1_0; }

		/// *","* / statemachines+=Statemachine*
		public Assignment getStatemachinesAssignment_5_2() { return cStatemachinesAssignment_5_2; }

		//Statemachine
		public RuleCall getStatemachinesStatemachineParserRuleCall_5_2_0() { return cStatemachinesStatemachineParserRuleCall_5_2_0; }

		//"end"
		public Keyword getEndKeyword_5_3() { return cEndKeyword_5_3; }
	}

	public class InitialElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Initial");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cInitialAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cInitialKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		
		////	'{'
		////		('internalId' internalId=EString)?
		////		('incoming' '(' incoming+=[Transition|EString] ( "," incoming+=[Transition|EString])* ')' )?
		////		('outgoing' '(' outgoing+=[Transition|EString] ( "," outgoing+=[Transition|EString])* ')' )?
		////		('annotations' '{' annotations+=Annotation ( "," annotations+=Annotation)* '}' )?
		////		('extensions' '{' extensions+=AbstractExtension ( "," extensions+=AbstractExtension)* '}' )?
		////		('attributes' '{' attributes+=StringToAttributeMapEntry ( "," attributes+=StringToAttributeMapEntry)* '}' )?
		////	'}'
		//Initial:
		//	{Initial} //	(localGenerated?='localGenerated')?
		//	"Initial" name=EString;
		public ParserRule getRule() { return rule; }

		//{Initial} //	(localGenerated?='localGenerated')?
		//"Initial" name=EString
		public Group getGroup() { return cGroup; }

		//{Initial}
		public Action getInitialAction_0() { return cInitialAction_0; }

		////	(localGenerated?='localGenerated')?
		//"Initial"
		public Keyword getInitialKeyword_1() { return cInitialKeyword_1; }

		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
	}

	public class FinalElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Final");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cFinalAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cFinalKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		
		////	'{'
		////		('internalId' internalId=EString)?
		////		('incoming' '(' incoming+=[Transition|EString] ( "," incoming+=[Transition|EString])* ')' )?
		////		('outgoing' '(' outgoing+=[Transition|EString] ( "," outgoing+=[Transition|EString])* ')' )?
		////		('annotations' '{' annotations+=Annotation ( "," annotations+=Annotation)* '}' )?
		////		('extensions' '{' extensions+=AbstractExtension ( "," extensions+=AbstractExtension)* '}' )?
		////		('attributes' '{' attributes+=StringToAttributeMapEntry ( "," attributes+=StringToAttributeMapEntry)* '}' )?
		////	'}'
		//Final:
		//	{Final} //	(localGenerated?='localGenerated')?
		//	"Final" name=EString;
		public ParserRule getRule() { return rule; }

		//{Final} //	(localGenerated?='localGenerated')?
		//"Final" name=EString
		public Group getGroup() { return cGroup; }

		//{Final}
		public Action getFinalAction_0() { return cFinalAction_0; }

		////	(localGenerated?='localGenerated')?
		//"Final"
		public Keyword getFinalKeyword_1() { return cFinalKeyword_1; }

		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
	}

	public class AnyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Any");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cAnyAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cAnyKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		
		////	'{'
		////		('internalId' internalId=EString)?
		////		('incoming' '(' incoming+=[Transition|EString] ( "," incoming+=[Transition|EString])* ')' )?
		////		('outgoing' '(' outgoing+=[Transition|EString] ( "," outgoing+=[Transition|EString])* ')' )?
		////		('annotations' '{' annotations+=Annotation ( "," annotations+=Annotation)* '}' )?
		////		('extensions' '{' extensions+=AbstractExtension ( "," extensions+=AbstractExtension)* '}' )?
		////		('attributes' '{' attributes+=StringToAttributeMapEntry ( "," attributes+=StringToAttributeMapEntry)* '}' )?
		////	'}'
		//Any:
		//	{Any} //	(localGenerated?='localGenerated')?
		//	"Any" name=EString;
		public ParserRule getRule() { return rule; }

		//{Any} //	(localGenerated?='localGenerated')?
		//"Any" name=EString
		public Group getGroup() { return cGroup; }

		//{Any}
		public Action getAnyAction_0() { return cAnyAction_0; }

		////	(localGenerated?='localGenerated')?
		//"Any"
		public Keyword getAnyKeyword_1() { return cAnyKeyword_1; }

		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
	}

	public class JunctionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Junction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cJunctionAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cJunctionKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		
		////	'{'
		////		('internalId' internalId=EString)?
		////		('incoming' '(' incoming+=[Transition|EString] ( "," incoming+=[Transition|EString])* ')' )?
		////		('outgoing' '(' outgoing+=[Transition|EString] ( "," outgoing+=[Transition|EString])* ')' )?
		////		('annotations' '{' annotations+=Annotation ( "," annotations+=Annotation)* '}' )?
		////		('extensions' '{' extensions+=AbstractExtension ( "," extensions+=AbstractExtension)* '}' )?
		////		('attributes' '{' attributes+=StringToAttributeMapEntry ( "," attributes+=StringToAttributeMapEntry)* '}' )?
		////	'}'
		//Junction:
		//	{Junction} //	(localGenerated?='localGenerated')?
		//	"Junction" name=EString;
		public ParserRule getRule() { return rule; }

		//{Junction} //	(localGenerated?='localGenerated')?
		//"Junction" name=EString
		public Group getGroup() { return cGroup; }

		//{Junction}
		public Action getJunctionAction_0() { return cJunctionAction_0; }

		////	(localGenerated?='localGenerated')?
		//"Junction"
		public Keyword getJunctionKeyword_1() { return cJunctionKeyword_1; }

		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
	}

	public class ForkElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Fork");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cForkAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cForkKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		
		////	'{'
		////		('internalId' internalId=EString)?
		////		('incoming' '(' incoming+=[Transition|EString] ( "," incoming+=[Transition|EString])* ')' )?
		////		('outgoing' '(' outgoing+=[Transition|EString] ( "," outgoing+=[Transition|EString])* ')' )?
		////		('annotations' '{' annotations+=Annotation ( "," annotations+=Annotation)* '}' )?
		////		('extensions' '{' extensions+=AbstractExtension ( "," extensions+=AbstractExtension)* '}' )?
		////		('attributes' '{' attributes+=StringToAttributeMapEntry ( "," attributes+=StringToAttributeMapEntry)* '}' )?
		////	'}'
		//Fork:
		//	{Fork} //	(localGenerated?='localGenerated')?
		//	"Fork" name=EString;
		public ParserRule getRule() { return rule; }

		//{Fork} //	(localGenerated?='localGenerated')?
		//"Fork" name=EString
		public Group getGroup() { return cGroup; }

		//{Fork}
		public Action getForkAction_0() { return cForkAction_0; }

		////	(localGenerated?='localGenerated')?
		//"Fork"
		public Keyword getForkKeyword_1() { return cForkKeyword_1; }

		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
	}

	public class TypedParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TypedParameter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameEStringParserRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cElementOfKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cTypeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTypeEStringParserRuleCall_2_0 = (RuleCall)cTypeAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cGreaterThanSignKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cCommentAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cCommentEStringParserRuleCall_3_1_0 = (RuleCall)cCommentAssignment_3_1.eContents().get(0);
		
		////		('annotations' '{' annotations+=Annotation ( "," annotations+=Annotation)* '}' )?
		////		('extensions' '{' extensions+=AbstractExtension ( "," extensions+=AbstractExtension)* '}' )?
		////		('attributes' '{' attributes+=StringToAttributeMapEntry ( "," attributes+=StringToAttributeMapEntry)* '}' )?
		////	'}'
		//TypedParameter returns coreextension::TypedParameter: //	(localGenerated?='localGenerated')?
		/// *'TypedParameter'* / name=EString //	'{'
		//	//		('internalId' internalId=EString)?
		//	"?" type=EString (">" comment=EString)?;
		public ParserRule getRule() { return rule; }

		////	(localGenerated?='localGenerated')?
		/// *'TypedParameter'* / name=EString //	'{'
		////		('internalId' internalId=EString)?
		//"?" type=EString (">" comment=EString)?
		public Group getGroup() { return cGroup; }

		////	(localGenerated?='localGenerated')?
		/// *'TypedParameter'* / name=EString
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//EString
		public RuleCall getNameEStringParserRuleCall_0_0() { return cNameEStringParserRuleCall_0_0; }

		////	'{'
		////		('internalId' internalId=EString)?
		//"?"
		public Keyword getElementOfKeyword_1() { return cElementOfKeyword_1; }

		//type=EString
		public Assignment getTypeAssignment_2() { return cTypeAssignment_2; }

		//EString
		public RuleCall getTypeEStringParserRuleCall_2_0() { return cTypeEStringParserRuleCall_2_0; }

		//(">" comment=EString)?
		public Group getGroup_3() { return cGroup_3; }

		//">"
		public Keyword getGreaterThanSignKeyword_3_0() { return cGreaterThanSignKeyword_3_0; }

		//comment=EString
		public Assignment getCommentAssignment_3_1() { return cCommentAssignment_3_1; }

		//EString
		public RuleCall getCommentEStringParserRuleCall_3_1_0() { return cCommentEStringParserRuleCall_3_1_0; }
	}

	public class AbstractNodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AbstractNode");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cStateParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cInitialParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cFinalParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cAnyParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cJunctionParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cForkParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		
		//AbstractNode:
		//	State | Initial | Final | Any | Junction | Fork;
		public ParserRule getRule() { return rule; }

		//State | Initial | Final | Any | Junction | Fork
		public Alternatives getAlternatives() { return cAlternatives; }

		//State
		public RuleCall getStateParserRuleCall_0() { return cStateParserRuleCall_0; }

		//Initial
		public RuleCall getInitialParserRuleCall_1() { return cInitialParserRuleCall_1; }

		//Final
		public RuleCall getFinalParserRuleCall_2() { return cFinalParserRuleCall_2; }

		//Any
		public RuleCall getAnyParserRuleCall_3() { return cAnyParserRuleCall_3; }

		//Junction
		public RuleCall getJunctionParserRuleCall_4() { return cJunctionParserRuleCall_4; }

		//Fork
		public RuleCall getForkParserRuleCall_5() { return cForkParserRuleCall_5; }
	}
	
	
	public class ConvergenceElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "Convergence");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cOrdinaryEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cOrdinaryOrdinaryKeyword_0_0 = (Keyword)cOrdinaryEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cConvergentEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cConvergentConvergentKeyword_1_0 = (Keyword)cConvergentEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cAnticipatedEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cAnticipatedAnticipatedKeyword_2_0 = (Keyword)cAnticipatedEnumLiteralDeclaration_2.eContents().get(0);
		
		////StringToStringMapEntry returns core::StringToStringMapEntry:
		////	{core::StringToStringMapEntry}
		////	'StringToStringMapEntry'
		////	'{'
		////		('key' key=EString)?
		////		('value' value=EString)?
		////	'}';
		////EObject returns ecore::EObject:
		////	{ecore::EObject}
		////	'EObject'
		////	;
		////Extension returns core::Extension:
		////	(localGenerated?='localGenerated')?
		////	'Extension'
		////	'{'
		////		('internalId' internalId=EString)?
		////		'extensionId' extensionId=EString
		////		('annotations' '{' annotations+=Annotation ( "," annotations+=Annotation)* '}' )?
		////		('extensions' '{' extensions+=AbstractExtension ( "," extensions+=AbstractExtension)* '}' )?
		////		('attributes' '{' attributes+=StringToAttributeMapEntry ( "," attributes+=StringToAttributeMapEntry)* '}' )?
		////	'}'
		////	;
		////Attribute returns core::Attribute:
		////	'Attribute'
		////	'{'
		////		'type' type=AttributeType
		////		'value' value=EJavaObject
		////		('annotations' '{' annotations+=Annotation ( "," annotations+=Annotation)* '}' )?
		////	'}'
		////	;
		////enum AttributeType returns core::AttributeType:
		////				Boolean = 'Boolean' | Handle = 'Handle' | Integer = 'Integer' | Long = 'Long' | String = 'String';
		////EJavaObject returns ecore::EJavaObject:
		////	'EJavaObject' / * TODO: implement this rule and an appropriate IValueConverter * /;
		////CarrierSet returns context::CarrierSet:
		////	{context::CarrierSet}
		////	(localGenerated?='localGenerated')?
		////	'carrierSet'
		////	name=EString
		////	'{'
		////		('internalId' internalId=EString)?
		////		('>' comment=EString)?
		////		('annotations' '{' annotations+=Annotation ( "," annotations+=Annotation)* '}' )?
		////		('extensions' '{' extensions+=AbstractExtension ( "," extensions+=AbstractExtension)* '}' )?
		////		('attributes' '{' attributes+=StringToAttributeMapEntry ( "," attributes+=StringToAttributeMapEntry)* '}' )?
		////	'}'
		////	;
		////Constant returns context::Constant:
		////	{context::Constant}
		////	(localGenerated?='localGenerated')?
		////	'constant'
		////	name=EString
		////	'{'
		////		('internalId' internalId=EString)?
		////		('>' comment=EString)?
		////		('annotations' '{' annotations+=Annotation ( "," annotations+=Annotation)* '}' )?
		////		('extensions' '{' extensions+=AbstractExtension ( "," extensions+=AbstractExtension)* '}' )?
		////		('attributes' '{' attributes+=StringToAttributeMapEntry ( "," attributes+=StringToAttributeMapEntry)* '}' )?
		////	'}';
		////Axiom returns context::Axiom:
		////	(localGenerated?='localGenerated')?
		////	(theorem?='theorem')?
		////	'axiom'
		////	'@'name=EString
		////	'{'
		////		('internalId' internalId=EString)?
		////		('>' comment=EString)?
		////		'predicate' predicate=EString
		////		('annotations' '{' annotations+=Annotation ( "," annotations+=Annotation)* '}' )?
		////		('extensions' '{' extensions+=AbstractExtension ( "," extensions+=AbstractExtension)* '}' )?
		////		('attributes' '{' attributes+=StringToAttributeMapEntry ( "," attributes+=StringToAttributeMapEntry)* '}' )?
		////	'}'
		////	;
		//enum Convergence:
		//	ordinary | convergent | anticipated;
		public EnumRule getRule() { return rule; }

		//ordinary | convergent | anticipated
		public Alternatives getAlternatives() { return cAlternatives; }

		//ordinary
		public EnumLiteralDeclaration getOrdinaryEnumLiteralDeclaration_0() { return cOrdinaryEnumLiteralDeclaration_0; }

		//"ordinary"
		public Keyword getOrdinaryOrdinaryKeyword_0_0() { return cOrdinaryOrdinaryKeyword_0_0; }

		//convergent
		public EnumLiteralDeclaration getConvergentEnumLiteralDeclaration_1() { return cConvergentEnumLiteralDeclaration_1; }

		//"convergent"
		public Keyword getConvergentConvergentKeyword_1_0() { return cConvergentConvergentKeyword_1_0; }

		//anticipated
		public EnumLiteralDeclaration getAnticipatedEnumLiteralDeclaration_2() { return cAnticipatedEnumLiteralDeclaration_2; }

		//"anticipated"
		public Keyword getAnticipatedAnticipatedKeyword_2_0() { return cAnticipatedAnticipatedKeyword_2_0; }
	}

	public class TranslationKindElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "TranslationKind");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cMULTIVAREnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cMULTIVARMULTIVARKeyword_0_0 = (Keyword)cMULTIVAREnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cSINGLEVAREnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cSINGLEVARSINGLEVARKeyword_1_0 = (Keyword)cSINGLEVAREnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cREFINEDVAREnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cREFINEDVARREFINEDVARKeyword_2_0 = (Keyword)cREFINEDVAREnumLiteralDeclaration_2.eContents().get(0);
		
		//enum TranslationKind:
		//	MULTIVAR | SINGLEVAR | REFINEDVAR;
		public EnumRule getRule() { return rule; }

		//MULTIVAR | SINGLEVAR | REFINEDVAR
		public Alternatives getAlternatives() { return cAlternatives; }

		//MULTIVAR
		public EnumLiteralDeclaration getMULTIVAREnumLiteralDeclaration_0() { return cMULTIVAREnumLiteralDeclaration_0; }

		//"MULTIVAR"
		public Keyword getMULTIVARMULTIVARKeyword_0_0() { return cMULTIVARMULTIVARKeyword_0_0; }

		//SINGLEVAR
		public EnumLiteralDeclaration getSINGLEVAREnumLiteralDeclaration_1() { return cSINGLEVAREnumLiteralDeclaration_1; }

		//"SINGLEVAR"
		public Keyword getSINGLEVARSINGLEVARKeyword_1_0() { return cSINGLEVARSINGLEVARKeyword_1_0; }

		//REFINEDVAR
		public EnumLiteralDeclaration getREFINEDVAREnumLiteralDeclaration_2() { return cREFINEDVAREnumLiteralDeclaration_2; }

		//"REFINEDVAR"
		public Keyword getREFINEDVARREFINEDVARKeyword_2_0() { return cREFINEDVARREFINEDVARKeyword_2_0; }
	}
	
	private MachineElements pMachine;
	private AbstractExtensionElements pAbstractExtension;
	private EStringElements pEString;
	private VariableElements pVariable;
	private InvariantElements pInvariant;
	private VariantElements pVariant;
	private EventElements pEvent;
	private QStringElements pQString;
	private ConvergenceElements unknownRuleConvergence;
	private ParameterElements pParameter;
	private GuardElements pGuard;
	private WitnessElements pWitness;
	private ActionElements pAction;
	private StatemachineElements pStatemachine;
	private TransitionElements pTransition;
	private TranslationKindElements unknownRuleTranslationKind;
	private StateElements pState;
	private InitialElements pInitial;
	private FinalElements pFinal;
	private AnyElements pAny;
	private JunctionElements pJunction;
	private ForkElements pFork;
	private TypedParameterElements pTypedParameter;
	private AbstractNodeElements pAbstractNode;
	
	private final Grammar grammar;

	private TerminalsGrammarAccess gaTerminals;

	@Inject
	public MachineDslGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("ac.soton.xtext.MachineDsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Machine:
	//	{Machine} //	(localGenerated?='localGenerated')?
	//	"machine" name=EString //	'{'
	//	//		('internalId' internalId=EString)?
	//	(">" comment=EString)? ("refines" / *'('* / refines+=[Machine|EString] / *","* / refines+=[Machine|EString]*)? / *')'* /
	//	("sees" / *'('* / sees+=[context::Context|EString] / *","* / sees+=[context::Context|EString]*)? / *')'* / //		('annotations' '{' annotations+=Annotation ( "," annotations+=Annotation)* '}' )?
	//	//		('attributes' '{' attributes+=StringToAttributeMapEntry ( "," attributes+=StringToAttributeMapEntry)* '}' )?
	//	("variables" / *'{'* / variables+=Variable / *","* / variables+=Variable*)? / *'}'* / ("invariants" / *'{'* /
	//	invariants+=Invariant invariants+=Invariant*)? / *'}'* / ("variant" variant=Variant)? ("events" / *'{'* / events+=event
	//	/ *","* / events+=event*)? / *'}'* / / *'extensions'* / / *'{'* / (extensions+=AbstractExtension / *","* /
	//	extensions+=AbstractExtension*)? / *'}'* / //	'}'
	//	"end";
	public MachineElements getMachineAccess() {
		return (pMachine != null) ? pMachine : (pMachine = new MachineElements());
	}
	
	public ParserRule getMachineRule() {
		return getMachineAccess().getRule();
	}

	//AbstractExtension returns core::AbstractExtension:
	//	Statemachine;
	public AbstractExtensionElements getAbstractExtensionAccess() {
		return (pAbstractExtension != null) ? pAbstractExtension : (pAbstractExtension = new AbstractExtensionElements());
	}
	
	public ParserRule getAbstractExtensionRule() {
		return getAbstractExtensionAccess().getRule();
	}

	////Annotation returns core::Annotation:
	////	{core::Annotation}
	////	'Annotation'
	////	'{'
	////		('source' source=EString)?
	////		('references' '(' references+=[ecore::EObject|EString] ( "," references+=[ecore::EObject|EString])* ')' )?
	////		('annotations' '{' annotations+=Annotation ( "," annotations+=Annotation)* '}' )?
	////		('details' '{' details+=StringToStringMapEntry ( "," details+=StringToStringMapEntry)* '}' )?
	////		('contents' '{' contents+=EObject ( "," contents+=EObject)* '}' )?
	////	'}';
	////StringToAttributeMapEntry returns core::StringToAttributeMapEntry:
	////	'StringToAttributeMapEntry'
	////	'{'
	////		'key' key=EString
	////		('value' value=Attribute)?
	////	'}';
	////EBoolean returns ecore::EBoolean:
	////	'true' | 'false';
	//EString returns ecore::EString:
	//	STRING | ID;
	public EStringElements getEStringAccess() {
		return (pEString != null) ? pEString : (pEString = new EStringElements());
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}

	////Context returns context::Context:
	////	{context::Context}
	////	(localGenerated?='localGenerated')?
	////	'Context'
	////	name=EString
	////	'{'
	////		('internalId' internalId=EString)?
	////		('>' comment=EString)?
	////		('extends' '(' extends+=[context::Context|EString] ( "," extends+=[context::Context|EString])* ')' )?
	////		('annotations' '{' annotations+=Annotation ( "," annotations+=Annotation)* '}' )?
	////		('extensions' '{' extensions+=AbstractExtension ( "," extensions+=AbstractExtension)* '}' )?
	////		('attributes' '{' attributes+=StringToAttributeMapEntry ( "," attributes+=StringToAttributeMapEntry)* '}' )?
	////		('sets' '{' sets+=CarrierSet ( "," sets+=CarrierSet)* '}' )?
	////		('constants' '{' constants+=Constant ( "," constants+=Constant)* '}' )?
	////		('axioms' '{' axioms+=Axiom ( "," axioms+=Axiom)* '}' )?
	////	'}';
	////		('annotations' '{' annotations+=Annotation ( "," annotations+=Annotation)* '}' )?
	////		('extensions' '{' extensions+=AbstractExtension ( "," extensions+=AbstractExtension)* '}' )?
	////		('attributes' '{' attributes+=StringToAttributeMapEntry ( "," attributes+=StringToAttributeMapEntry)* '}' )?
	////	'}'
	//Variable:
	//	{Variable} //	(localGenerated?='localGenerated')?
	//	//	'Variable'
	//	name=EString //	'{'
	//	//		('internalId' internalId=EString)?
	//	(">" comment=EString)?;
	public VariableElements getVariableAccess() {
		return (pVariable != null) ? pVariable : (pVariable = new VariableElements());
	}
	
	public ParserRule getVariableRule() {
		return getVariableAccess().getRule();
	}

	////		('annotations' '{' annotations+=Annotation ( "," annotations+=Annotation)* '}' )?
	////		('extensions' '{' extensions+=AbstractExtension ( "," extensions+=AbstractExtension)* '}' )?
	////		('attributes' '{' attributes+=StringToAttributeMapEntry ( "," attributes+=StringToAttributeMapEntry)* '}' )?
	////	'}'
	//Invariant: //	(localGenerated?='localGenerated')?
	////	'Invariant'
	//	"@" name=EString //	'{'
	//	//		('internalId' internalId=EString)?
	//	//		'is' 
	//	predicate=EString? theorem?="theorem"? (">" comment=EString)?;
	public InvariantElements getInvariantAccess() {
		return (pInvariant != null) ? pInvariant : (pInvariant = new InvariantElements());
	}
	
	public ParserRule getInvariantRule() {
		return getInvariantAccess().getRule();
	}

	////		('annotations' '{' annotations+=Annotation ( "," annotations+=Annotation)* '}' )?
	////		('extensions' '{' extensions+=AbstractExtension ( "," extensions+=AbstractExtension)* '}' )?
	////		('attributes' '{' attributes+=StringToAttributeMapEntry ( "," attributes+=StringToAttributeMapEntry)* '}' )?
	////	'}'
	//Variant:
	//	{Variant} //	(localGenerated?='localGenerated')?
	//	"Variant" //	'{'
	//	//		('internalId' internalId=EString)?
	//	"expression" expression=EString? (">" comment=EString)?;
	public VariantElements getVariantAccess() {
		return (pVariant != null) ? pVariant : (pVariant = new VariantElements());
	}
	
	public ParserRule getVariantRule() {
		return getVariantAccess().getRule();
	}

	//event returns Event:
	//	{Event} //	(localGenerated?='localGenerated')?
	//	"event" name=EString extended?="extended"? //		('internalId' internalId=EString)?
	//	convergence=Convergence? (">" comment=EString)? ("refines" refines+=[Event|QString] refines+=[Event|QString]*)? //		('annotations' '{' annotations+=Annotation ( "," annotations+=Annotation)* '}' )?
	//	//		('extensions' '{' extensions+=AbstractExtension ( "," extensions+=AbstractExtension)* '}' )?
	//	//		('attributes' '{' attributes+=StringToAttributeMapEntry ( "," attributes+=StringToAttributeMapEntry)* '}' )?
	//	("any" parameters+=Parameter parameters+=Parameter*)? ("where" guards+=Guard guards+=Guard*)? ("with"
	//	witnesses+=Witness witnesses+=Witness*)? ("then" actions+=Action actions+=Action*)? "end";
	public EventElements getEventAccess() {
		return (pEvent != null) ? pEvent : (pEvent = new EventElements());
	}
	
	public ParserRule getEventRule() {
		return getEventAccess().getRule();
	}

	//QString returns ecore::EString:
	//	STRING | ID ("?" ID)*;
	public QStringElements getQStringAccess() {
		return (pQString != null) ? pQString : (pQString = new QStringElements());
	}
	
	public ParserRule getQStringRule() {
		return getQStringAccess().getRule();
	}

	////StringToStringMapEntry returns core::StringToStringMapEntry:
	////	{core::StringToStringMapEntry}
	////	'StringToStringMapEntry'
	////	'{'
	////		('key' key=EString)?
	////		('value' value=EString)?
	////	'}';
	////EObject returns ecore::EObject:
	////	{ecore::EObject}
	////	'EObject'
	////	;
	////Extension returns core::Extension:
	////	(localGenerated?='localGenerated')?
	////	'Extension'
	////	'{'
	////		('internalId' internalId=EString)?
	////		'extensionId' extensionId=EString
	////		('annotations' '{' annotations+=Annotation ( "," annotations+=Annotation)* '}' )?
	////		('extensions' '{' extensions+=AbstractExtension ( "," extensions+=AbstractExtension)* '}' )?
	////		('attributes' '{' attributes+=StringToAttributeMapEntry ( "," attributes+=StringToAttributeMapEntry)* '}' )?
	////	'}'
	////	;
	////Attribute returns core::Attribute:
	////	'Attribute'
	////	'{'
	////		'type' type=AttributeType
	////		'value' value=EJavaObject
	////		('annotations' '{' annotations+=Annotation ( "," annotations+=Annotation)* '}' )?
	////	'}'
	////	;
	////enum AttributeType returns core::AttributeType:
	////				Boolean = 'Boolean' | Handle = 'Handle' | Integer = 'Integer' | Long = 'Long' | String = 'String';
	////EJavaObject returns ecore::EJavaObject:
	////	'EJavaObject' / * TODO: implement this rule and an appropriate IValueConverter * /;
	////CarrierSet returns context::CarrierSet:
	////	{context::CarrierSet}
	////	(localGenerated?='localGenerated')?
	////	'carrierSet'
	////	name=EString
	////	'{'
	////		('internalId' internalId=EString)?
	////		('>' comment=EString)?
	////		('annotations' '{' annotations+=Annotation ( "," annotations+=Annotation)* '}' )?
	////		('extensions' '{' extensions+=AbstractExtension ( "," extensions+=AbstractExtension)* '}' )?
	////		('attributes' '{' attributes+=StringToAttributeMapEntry ( "," attributes+=StringToAttributeMapEntry)* '}' )?
	////	'}'
	////	;
	////Constant returns context::Constant:
	////	{context::Constant}
	////	(localGenerated?='localGenerated')?
	////	'constant'
	////	name=EString
	////	'{'
	////		('internalId' internalId=EString)?
	////		('>' comment=EString)?
	////		('annotations' '{' annotations+=Annotation ( "," annotations+=Annotation)* '}' )?
	////		('extensions' '{' extensions+=AbstractExtension ( "," extensions+=AbstractExtension)* '}' )?
	////		('attributes' '{' attributes+=StringToAttributeMapEntry ( "," attributes+=StringToAttributeMapEntry)* '}' )?
	////	'}';
	////Axiom returns context::Axiom:
	////	(localGenerated?='localGenerated')?
	////	(theorem?='theorem')?
	////	'axiom'
	////	'@'name=EString
	////	'{'
	////		('internalId' internalId=EString)?
	////		('>' comment=EString)?
	////		'predicate' predicate=EString
	////		('annotations' '{' annotations+=Annotation ( "," annotations+=Annotation)* '}' )?
	////		('extensions' '{' extensions+=AbstractExtension ( "," extensions+=AbstractExtension)* '}' )?
	////		('attributes' '{' attributes+=StringToAttributeMapEntry ( "," attributes+=StringToAttributeMapEntry)* '}' )?
	////	'}'
	////	;
	//enum Convergence:
	//	ordinary | convergent | anticipated;
	public ConvergenceElements getConvergenceAccess() {
		return (unknownRuleConvergence != null) ? unknownRuleConvergence : (unknownRuleConvergence = new ConvergenceElements());
	}
	
	public EnumRule getConvergenceRule() {
		return getConvergenceAccess().getRule();
	}

	////		('annotations' '{' annotations+=Annotation ( "," annotations+=Annotation)* '}' )?
	////		('extensions' '{' extensions+=AbstractExtension ( "," extensions+=AbstractExtension)* '}' )?
	////		('attributes' '{' attributes+=StringToAttributeMapEntry ( "," attributes+=StringToAttributeMapEntry)* '}' )?
	////	'}'
	//Parameter:
	//	{Parameter} //	(localGenerated?='localGenerated')?
	//	//	'Parameter'
	//	name=EString //	'{'
	//	//		('internalId' internalId=EString)?
	//	(">" comment=EString)?;
	public ParameterElements getParameterAccess() {
		return (pParameter != null) ? pParameter : (pParameter = new ParameterElements());
	}
	
	public ParserRule getParameterRule() {
		return getParameterAccess().getRule();
	}

	////		('annotations' '{' annotations+=Annotation ( "," annotations+=Annotation)* '}' )?
	////		('extensions' '{' extensions+=AbstractExtension ( "," extensions+=AbstractExtension)* '}' )?
	////		('attributes' '{' attributes+=StringToAttributeMapEntry ( "," attributes+=StringToAttributeMapEntry)* '}' )?
	////	'}'
	//Guard: //	(localGenerated?='localGenerated')?
	////	'Guard'
	//	"@" name=EString //	'{'
	//	//		('internalId' internalId=EString)?
	//	predicate=EString? theorem?="theorem"? (">" comment=EString)?;
	public GuardElements getGuardAccess() {
		return (pGuard != null) ? pGuard : (pGuard = new GuardElements());
	}
	
	public ParserRule getGuardRule() {
		return getGuardAccess().getRule();
	}

	////		('annotations' '{' annotations+=Annotation ( "," annotations+=Annotation)* '}' )?
	////		('extensions' '{' extensions+=AbstractExtension ( "," extensions+=AbstractExtension)* '}' )?
	////		('attributes' '{' attributes+=StringToAttributeMapEntry ( "," attributes+=StringToAttributeMapEntry)* '}' )?
	////	'}'
	//Witness:
	//	localGenerated?="localGenerated"? //	'witness'
	//	"@" name=EString //	'{'
	//	//		('internalId' internalId=EString)?
	//	/ *'predicate'* / predicate=EString? (">" comment=EString)?;
	public WitnessElements getWitnessAccess() {
		return (pWitness != null) ? pWitness : (pWitness = new WitnessElements());
	}
	
	public ParserRule getWitnessRule() {
		return getWitnessAccess().getRule();
	}

	////		('annotations' '{' annotations+=Annotation ( "," annotations+=Annotation)* '}' )?
	////		('extensions' '{' extensions+=AbstractExtension ( "," extensions+=AbstractExtension)* '}' )?
	////		('attributes' '{' attributes+=StringToAttributeMapEntry ( "," attributes+=StringToAttributeMapEntry)* '}' )?
	////	'}'
	//Action: //	(localGenerated?='localGenerated')?
	////	'Action'
	//	"@" name=EString //	'{'
	//	//		('internalId' internalId=EString)?
	//	//		'then' 
	//	action=EString? (">" comment=EString)?;
	public ActionElements getActionAccess() {
		return (pAction != null) ? pAction : (pAction = new ActionElements());
	}
	
	public ParserRule getActionRule() {
		return getActionAccess().getRule();
	}

	//Statemachine: //	(localGenerated?='localGenerated')?
	//	"Statemachine" name=EString //	'{'
	//	//		('internalId' internalId=EString)?
	//	//		('dataKind' dataKind=DataKind)?
	//	//		'extensionId' extensionId=EString
	//	//		('selfName' selfName=EString)?
	//	(">" comment=EString)? ("translation" translation=TranslationKind)? ("elaborates"
	//	elaborates=[core::EventBNamed|EString])? ("refines" refines=[Statemachine|EString])? //		('instances' instances=[core::EventBNamedCommentedElement|EString])?
	//	//		('annotations' '{' annotations+=Annotation ( "," annotations+=Annotation)* '}' )?
	//	//		('extensions' '{' extensions+=AbstractExtension ( "," extensions+=AbstractExtension)* '}' )?
	//	//		('attributes' '{' attributes+=StringToAttributeMapEntry ( "," attributes+=StringToAttributeMapEntry)* '}' )?
	//	("nodes" / *'{'* / nodes+=AbstractNode ("," nodes+=AbstractNode)*)? / *'}'* / ("transitions" / *'{'* /
	//	transitions+=Transition / *","* / transitions+=Transition*)? / *'}'* / //	'}'
	//	"end";
	public StatemachineElements getStatemachineAccess() {
		return (pStatemachine != null) ? pStatemachine : (pStatemachine = new StatemachineElements());
	}
	
	public ParserRule getStatemachineRule() {
		return getStatemachineAccess().getRule();
	}

	////	'}'
	//Transition:
	//	{Transition} //	(localGenerated?='localGenerated')?
	//	extended?="extended"? "Transition" //	'{'
	//	//		('internalId' internalId=EString)?
	//	(">" comment=EString)? ("elaborates" / *'('* / elaborates+=[Event|QString] / *","* / elaborates+=[Event|QString]*)? / *')'* /
	//	("source" source=[AbstractNode|QString])? ("target" target=[AbstractNode|QString])? //		('targetContainer' targetContainer=[core::EventBElement|EString])?
	//	//		('annotations' '{' annotations+=Annotation ( "," annotations+=Annotation)* '}' )?
	//	//		('extensions' '{' extensions+=AbstractExtension ( "," extensions+=AbstractExtension)* '}' )?
	//	//		('attributes' '{' attributes+=StringToAttributeMapEntry ( "," attributes+=StringToAttributeMapEntry)* '}' )?
	//	("parameters" / *'{'* / parameters+=TypedParameter / *","* / parameters+=TypedParameter*)? / *'}'* / ("where" / *'{'* /
	//	guards+=Guard / *","* / guards+=Guard*)? / *'}'* / ("with" / *'{'* / witnesses+=Witness / *","* / witnesses+=Witness*)?
	//	/ *'}'* / ("then" / *'{'* / actions+=Action / *","* / actions+=Action*)? / *'}'* / "end";
	public TransitionElements getTransitionAccess() {
		return (pTransition != null) ? pTransition : (pTransition = new TransitionElements());
	}
	
	public ParserRule getTransitionRule() {
		return getTransitionAccess().getRule();
	}

	//enum TranslationKind:
	//	MULTIVAR | SINGLEVAR | REFINEDVAR;
	public TranslationKindElements getTranslationKindAccess() {
		return (unknownRuleTranslationKind != null) ? unknownRuleTranslationKind : (unknownRuleTranslationKind = new TranslationKindElements());
	}
	
	public EnumRule getTranslationKindRule() {
		return getTranslationKindAccess().getRule();
	}

	////	'}'
	//State:
	//	{State} //	(localGenerated?='localGenerated')?
	//	"State" name=EString //	'{'
	//	//		('internalId' internalId=EString)?
	//	//		('incoming' '(' incoming+=[Transition|EString] ( "," incoming+=[Transition|EString])* ')' )?
	//	//		('outgoing' '(' outgoing+=[Transition|EString] ( "," outgoing+=[Transition|EString])* ')' )?
	//	("refines" refines=[State|EString])? //		('annotations' '{' annotations+=Annotation ( "," annotations+=Annotation)* '}' )?
	//	//		('extensions' '{' extensions+=AbstractExtension ( "," extensions+=AbstractExtension)* '}' )?
	//	//		('attributes' '{' attributes+=StringToAttributeMapEntry ( "," attributes+=StringToAttributeMapEntry)* '}' )?
	//	("invariants" / *'{'* / invariants+=Invariant / *","* / invariants+=Invariant*)? / *'}'* / ("statemachines" / *'{'* /
	//	statemachines+=Statemachine / *","* / statemachines+=Statemachine* "end")?;
	public StateElements getStateAccess() {
		return (pState != null) ? pState : (pState = new StateElements());
	}
	
	public ParserRule getStateRule() {
		return getStateAccess().getRule();
	}

	////	'{'
	////		('internalId' internalId=EString)?
	////		('incoming' '(' incoming+=[Transition|EString] ( "," incoming+=[Transition|EString])* ')' )?
	////		('outgoing' '(' outgoing+=[Transition|EString] ( "," outgoing+=[Transition|EString])* ')' )?
	////		('annotations' '{' annotations+=Annotation ( "," annotations+=Annotation)* '}' )?
	////		('extensions' '{' extensions+=AbstractExtension ( "," extensions+=AbstractExtension)* '}' )?
	////		('attributes' '{' attributes+=StringToAttributeMapEntry ( "," attributes+=StringToAttributeMapEntry)* '}' )?
	////	'}'
	//Initial:
	//	{Initial} //	(localGenerated?='localGenerated')?
	//	"Initial" name=EString;
	public InitialElements getInitialAccess() {
		return (pInitial != null) ? pInitial : (pInitial = new InitialElements());
	}
	
	public ParserRule getInitialRule() {
		return getInitialAccess().getRule();
	}

	////	'{'
	////		('internalId' internalId=EString)?
	////		('incoming' '(' incoming+=[Transition|EString] ( "," incoming+=[Transition|EString])* ')' )?
	////		('outgoing' '(' outgoing+=[Transition|EString] ( "," outgoing+=[Transition|EString])* ')' )?
	////		('annotations' '{' annotations+=Annotation ( "," annotations+=Annotation)* '}' )?
	////		('extensions' '{' extensions+=AbstractExtension ( "," extensions+=AbstractExtension)* '}' )?
	////		('attributes' '{' attributes+=StringToAttributeMapEntry ( "," attributes+=StringToAttributeMapEntry)* '}' )?
	////	'}'
	//Final:
	//	{Final} //	(localGenerated?='localGenerated')?
	//	"Final" name=EString;
	public FinalElements getFinalAccess() {
		return (pFinal != null) ? pFinal : (pFinal = new FinalElements());
	}
	
	public ParserRule getFinalRule() {
		return getFinalAccess().getRule();
	}

	////	'{'
	////		('internalId' internalId=EString)?
	////		('incoming' '(' incoming+=[Transition|EString] ( "," incoming+=[Transition|EString])* ')' )?
	////		('outgoing' '(' outgoing+=[Transition|EString] ( "," outgoing+=[Transition|EString])* ')' )?
	////		('annotations' '{' annotations+=Annotation ( "," annotations+=Annotation)* '}' )?
	////		('extensions' '{' extensions+=AbstractExtension ( "," extensions+=AbstractExtension)* '}' )?
	////		('attributes' '{' attributes+=StringToAttributeMapEntry ( "," attributes+=StringToAttributeMapEntry)* '}' )?
	////	'}'
	//Any:
	//	{Any} //	(localGenerated?='localGenerated')?
	//	"Any" name=EString;
	public AnyElements getAnyAccess() {
		return (pAny != null) ? pAny : (pAny = new AnyElements());
	}
	
	public ParserRule getAnyRule() {
		return getAnyAccess().getRule();
	}

	////	'{'
	////		('internalId' internalId=EString)?
	////		('incoming' '(' incoming+=[Transition|EString] ( "," incoming+=[Transition|EString])* ')' )?
	////		('outgoing' '(' outgoing+=[Transition|EString] ( "," outgoing+=[Transition|EString])* ')' )?
	////		('annotations' '{' annotations+=Annotation ( "," annotations+=Annotation)* '}' )?
	////		('extensions' '{' extensions+=AbstractExtension ( "," extensions+=AbstractExtension)* '}' )?
	////		('attributes' '{' attributes+=StringToAttributeMapEntry ( "," attributes+=StringToAttributeMapEntry)* '}' )?
	////	'}'
	//Junction:
	//	{Junction} //	(localGenerated?='localGenerated')?
	//	"Junction" name=EString;
	public JunctionElements getJunctionAccess() {
		return (pJunction != null) ? pJunction : (pJunction = new JunctionElements());
	}
	
	public ParserRule getJunctionRule() {
		return getJunctionAccess().getRule();
	}

	////	'{'
	////		('internalId' internalId=EString)?
	////		('incoming' '(' incoming+=[Transition|EString] ( "," incoming+=[Transition|EString])* ')' )?
	////		('outgoing' '(' outgoing+=[Transition|EString] ( "," outgoing+=[Transition|EString])* ')' )?
	////		('annotations' '{' annotations+=Annotation ( "," annotations+=Annotation)* '}' )?
	////		('extensions' '{' extensions+=AbstractExtension ( "," extensions+=AbstractExtension)* '}' )?
	////		('attributes' '{' attributes+=StringToAttributeMapEntry ( "," attributes+=StringToAttributeMapEntry)* '}' )?
	////	'}'
	//Fork:
	//	{Fork} //	(localGenerated?='localGenerated')?
	//	"Fork" name=EString;
	public ForkElements getForkAccess() {
		return (pFork != null) ? pFork : (pFork = new ForkElements());
	}
	
	public ParserRule getForkRule() {
		return getForkAccess().getRule();
	}

	////		('annotations' '{' annotations+=Annotation ( "," annotations+=Annotation)* '}' )?
	////		('extensions' '{' extensions+=AbstractExtension ( "," extensions+=AbstractExtension)* '}' )?
	////		('attributes' '{' attributes+=StringToAttributeMapEntry ( "," attributes+=StringToAttributeMapEntry)* '}' )?
	////	'}'
	//TypedParameter returns coreextension::TypedParameter: //	(localGenerated?='localGenerated')?
	/// *'TypedParameter'* / name=EString //	'{'
	//	//		('internalId' internalId=EString)?
	//	"?" type=EString (">" comment=EString)?;
	public TypedParameterElements getTypedParameterAccess() {
		return (pTypedParameter != null) ? pTypedParameter : (pTypedParameter = new TypedParameterElements());
	}
	
	public ParserRule getTypedParameterRule() {
		return getTypedParameterAccess().getRule();
	}

	//AbstractNode:
	//	State | Initial | Final | Any | Junction | Fork;
	public AbstractNodeElements getAbstractNodeAccess() {
		return (pAbstractNode != null) ? pAbstractNode : (pAbstractNode = new AbstractNodeElements());
	}
	
	public ParserRule getAbstractNodeRule() {
		return getAbstractNodeAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" |
	//	"n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
