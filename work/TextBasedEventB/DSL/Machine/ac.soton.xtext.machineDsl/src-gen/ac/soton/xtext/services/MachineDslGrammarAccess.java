/*
* generated by Xtext
*/
package ac.soton.xtext.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class MachineDslGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class MachineElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Machine");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMachineAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cMachineKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cSolidusSolidusKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cCommentAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cCommentEStringParserRuleCall_3_1_0 = (RuleCall)cCommentAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cRefinesKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cRefinesAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cRefinesMachineCrossReference_4_1_0 = (CrossReference)cRefinesAssignment_4_1.eContents().get(0);
		private final RuleCall cRefinesMachineEStringParserRuleCall_4_1_0_1 = (RuleCall)cRefinesMachineCrossReference_4_1_0.eContents().get(1);
		private final Assignment cRefinesAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final CrossReference cRefinesMachineCrossReference_4_2_0 = (CrossReference)cRefinesAssignment_4_2.eContents().get(0);
		private final RuleCall cRefinesMachineEStringParserRuleCall_4_2_0_1 = (RuleCall)cRefinesMachineCrossReference_4_2_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cSeesKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cSeesAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final CrossReference cSeesContextCrossReference_5_1_0 = (CrossReference)cSeesAssignment_5_1.eContents().get(0);
		private final RuleCall cSeesContextEStringParserRuleCall_5_1_0_1 = (RuleCall)cSeesContextCrossReference_5_1_0.eContents().get(1);
		private final Assignment cSeesAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final CrossReference cSeesContextCrossReference_5_2_0 = (CrossReference)cSeesAssignment_5_2.eContents().get(0);
		private final RuleCall cSeesContextEStringParserRuleCall_5_2_0_1 = (RuleCall)cSeesContextCrossReference_5_2_0.eContents().get(1);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cVariablesKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cVariablesAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cVariablesVariableParserRuleCall_6_1_0 = (RuleCall)cVariablesAssignment_6_1.eContents().get(0);
		private final Assignment cVariablesAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cVariablesVariableParserRuleCall_6_2_0 = (RuleCall)cVariablesAssignment_6_2.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cInvariantsKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cInvariantsAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cInvariantsInvariantParserRuleCall_7_1_0 = (RuleCall)cInvariantsAssignment_7_1.eContents().get(0);
		private final Assignment cInvariantsAssignment_7_2 = (Assignment)cGroup_7.eContents().get(2);
		private final RuleCall cInvariantsInvariantParserRuleCall_7_2_0 = (RuleCall)cInvariantsAssignment_7_2.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cVariantKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cVariantAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cVariantVariantParserRuleCall_8_1_0 = (RuleCall)cVariantAssignment_8_1.eContents().get(0);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cEventsKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Assignment cEventsAssignment_9_1 = (Assignment)cGroup_9.eContents().get(1);
		private final RuleCall cEventsEventParserRuleCall_9_1_0 = (RuleCall)cEventsAssignment_9_1.eContents().get(0);
		private final Assignment cEventsAssignment_9_2 = (Assignment)cGroup_9.eContents().get(2);
		private final RuleCall cEventsEventParserRuleCall_9_2_0 = (RuleCall)cEventsAssignment_9_2.eContents().get(0);
		private final Keyword cEndKeyword_10 = (Keyword)cGroup.eContents().get(10);
		
		//Machine:
		//	{Machine} //	(localGenerated?='localGenerated')?
		//	"machine" name=EString //	'{'
		//	//		('internalId' internalId=EString)?
		//	("//" comment=EString)? ("refines" / *'('* / refines+=[Machine|EString] / *","* / refines+=[Machine|EString]*)? / *')'* /
		//	("sees" / *'('* / sees+=[context::Context|EString] / *","* / sees+=[context::Context|EString]*)? / *')'* / //		('annotations' '{' annotations+=Annotation ( "," annotations+=Annotation)* '}' )?
		//	//		('extensions' '{' extensions+=AbstractExtension ( "," extensions+=AbstractExtension)* '}' )?
		//	//		('attributes' '{' attributes+=StringToAttributeMapEntry ( "," attributes+=StringToAttributeMapEntry)* '}' )?
		//	("variables" / *'{'* / variables+=Variable / *","* / variables+=Variable*)? / *'}'* / ("invariants" / *'{'* /
		//	invariants+=Invariant invariants+=Invariant*)? / *'}'* / ("variant" variant=Variant)? ("events" / *'{'* / events+=event
		//	/ *","* / events+=event*)? / *'}'* / //	'}'
		//	"end";
		public ParserRule getRule() { return rule; }

		//{Machine} //	(localGenerated?='localGenerated')?
		//"machine" name=EString //	'{'
		////		('internalId' internalId=EString)?
		//("//" comment=EString)? ("refines" / *'('* / refines+=[Machine|EString] / *","* / refines+=[Machine|EString]*)? / *')'* /
		//("sees" / *'('* / sees+=[context::Context|EString] / *","* / sees+=[context::Context|EString]*)? / *')'* / //		('annotations' '{' annotations+=Annotation ( "," annotations+=Annotation)* '}' )?
		////		('extensions' '{' extensions+=AbstractExtension ( "," extensions+=AbstractExtension)* '}' )?
		////		('attributes' '{' attributes+=StringToAttributeMapEntry ( "," attributes+=StringToAttributeMapEntry)* '}' )?
		//("variables" / *'{'* / variables+=Variable / *","* / variables+=Variable*)? / *'}'* / ("invariants" / *'{'* /
		//invariants+=Invariant invariants+=Invariant*)? / *'}'* / ("variant" variant=Variant)? ("events" / *'{'* / events+=event
		/// *","* / events+=event*)? / *'}'* / //	'}'
		//"end"
		public Group getGroup() { return cGroup; }

		//{Machine}
		public Action getMachineAction_0() { return cMachineAction_0; }

		////	(localGenerated?='localGenerated')?
		//"machine"
		public Keyword getMachineKeyword_1() { return cMachineKeyword_1; }

		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }

		//("//" comment=EString)?
		public Group getGroup_3() { return cGroup_3; }

		//"//"
		public Keyword getSolidusSolidusKeyword_3_0() { return cSolidusSolidusKeyword_3_0; }

		//comment=EString
		public Assignment getCommentAssignment_3_1() { return cCommentAssignment_3_1; }

		//EString
		public RuleCall getCommentEStringParserRuleCall_3_1_0() { return cCommentEStringParserRuleCall_3_1_0; }

		//("refines" / *'('* / refines+=[Machine|EString] / *","* / refines+=[Machine|EString]*)?
		public Group getGroup_4() { return cGroup_4; }

		//"refines"
		public Keyword getRefinesKeyword_4_0() { return cRefinesKeyword_4_0; }

		/// *'('* / refines+=[Machine|EString]
		public Assignment getRefinesAssignment_4_1() { return cRefinesAssignment_4_1; }

		//[Machine|EString]
		public CrossReference getRefinesMachineCrossReference_4_1_0() { return cRefinesMachineCrossReference_4_1_0; }

		//EString
		public RuleCall getRefinesMachineEStringParserRuleCall_4_1_0_1() { return cRefinesMachineEStringParserRuleCall_4_1_0_1; }

		/// *","* / refines+=[Machine|EString]*
		public Assignment getRefinesAssignment_4_2() { return cRefinesAssignment_4_2; }

		//[Machine|EString]
		public CrossReference getRefinesMachineCrossReference_4_2_0() { return cRefinesMachineCrossReference_4_2_0; }

		//EString
		public RuleCall getRefinesMachineEStringParserRuleCall_4_2_0_1() { return cRefinesMachineEStringParserRuleCall_4_2_0_1; }

		//("sees" / *'('* / sees+=[context::Context|EString] / *","* / sees+=[context::Context|EString]*)?
		public Group getGroup_5() { return cGroup_5; }

		//"sees"
		public Keyword getSeesKeyword_5_0() { return cSeesKeyword_5_0; }

		/// *'('* / sees+=[context::Context|EString]
		public Assignment getSeesAssignment_5_1() { return cSeesAssignment_5_1; }

		//[context::Context|EString]
		public CrossReference getSeesContextCrossReference_5_1_0() { return cSeesContextCrossReference_5_1_0; }

		//EString
		public RuleCall getSeesContextEStringParserRuleCall_5_1_0_1() { return cSeesContextEStringParserRuleCall_5_1_0_1; }

		/// *","* / sees+=[context::Context|EString]*
		public Assignment getSeesAssignment_5_2() { return cSeesAssignment_5_2; }

		//[context::Context|EString]
		public CrossReference getSeesContextCrossReference_5_2_0() { return cSeesContextCrossReference_5_2_0; }

		//EString
		public RuleCall getSeesContextEStringParserRuleCall_5_2_0_1() { return cSeesContextEStringParserRuleCall_5_2_0_1; }

		//("variables" / *'{'* / variables+=Variable / *","* / variables+=Variable*)?
		public Group getGroup_6() { return cGroup_6; }

		//"variables"
		public Keyword getVariablesKeyword_6_0() { return cVariablesKeyword_6_0; }

		/// *'{'* / variables+=Variable
		public Assignment getVariablesAssignment_6_1() { return cVariablesAssignment_6_1; }

		//Variable
		public RuleCall getVariablesVariableParserRuleCall_6_1_0() { return cVariablesVariableParserRuleCall_6_1_0; }

		/// *","* / variables+=Variable*
		public Assignment getVariablesAssignment_6_2() { return cVariablesAssignment_6_2; }

		//Variable
		public RuleCall getVariablesVariableParserRuleCall_6_2_0() { return cVariablesVariableParserRuleCall_6_2_0; }

		//("invariants" / *'{'* / invariants+=Invariant invariants+=Invariant*)?
		public Group getGroup_7() { return cGroup_7; }

		//"invariants"
		public Keyword getInvariantsKeyword_7_0() { return cInvariantsKeyword_7_0; }

		/// *'{'* / invariants+=Invariant
		public Assignment getInvariantsAssignment_7_1() { return cInvariantsAssignment_7_1; }

		//Invariant
		public RuleCall getInvariantsInvariantParserRuleCall_7_1_0() { return cInvariantsInvariantParserRuleCall_7_1_0; }

		//invariants+=Invariant*
		public Assignment getInvariantsAssignment_7_2() { return cInvariantsAssignment_7_2; }

		//Invariant
		public RuleCall getInvariantsInvariantParserRuleCall_7_2_0() { return cInvariantsInvariantParserRuleCall_7_2_0; }

		//("variant" variant=Variant)?
		public Group getGroup_8() { return cGroup_8; }

		//"variant"
		public Keyword getVariantKeyword_8_0() { return cVariantKeyword_8_0; }

		//variant=Variant
		public Assignment getVariantAssignment_8_1() { return cVariantAssignment_8_1; }

		//Variant
		public RuleCall getVariantVariantParserRuleCall_8_1_0() { return cVariantVariantParserRuleCall_8_1_0; }

		//("events" / *'{'* / events+=event / *","* / events+=event*)?
		public Group getGroup_9() { return cGroup_9; }

		//"events"
		public Keyword getEventsKeyword_9_0() { return cEventsKeyword_9_0; }

		/// *'{'* / events+=event
		public Assignment getEventsAssignment_9_1() { return cEventsAssignment_9_1; }

		//event
		public RuleCall getEventsEventParserRuleCall_9_1_0() { return cEventsEventParserRuleCall_9_1_0; }

		/// *","* / events+=event*
		public Assignment getEventsAssignment_9_2() { return cEventsAssignment_9_2; }

		//event
		public RuleCall getEventsEventParserRuleCall_9_2_0() { return cEventsEventParserRuleCall_9_2_0; }

		////	'}'
		//"end"
		public Keyword getEndKeyword_10() { return cEndKeyword_10; }
	}

	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		////AbstractExtension returns core::AbstractExtension:
		////	Extension;
		////Annotation returns core::Annotation:
		////	{core::Annotation}
		////	'Annotation'
		////	'{'
		////		('source' source=EString)?
		////		('references' '(' references+=[ecore::EObject|EString] ( "," references+=[ecore::EObject|EString])* ')' )?
		////		('annotations' '{' annotations+=Annotation ( "," annotations+=Annotation)* '}' )?
		////		('details' '{' details+=StringToStringMapEntry ( "," details+=StringToStringMapEntry)* '}' )?
		////		('contents' '{' contents+=EObject ( "," contents+=EObject)* '}' )?
		////	'}';
		////StringToAttributeMapEntry returns core::StringToAttributeMapEntry:
		////	'StringToAttributeMapEntry'
		////	'{'
		////		'key' key=EString
		////		('value' value=Attribute)?
		////	'}';
		////EBoolean returns ecore::EBoolean:
		////	'true' | 'false';
		//EString returns ecore::EString:
		//	STRING | ID;
		public ParserRule getRule() { return rule; }

		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }

		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}

	public class VariableElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Variable");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cVariableAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cSolidusSolidusKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cCommentAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cCommentEStringParserRuleCall_2_1_0 = (RuleCall)cCommentAssignment_2_1.eContents().get(0);
		
		////Context returns context::Context:
		////	{context::Context}
		////	(localGenerated?='localGenerated')?
		////	'Context'
		////	name=EString
		////	'{'
		////		('internalId' internalId=EString)?
		////		('//' comment=EString)?
		////		('extends' '(' extends+=[context::Context|EString] ( "," extends+=[context::Context|EString])* ')' )?
		////		('annotations' '{' annotations+=Annotation ( "," annotations+=Annotation)* '}' )?
		////		('extensions' '{' extensions+=AbstractExtension ( "," extensions+=AbstractExtension)* '}' )?
		////		('attributes' '{' attributes+=StringToAttributeMapEntry ( "," attributes+=StringToAttributeMapEntry)* '}' )?
		////		('sets' '{' sets+=CarrierSet ( "," sets+=CarrierSet)* '}' )?
		////		('constants' '{' constants+=Constant ( "," constants+=Constant)* '}' )?
		////		('axioms' '{' axioms+=Axiom ( "," axioms+=Axiom)* '}' )?
		////	'}';
		////		('annotations' '{' annotations+=Annotation ( "," annotations+=Annotation)* '}' )?
		////		('extensions' '{' extensions+=AbstractExtension ( "," extensions+=AbstractExtension)* '}' )?
		////		('attributes' '{' attributes+=StringToAttributeMapEntry ( "," attributes+=StringToAttributeMapEntry)* '}' )?
		////	'}'
		//Variable:
		//	{Variable} //	(localGenerated?='localGenerated')?
		//	//	'Variable'
		//	name=EString //	'{'
		//	//		('internalId' internalId=EString)?
		//	("//" comment=EString)?;
		public ParserRule getRule() { return rule; }

		//{Variable} //	(localGenerated?='localGenerated')?
		////	'Variable'
		//name=EString //	'{'
		////		('internalId' internalId=EString)?
		//("//" comment=EString)?
		public Group getGroup() { return cGroup; }

		//{Variable}
		public Action getVariableAction_0() { return cVariableAction_0; }

		////	(localGenerated?='localGenerated')?
		////	'Variable'
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }

		//("//" comment=EString)?
		public Group getGroup_2() { return cGroup_2; }

		//"//"
		public Keyword getSolidusSolidusKeyword_2_0() { return cSolidusSolidusKeyword_2_0; }

		//comment=EString
		public Assignment getCommentAssignment_2_1() { return cCommentAssignment_2_1; }

		//EString
		public RuleCall getCommentEStringParserRuleCall_2_1_0() { return cCommentEStringParserRuleCall_2_1_0; }
	}

	public class InvariantElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Invariant");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCommercialAtKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cPredicateAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cPredicateEStringParserRuleCall_2_0 = (RuleCall)cPredicateAssignment_2.eContents().get(0);
		private final Assignment cTheoremAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cTheoremTheoremKeyword_3_0 = (Keyword)cTheoremAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cSolidusSolidusKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cCommentAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cCommentEStringParserRuleCall_4_1_0 = (RuleCall)cCommentAssignment_4_1.eContents().get(0);
		
		////		('annotations' '{' annotations+=Annotation ( "," annotations+=Annotation)* '}' )?
		////		('extensions' '{' extensions+=AbstractExtension ( "," extensions+=AbstractExtension)* '}' )?
		////		('attributes' '{' attributes+=StringToAttributeMapEntry ( "," attributes+=StringToAttributeMapEntry)* '}' )?
		////	'}'
		//Invariant: //	(localGenerated?='localGenerated')?
		////	'Invariant'
		//	"@" name=EString //	'{'
		//	//		('internalId' internalId=EString)?
		//	//		'is' 
		//	predicate=EString? theorem?="theorem"? ("//" comment=EString)?;
		public ParserRule getRule() { return rule; }

		////	(localGenerated?='localGenerated')?
		////	'Invariant'
		//"@" name=EString //	'{'
		////		('internalId' internalId=EString)?
		////		'is' 
		//predicate=EString? theorem?="theorem"? ("//" comment=EString)?
		public Group getGroup() { return cGroup; }

		////	(localGenerated?='localGenerated')?
		////	'Invariant'
		//"@"
		public Keyword getCommercialAtKeyword_0() { return cCommercialAtKeyword_0; }

		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }

		////	'{'
		////		('internalId' internalId=EString)?
		////		'is' 
		//predicate=EString?
		public Assignment getPredicateAssignment_2() { return cPredicateAssignment_2; }

		//EString
		public RuleCall getPredicateEStringParserRuleCall_2_0() { return cPredicateEStringParserRuleCall_2_0; }

		//theorem?="theorem"?
		public Assignment getTheoremAssignment_3() { return cTheoremAssignment_3; }

		//"theorem"
		public Keyword getTheoremTheoremKeyword_3_0() { return cTheoremTheoremKeyword_3_0; }

		//("//" comment=EString)?
		public Group getGroup_4() { return cGroup_4; }

		//"//"
		public Keyword getSolidusSolidusKeyword_4_0() { return cSolidusSolidusKeyword_4_0; }

		//comment=EString
		public Assignment getCommentAssignment_4_1() { return cCommentAssignment_4_1; }

		//EString
		public RuleCall getCommentEStringParserRuleCall_4_1_0() { return cCommentEStringParserRuleCall_4_1_0; }
	}

	public class VariantElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Variant");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cVariantKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cExpressionKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cExpressionAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cExpressionEStringParserRuleCall_2_0 = (RuleCall)cExpressionAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cSolidusSolidusKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cCommentAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cCommentEStringParserRuleCall_3_1_0 = (RuleCall)cCommentAssignment_3_1.eContents().get(0);
		
		////		('annotations' '{' annotations+=Annotation ( "," annotations+=Annotation)* '}' )?
		////		('extensions' '{' extensions+=AbstractExtension ( "," extensions+=AbstractExtension)* '}' )?
		////		('attributes' '{' attributes+=StringToAttributeMapEntry ( "," attributes+=StringToAttributeMapEntry)* '}' )?
		////	'}'
		//Variant: //	(localGenerated?='localGenerated')?
		//	"Variant" //	'{'
		//	//		('internalId' internalId=EString)?
		//	"expression" expression=EString? ("//" comment=EString)?;
		public ParserRule getRule() { return rule; }

		////	(localGenerated?='localGenerated')?
		//"Variant" //	'{'
		////		('internalId' internalId=EString)?
		//"expression" expression=EString? ("//" comment=EString)?
		public Group getGroup() { return cGroup; }

		////	(localGenerated?='localGenerated')?
		//"Variant"
		public Keyword getVariantKeyword_0() { return cVariantKeyword_0; }

		////	'{'
		////		('internalId' internalId=EString)?
		//"expression"
		public Keyword getExpressionKeyword_1() { return cExpressionKeyword_1; }

		//expression=EString?
		public Assignment getExpressionAssignment_2() { return cExpressionAssignment_2; }

		//EString
		public RuleCall getExpressionEStringParserRuleCall_2_0() { return cExpressionEStringParserRuleCall_2_0; }

		//("//" comment=EString)?
		public Group getGroup_3() { return cGroup_3; }

		//"//"
		public Keyword getSolidusSolidusKeyword_3_0() { return cSolidusSolidusKeyword_3_0; }

		//comment=EString
		public Assignment getCommentAssignment_3_1() { return cCommentAssignment_3_1; }

		//EString
		public RuleCall getCommentEStringParserRuleCall_3_1_0() { return cCommentEStringParserRuleCall_3_1_0; }
	}

	public class EventElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "event");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cEventAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cEventKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Assignment cExtendedAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cExtendedExtendedKeyword_3_0 = (Keyword)cExtendedAssignment_3.eContents().get(0);
		private final Assignment cConvergenceAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cConvergenceConvergenceEnumRuleCall_4_0 = (RuleCall)cConvergenceAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cSolidusSolidusKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cCommentAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cCommentEStringParserRuleCall_5_1_0 = (RuleCall)cCommentAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cRefinesKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cRefinesAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final CrossReference cRefinesEventCrossReference_6_1_0 = (CrossReference)cRefinesAssignment_6_1.eContents().get(0);
		private final RuleCall cRefinesEventEStringParserRuleCall_6_1_0_1 = (RuleCall)cRefinesEventCrossReference_6_1_0.eContents().get(1);
		private final Group cGroup_6_2 = (Group)cGroup_6.eContents().get(2);
		private final Keyword cCommaKeyword_6_2_0 = (Keyword)cGroup_6_2.eContents().get(0);
		private final Assignment cRefinesAssignment_6_2_1 = (Assignment)cGroup_6_2.eContents().get(1);
		private final CrossReference cRefinesEventCrossReference_6_2_1_0 = (CrossReference)cRefinesAssignment_6_2_1.eContents().get(0);
		private final RuleCall cRefinesEventEStringParserRuleCall_6_2_1_0_1 = (RuleCall)cRefinesEventCrossReference_6_2_1_0.eContents().get(1);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cWhenKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cGuardsAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cGuardsGuardParserRuleCall_7_1_0 = (RuleCall)cGuardsAssignment_7_1.eContents().get(0);
		private final Assignment cGuardsAssignment_7_2 = (Assignment)cGroup_7.eContents().get(2);
		private final RuleCall cGuardsGuardParserRuleCall_7_2_0 = (RuleCall)cGuardsAssignment_7_2.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cAnyKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cParametersAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cParametersParameterParserRuleCall_8_1_0 = (RuleCall)cParametersAssignment_8_1.eContents().get(0);
		private final Assignment cParametersAssignment_8_2 = (Assignment)cGroup_8.eContents().get(2);
		private final RuleCall cParametersParameterParserRuleCall_8_2_0 = (RuleCall)cParametersAssignment_8_2.eContents().get(0);
		private final Keyword cWhereKeyword_8_3 = (Keyword)cGroup_8.eContents().get(3);
		private final Assignment cGuardsAssignment_8_4 = (Assignment)cGroup_8.eContents().get(4);
		private final RuleCall cGuardsGuardParserRuleCall_8_4_0 = (RuleCall)cGuardsAssignment_8_4.eContents().get(0);
		private final Assignment cGuardsAssignment_8_5 = (Assignment)cGroup_8.eContents().get(5);
		private final RuleCall cGuardsGuardParserRuleCall_8_5_0 = (RuleCall)cGuardsAssignment_8_5.eContents().get(0);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cWithKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Assignment cWitnessesAssignment_9_1 = (Assignment)cGroup_9.eContents().get(1);
		private final RuleCall cWitnessesWitnessParserRuleCall_9_1_0 = (RuleCall)cWitnessesAssignment_9_1.eContents().get(0);
		private final Assignment cWitnessesAssignment_9_2 = (Assignment)cGroup_9.eContents().get(2);
		private final RuleCall cWitnessesWitnessParserRuleCall_9_2_0 = (RuleCall)cWitnessesAssignment_9_2.eContents().get(0);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cThenKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Assignment cActionsAssignment_10_1 = (Assignment)cGroup_10.eContents().get(1);
		private final RuleCall cActionsActionParserRuleCall_10_1_0 = (RuleCall)cActionsAssignment_10_1.eContents().get(0);
		private final Assignment cActionsAssignment_10_2 = (Assignment)cGroup_10.eContents().get(2);
		private final RuleCall cActionsActionParserRuleCall_10_2_0 = (RuleCall)cActionsAssignment_10_2.eContents().get(0);
		private final Keyword cEndKeyword_11 = (Keyword)cGroup.eContents().get(11);
		
		//event returns Event:
		//	{Event} //	(localGenerated?='localGenerated')?
		//	"event" name=EString extended?="extended"? //	'{'
		//	//		('internalId' internalId=EString)?
		//	/ *'convergence'* / convergence=Convergence? ("//" comment=EString)? ("refines" / *'('* / refines+=[Event|EString] (","
		//	refines+=[Event|EString])*)? / *')'* / //		('annotations' '{' annotations+=Annotation ( "," annotations+=Annotation)* '}' )?
		//	//		('extensions' '{' extensions+=AbstractExtension ( "," extensions+=AbstractExtension)* '}' )?
		//	//		('attributes' '{' attributes+=StringToAttributeMapEntry ( "," attributes+=StringToAttributeMapEntry)* '}' )?
		//	("when" / *'{'* / guards+=Guard / *","* / guards+=Guard*)? / *'}'* / ("any" / *'{'* / parameters+=Parameter / *","* /
		//	parameters+=Parameter* / *'}'* / "where" / *'{'* / guards+=Guard / *","* / guards+=Guard*)? / *'}'* / ("with" / *'{'* /
		//	witnesses+=Witness / *","* / witnesses+=Witness*)? / *'}'* / ("then" / *'{'* / actions+=Action / *","* / actions+=Action*)?
		//	/ *'}'* / //	'}'
		//	"end";
		public ParserRule getRule() { return rule; }

		//{Event} //	(localGenerated?='localGenerated')?
		//"event" name=EString extended?="extended"? //	'{'
		////		('internalId' internalId=EString)?
		/// *'convergence'* / convergence=Convergence? ("//" comment=EString)? ("refines" / *'('* / refines+=[Event|EString] (","
		//refines+=[Event|EString])*)? / *')'* / //		('annotations' '{' annotations+=Annotation ( "," annotations+=Annotation)* '}' )?
		////		('extensions' '{' extensions+=AbstractExtension ( "," extensions+=AbstractExtension)* '}' )?
		////		('attributes' '{' attributes+=StringToAttributeMapEntry ( "," attributes+=StringToAttributeMapEntry)* '}' )?
		//("when" / *'{'* / guards+=Guard / *","* / guards+=Guard*)? / *'}'* / ("any" / *'{'* / parameters+=Parameter / *","* /
		//parameters+=Parameter* / *'}'* / "where" / *'{'* / guards+=Guard / *","* / guards+=Guard*)? / *'}'* / ("with" / *'{'* /
		//witnesses+=Witness / *","* / witnesses+=Witness*)? / *'}'* / ("then" / *'{'* / actions+=Action / *","* / actions+=Action*)?
		/// *'}'* / //	'}'
		//"end"
		public Group getGroup() { return cGroup; }

		//{Event}
		public Action getEventAction_0() { return cEventAction_0; }

		////	(localGenerated?='localGenerated')?
		//"event"
		public Keyword getEventKeyword_1() { return cEventKeyword_1; }

		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }

		//extended?="extended"?
		public Assignment getExtendedAssignment_3() { return cExtendedAssignment_3; }

		//"extended"
		public Keyword getExtendedExtendedKeyword_3_0() { return cExtendedExtendedKeyword_3_0; }

		/// *'convergence'* / convergence=Convergence?
		public Assignment getConvergenceAssignment_4() { return cConvergenceAssignment_4; }

		//Convergence
		public RuleCall getConvergenceConvergenceEnumRuleCall_4_0() { return cConvergenceConvergenceEnumRuleCall_4_0; }

		//("//" comment=EString)?
		public Group getGroup_5() { return cGroup_5; }

		//"//"
		public Keyword getSolidusSolidusKeyword_5_0() { return cSolidusSolidusKeyword_5_0; }

		//comment=EString
		public Assignment getCommentAssignment_5_1() { return cCommentAssignment_5_1; }

		//EString
		public RuleCall getCommentEStringParserRuleCall_5_1_0() { return cCommentEStringParserRuleCall_5_1_0; }

		//("refines" / *'('* / refines+=[Event|EString] ("," refines+=[Event|EString])*)?
		public Group getGroup_6() { return cGroup_6; }

		//"refines"
		public Keyword getRefinesKeyword_6_0() { return cRefinesKeyword_6_0; }

		/// *'('* / refines+=[Event|EString]
		public Assignment getRefinesAssignment_6_1() { return cRefinesAssignment_6_1; }

		//[Event|EString]
		public CrossReference getRefinesEventCrossReference_6_1_0() { return cRefinesEventCrossReference_6_1_0; }

		//EString
		public RuleCall getRefinesEventEStringParserRuleCall_6_1_0_1() { return cRefinesEventEStringParserRuleCall_6_1_0_1; }

		//("," refines+=[Event|EString])*
		public Group getGroup_6_2() { return cGroup_6_2; }

		//","
		public Keyword getCommaKeyword_6_2_0() { return cCommaKeyword_6_2_0; }

		//refines+=[Event|EString]
		public Assignment getRefinesAssignment_6_2_1() { return cRefinesAssignment_6_2_1; }

		//[Event|EString]
		public CrossReference getRefinesEventCrossReference_6_2_1_0() { return cRefinesEventCrossReference_6_2_1_0; }

		//EString
		public RuleCall getRefinesEventEStringParserRuleCall_6_2_1_0_1() { return cRefinesEventEStringParserRuleCall_6_2_1_0_1; }

		//("when" / *'{'* / guards+=Guard / *","* / guards+=Guard*)?
		public Group getGroup_7() { return cGroup_7; }

		//"when"
		public Keyword getWhenKeyword_7_0() { return cWhenKeyword_7_0; }

		/// *'{'* / guards+=Guard
		public Assignment getGuardsAssignment_7_1() { return cGuardsAssignment_7_1; }

		//Guard
		public RuleCall getGuardsGuardParserRuleCall_7_1_0() { return cGuardsGuardParserRuleCall_7_1_0; }

		/// *","* / guards+=Guard*
		public Assignment getGuardsAssignment_7_2() { return cGuardsAssignment_7_2; }

		//Guard
		public RuleCall getGuardsGuardParserRuleCall_7_2_0() { return cGuardsGuardParserRuleCall_7_2_0; }

		//("any" / *'{'* / parameters+=Parameter / *","* / parameters+=Parameter* / *'}'* / "where" / *'{'* / guards+=Guard / *","* /
		//guards+=Guard*)?
		public Group getGroup_8() { return cGroup_8; }

		//"any"
		public Keyword getAnyKeyword_8_0() { return cAnyKeyword_8_0; }

		/// *'{'* / parameters+=Parameter
		public Assignment getParametersAssignment_8_1() { return cParametersAssignment_8_1; }

		//Parameter
		public RuleCall getParametersParameterParserRuleCall_8_1_0() { return cParametersParameterParserRuleCall_8_1_0; }

		/// *","* / parameters+=Parameter*
		public Assignment getParametersAssignment_8_2() { return cParametersAssignment_8_2; }

		//Parameter
		public RuleCall getParametersParameterParserRuleCall_8_2_0() { return cParametersParameterParserRuleCall_8_2_0; }

		//"where"
		public Keyword getWhereKeyword_8_3() { return cWhereKeyword_8_3; }

		/// *'{'* / guards+=Guard
		public Assignment getGuardsAssignment_8_4() { return cGuardsAssignment_8_4; }

		//Guard
		public RuleCall getGuardsGuardParserRuleCall_8_4_0() { return cGuardsGuardParserRuleCall_8_4_0; }

		/// *","* / guards+=Guard*
		public Assignment getGuardsAssignment_8_5() { return cGuardsAssignment_8_5; }

		//Guard
		public RuleCall getGuardsGuardParserRuleCall_8_5_0() { return cGuardsGuardParserRuleCall_8_5_0; }

		//("with" / *'{'* / witnesses+=Witness / *","* / witnesses+=Witness*)?
		public Group getGroup_9() { return cGroup_9; }

		//"with"
		public Keyword getWithKeyword_9_0() { return cWithKeyword_9_0; }

		/// *'{'* / witnesses+=Witness
		public Assignment getWitnessesAssignment_9_1() { return cWitnessesAssignment_9_1; }

		//Witness
		public RuleCall getWitnessesWitnessParserRuleCall_9_1_0() { return cWitnessesWitnessParserRuleCall_9_1_0; }

		/// *","* / witnesses+=Witness*
		public Assignment getWitnessesAssignment_9_2() { return cWitnessesAssignment_9_2; }

		//Witness
		public RuleCall getWitnessesWitnessParserRuleCall_9_2_0() { return cWitnessesWitnessParserRuleCall_9_2_0; }

		//("then" / *'{'* / actions+=Action / *","* / actions+=Action*)?
		public Group getGroup_10() { return cGroup_10; }

		//"then"
		public Keyword getThenKeyword_10_0() { return cThenKeyword_10_0; }

		/// *'{'* / actions+=Action
		public Assignment getActionsAssignment_10_1() { return cActionsAssignment_10_1; }

		//Action
		public RuleCall getActionsActionParserRuleCall_10_1_0() { return cActionsActionParserRuleCall_10_1_0; }

		/// *","* / actions+=Action*
		public Assignment getActionsAssignment_10_2() { return cActionsAssignment_10_2; }

		//Action
		public RuleCall getActionsActionParserRuleCall_10_2_0() { return cActionsActionParserRuleCall_10_2_0; }

		////	'}'
		//"end"
		public Keyword getEndKeyword_11() { return cEndKeyword_11; }
	}

	public class ParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Parameter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cParameterAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cSolidusSolidusKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cCommentAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cCommentEStringParserRuleCall_2_1_0 = (RuleCall)cCommentAssignment_2_1.eContents().get(0);
		
		////		('annotations' '{' annotations+=Annotation ( "," annotations+=Annotation)* '}' )?
		////		('extensions' '{' extensions+=AbstractExtension ( "," extensions+=AbstractExtension)* '}' )?
		////		('attributes' '{' attributes+=StringToAttributeMapEntry ( "," attributes+=StringToAttributeMapEntry)* '}' )?
		////	'}'
		//Parameter:
		//	{Parameter} //	(localGenerated?='localGenerated')?
		//	//	'Parameter'
		//	name=EString //	'{'
		//	//		('internalId' internalId=EString)?
		//	("//" comment=EString)?;
		public ParserRule getRule() { return rule; }

		//{Parameter} //	(localGenerated?='localGenerated')?
		////	'Parameter'
		//name=EString //	'{'
		////		('internalId' internalId=EString)?
		//("//" comment=EString)?
		public Group getGroup() { return cGroup; }

		//{Parameter}
		public Action getParameterAction_0() { return cParameterAction_0; }

		////	(localGenerated?='localGenerated')?
		////	'Parameter'
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }

		//("//" comment=EString)?
		public Group getGroup_2() { return cGroup_2; }

		//"//"
		public Keyword getSolidusSolidusKeyword_2_0() { return cSolidusSolidusKeyword_2_0; }

		//comment=EString
		public Assignment getCommentAssignment_2_1() { return cCommentAssignment_2_1; }

		//EString
		public RuleCall getCommentEStringParserRuleCall_2_1_0() { return cCommentEStringParserRuleCall_2_1_0; }
	}

	public class GuardElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Guard");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCommercialAtKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cPredicateAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cPredicateEStringParserRuleCall_2_0 = (RuleCall)cPredicateAssignment_2.eContents().get(0);
		private final Assignment cTheoremAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cTheoremTheoremKeyword_3_0 = (Keyword)cTheoremAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cSolidusSolidusKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cCommentAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cCommentEStringParserRuleCall_4_1_0 = (RuleCall)cCommentAssignment_4_1.eContents().get(0);
		
		////		('annotations' '{' annotations+=Annotation ( "," annotations+=Annotation)* '}' )?
		////		('extensions' '{' extensions+=AbstractExtension ( "," extensions+=AbstractExtension)* '}' )?
		////		('attributes' '{' attributes+=StringToAttributeMapEntry ( "," attributes+=StringToAttributeMapEntry)* '}' )?
		////	'}'
		//Guard: //	(localGenerated?='localGenerated')?
		////	'Guard'
		//	"@" name=EString //	'{'
		//	//		('internalId' internalId=EString)?
		//	predicate=EString? theorem?="theorem"? ("//" comment=EString)?;
		public ParserRule getRule() { return rule; }

		////	(localGenerated?='localGenerated')?
		////	'Guard'
		//"@" name=EString //	'{'
		////		('internalId' internalId=EString)?
		//predicate=EString? theorem?="theorem"? ("//" comment=EString)?
		public Group getGroup() { return cGroup; }

		////	(localGenerated?='localGenerated')?
		////	'Guard'
		//"@"
		public Keyword getCommercialAtKeyword_0() { return cCommercialAtKeyword_0; }

		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }

		////	'{'
		////		('internalId' internalId=EString)?
		//predicate=EString?
		public Assignment getPredicateAssignment_2() { return cPredicateAssignment_2; }

		//EString
		public RuleCall getPredicateEStringParserRuleCall_2_0() { return cPredicateEStringParserRuleCall_2_0; }

		//theorem?="theorem"?
		public Assignment getTheoremAssignment_3() { return cTheoremAssignment_3; }

		//"theorem"
		public Keyword getTheoremTheoremKeyword_3_0() { return cTheoremTheoremKeyword_3_0; }

		//("//" comment=EString)?
		public Group getGroup_4() { return cGroup_4; }

		//"//"
		public Keyword getSolidusSolidusKeyword_4_0() { return cSolidusSolidusKeyword_4_0; }

		//comment=EString
		public Assignment getCommentAssignment_4_1() { return cCommentAssignment_4_1; }

		//EString
		public RuleCall getCommentEStringParserRuleCall_4_1_0() { return cCommentEStringParserRuleCall_4_1_0; }
	}

	public class WitnessElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Witness");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cLocalGeneratedAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cLocalGeneratedLocalGeneratedKeyword_0_0 = (Keyword)cLocalGeneratedAssignment_0.eContents().get(0);
		private final Keyword cCommercialAtKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Assignment cPredicateAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cPredicateEStringParserRuleCall_3_0 = (RuleCall)cPredicateAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cSolidusSolidusKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cCommentAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cCommentEStringParserRuleCall_4_1_0 = (RuleCall)cCommentAssignment_4_1.eContents().get(0);
		
		////		('annotations' '{' annotations+=Annotation ( "," annotations+=Annotation)* '}' )?
		////		('extensions' '{' extensions+=AbstractExtension ( "," extensions+=AbstractExtension)* '}' )?
		////		('attributes' '{' attributes+=StringToAttributeMapEntry ( "," attributes+=StringToAttributeMapEntry)* '}' )?
		////	'}'
		//Witness:
		//	localGenerated?="localGenerated"? //	'witness'
		//	"@" name=EString //	'{'
		//	//		('internalId' internalId=EString)?
		//	/ *'predicate'* / predicate=EString? ("//" comment=EString)?;
		public ParserRule getRule() { return rule; }

		//localGenerated?="localGenerated"? //	'witness'
		//"@" name=EString //	'{'
		////		('internalId' internalId=EString)?
		/// *'predicate'* / predicate=EString? ("//" comment=EString)?
		public Group getGroup() { return cGroup; }

		//localGenerated?="localGenerated"?
		public Assignment getLocalGeneratedAssignment_0() { return cLocalGeneratedAssignment_0; }

		//"localGenerated"
		public Keyword getLocalGeneratedLocalGeneratedKeyword_0_0() { return cLocalGeneratedLocalGeneratedKeyword_0_0; }

		////	'witness'
		//"@"
		public Keyword getCommercialAtKeyword_1() { return cCommercialAtKeyword_1; }

		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }

		////	'{'
		////		('internalId' internalId=EString)?
		/// *'predicate'* / predicate=EString?
		public Assignment getPredicateAssignment_3() { return cPredicateAssignment_3; }

		//EString
		public RuleCall getPredicateEStringParserRuleCall_3_0() { return cPredicateEStringParserRuleCall_3_0; }

		//("//" comment=EString)?
		public Group getGroup_4() { return cGroup_4; }

		//"//"
		public Keyword getSolidusSolidusKeyword_4_0() { return cSolidusSolidusKeyword_4_0; }

		//comment=EString
		public Assignment getCommentAssignment_4_1() { return cCommentAssignment_4_1; }

		//EString
		public RuleCall getCommentEStringParserRuleCall_4_1_0() { return cCommentEStringParserRuleCall_4_1_0; }
	}

	public class ActionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Action");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCommercialAtKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cActionAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cActionEStringParserRuleCall_2_0 = (RuleCall)cActionAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cSolidusSolidusKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cCommentAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cCommentEStringParserRuleCall_3_1_0 = (RuleCall)cCommentAssignment_3_1.eContents().get(0);
		
		////		('annotations' '{' annotations+=Annotation ( "," annotations+=Annotation)* '}' )?
		////		('extensions' '{' extensions+=AbstractExtension ( "," extensions+=AbstractExtension)* '}' )?
		////		('attributes' '{' attributes+=StringToAttributeMapEntry ( "," attributes+=StringToAttributeMapEntry)* '}' )?
		////	'}'
		//Action: //	(localGenerated?='localGenerated')?
		////	'Action'
		//	"@" name=EString //	'{'
		//	//		('internalId' internalId=EString)?
		//	//		'then' 
		//	action=EString? ("//" comment=EString)?;
		public ParserRule getRule() { return rule; }

		////	(localGenerated?='localGenerated')?
		////	'Action'
		//"@" name=EString //	'{'
		////		('internalId' internalId=EString)?
		////		'then' 
		//action=EString? ("//" comment=EString)?
		public Group getGroup() { return cGroup; }

		////	(localGenerated?='localGenerated')?
		////	'Action'
		//"@"
		public Keyword getCommercialAtKeyword_0() { return cCommercialAtKeyword_0; }

		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }

		////	'{'
		////		('internalId' internalId=EString)?
		////		'then' 
		//action=EString?
		public Assignment getActionAssignment_2() { return cActionAssignment_2; }

		//EString
		public RuleCall getActionEStringParserRuleCall_2_0() { return cActionEStringParserRuleCall_2_0; }

		//("//" comment=EString)?
		public Group getGroup_3() { return cGroup_3; }

		//"//"
		public Keyword getSolidusSolidusKeyword_3_0() { return cSolidusSolidusKeyword_3_0; }

		//comment=EString
		public Assignment getCommentAssignment_3_1() { return cCommentAssignment_3_1; }

		//EString
		public RuleCall getCommentEStringParserRuleCall_3_1_0() { return cCommentEStringParserRuleCall_3_1_0; }
	}
	
	
	public class ConvergenceElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "Convergence");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cOrdinaryEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cOrdinaryOrdinaryKeyword_0_0 = (Keyword)cOrdinaryEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cConvergentEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cConvergentConvergentKeyword_1_0 = (Keyword)cConvergentEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cAnticipatedEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cAnticipatedAnticipatedKeyword_2_0 = (Keyword)cAnticipatedEnumLiteralDeclaration_2.eContents().get(0);
		
		////StringToStringMapEntry returns core::StringToStringMapEntry:
		////	{core::StringToStringMapEntry}
		////	'StringToStringMapEntry'
		////	'{'
		////		('key' key=EString)?
		////		('value' value=EString)?
		////	'}';
		////EObject returns ecore::EObject:
		////	{ecore::EObject}
		////	'EObject'
		////	;
		////Extension returns core::Extension:
		////	(localGenerated?='localGenerated')?
		////	'Extension'
		////	'{'
		////		('internalId' internalId=EString)?
		////		'extensionId' extensionId=EString
		////		('annotations' '{' annotations+=Annotation ( "," annotations+=Annotation)* '}' )?
		////		('extensions' '{' extensions+=AbstractExtension ( "," extensions+=AbstractExtension)* '}' )?
		////		('attributes' '{' attributes+=StringToAttributeMapEntry ( "," attributes+=StringToAttributeMapEntry)* '}' )?
		////	'}'
		////	;
		////Attribute returns core::Attribute:
		////	'Attribute'
		////	'{'
		////		'type' type=AttributeType
		////		'value' value=EJavaObject
		////		('annotations' '{' annotations+=Annotation ( "," annotations+=Annotation)* '}' )?
		////	'}'
		////	;
		////enum AttributeType returns core::AttributeType:
		////				Boolean = 'Boolean' | Handle = 'Handle' | Integer = 'Integer' | Long = 'Long' | String = 'String';
		////EJavaObject returns ecore::EJavaObject:
		////	'EJavaObject' / * TODO: implement this rule and an appropriate IValueConverter * /;
		////CarrierSet returns context::CarrierSet:
		////	{context::CarrierSet}
		////	(localGenerated?='localGenerated')?
		////	'carrierSet'
		////	name=EString
		////	'{'
		////		('internalId' internalId=EString)?
		////		('//' comment=EString)?
		////		('annotations' '{' annotations+=Annotation ( "," annotations+=Annotation)* '}' )?
		////		('extensions' '{' extensions+=AbstractExtension ( "," extensions+=AbstractExtension)* '}' )?
		////		('attributes' '{' attributes+=StringToAttributeMapEntry ( "," attributes+=StringToAttributeMapEntry)* '}' )?
		////	'}'
		////	;
		////Constant returns context::Constant:
		////	{context::Constant}
		////	(localGenerated?='localGenerated')?
		////	'constant'
		////	name=EString
		////	'{'
		////		('internalId' internalId=EString)?
		////		('//' comment=EString)?
		////		('annotations' '{' annotations+=Annotation ( "," annotations+=Annotation)* '}' )?
		////		('extensions' '{' extensions+=AbstractExtension ( "," extensions+=AbstractExtension)* '}' )?
		////		('attributes' '{' attributes+=StringToAttributeMapEntry ( "," attributes+=StringToAttributeMapEntry)* '}' )?
		////	'}';
		////Axiom returns context::Axiom:
		////	(localGenerated?='localGenerated')?
		////	(theorem?='theorem')?
		////	'axiom'
		////	'@'name=EString
		////	'{'
		////		('internalId' internalId=EString)?
		////		('//' comment=EString)?
		////		'predicate' predicate=EString
		////		('annotations' '{' annotations+=Annotation ( "," annotations+=Annotation)* '}' )?
		////		('extensions' '{' extensions+=AbstractExtension ( "," extensions+=AbstractExtension)* '}' )?
		////		('attributes' '{' attributes+=StringToAttributeMapEntry ( "," attributes+=StringToAttributeMapEntry)* '}' )?
		////	'}'
		////	;
		//enum Convergence:
		//	ordinary | convergent | anticipated;
		public EnumRule getRule() { return rule; }

		//ordinary | convergent | anticipated
		public Alternatives getAlternatives() { return cAlternatives; }

		//ordinary
		public EnumLiteralDeclaration getOrdinaryEnumLiteralDeclaration_0() { return cOrdinaryEnumLiteralDeclaration_0; }

		//"ordinary"
		public Keyword getOrdinaryOrdinaryKeyword_0_0() { return cOrdinaryOrdinaryKeyword_0_0; }

		//convergent
		public EnumLiteralDeclaration getConvergentEnumLiteralDeclaration_1() { return cConvergentEnumLiteralDeclaration_1; }

		//"convergent"
		public Keyword getConvergentConvergentKeyword_1_0() { return cConvergentConvergentKeyword_1_0; }

		//anticipated
		public EnumLiteralDeclaration getAnticipatedEnumLiteralDeclaration_2() { return cAnticipatedEnumLiteralDeclaration_2; }

		//"anticipated"
		public Keyword getAnticipatedAnticipatedKeyword_2_0() { return cAnticipatedAnticipatedKeyword_2_0; }
	}
	
	private MachineElements pMachine;
	private EStringElements pEString;
	private VariableElements pVariable;
	private InvariantElements pInvariant;
	private VariantElements pVariant;
	private EventElements pEvent;
	private ConvergenceElements unknownRuleConvergence;
	private ParameterElements pParameter;
	private GuardElements pGuard;
	private WitnessElements pWitness;
	private ActionElements pAction;
	
	private final Grammar grammar;

	private TerminalsGrammarAccess gaTerminals;

	@Inject
	public MachineDslGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("ac.soton.xtext.MachineDsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Machine:
	//	{Machine} //	(localGenerated?='localGenerated')?
	//	"machine" name=EString //	'{'
	//	//		('internalId' internalId=EString)?
	//	("//" comment=EString)? ("refines" / *'('* / refines+=[Machine|EString] / *","* / refines+=[Machine|EString]*)? / *')'* /
	//	("sees" / *'('* / sees+=[context::Context|EString] / *","* / sees+=[context::Context|EString]*)? / *')'* / //		('annotations' '{' annotations+=Annotation ( "," annotations+=Annotation)* '}' )?
	//	//		('extensions' '{' extensions+=AbstractExtension ( "," extensions+=AbstractExtension)* '}' )?
	//	//		('attributes' '{' attributes+=StringToAttributeMapEntry ( "," attributes+=StringToAttributeMapEntry)* '}' )?
	//	("variables" / *'{'* / variables+=Variable / *","* / variables+=Variable*)? / *'}'* / ("invariants" / *'{'* /
	//	invariants+=Invariant invariants+=Invariant*)? / *'}'* / ("variant" variant=Variant)? ("events" / *'{'* / events+=event
	//	/ *","* / events+=event*)? / *'}'* / //	'}'
	//	"end";
	public MachineElements getMachineAccess() {
		return (pMachine != null) ? pMachine : (pMachine = new MachineElements());
	}
	
	public ParserRule getMachineRule() {
		return getMachineAccess().getRule();
	}

	////AbstractExtension returns core::AbstractExtension:
	////	Extension;
	////Annotation returns core::Annotation:
	////	{core::Annotation}
	////	'Annotation'
	////	'{'
	////		('source' source=EString)?
	////		('references' '(' references+=[ecore::EObject|EString] ( "," references+=[ecore::EObject|EString])* ')' )?
	////		('annotations' '{' annotations+=Annotation ( "," annotations+=Annotation)* '}' )?
	////		('details' '{' details+=StringToStringMapEntry ( "," details+=StringToStringMapEntry)* '}' )?
	////		('contents' '{' contents+=EObject ( "," contents+=EObject)* '}' )?
	////	'}';
	////StringToAttributeMapEntry returns core::StringToAttributeMapEntry:
	////	'StringToAttributeMapEntry'
	////	'{'
	////		'key' key=EString
	////		('value' value=Attribute)?
	////	'}';
	////EBoolean returns ecore::EBoolean:
	////	'true' | 'false';
	//EString returns ecore::EString:
	//	STRING | ID;
	public EStringElements getEStringAccess() {
		return (pEString != null) ? pEString : (pEString = new EStringElements());
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}

	////Context returns context::Context:
	////	{context::Context}
	////	(localGenerated?='localGenerated')?
	////	'Context'
	////	name=EString
	////	'{'
	////		('internalId' internalId=EString)?
	////		('//' comment=EString)?
	////		('extends' '(' extends+=[context::Context|EString] ( "," extends+=[context::Context|EString])* ')' )?
	////		('annotations' '{' annotations+=Annotation ( "," annotations+=Annotation)* '}' )?
	////		('extensions' '{' extensions+=AbstractExtension ( "," extensions+=AbstractExtension)* '}' )?
	////		('attributes' '{' attributes+=StringToAttributeMapEntry ( "," attributes+=StringToAttributeMapEntry)* '}' )?
	////		('sets' '{' sets+=CarrierSet ( "," sets+=CarrierSet)* '}' )?
	////		('constants' '{' constants+=Constant ( "," constants+=Constant)* '}' )?
	////		('axioms' '{' axioms+=Axiom ( "," axioms+=Axiom)* '}' )?
	////	'}';
	////		('annotations' '{' annotations+=Annotation ( "," annotations+=Annotation)* '}' )?
	////		('extensions' '{' extensions+=AbstractExtension ( "," extensions+=AbstractExtension)* '}' )?
	////		('attributes' '{' attributes+=StringToAttributeMapEntry ( "," attributes+=StringToAttributeMapEntry)* '}' )?
	////	'}'
	//Variable:
	//	{Variable} //	(localGenerated?='localGenerated')?
	//	//	'Variable'
	//	name=EString //	'{'
	//	//		('internalId' internalId=EString)?
	//	("//" comment=EString)?;
	public VariableElements getVariableAccess() {
		return (pVariable != null) ? pVariable : (pVariable = new VariableElements());
	}
	
	public ParserRule getVariableRule() {
		return getVariableAccess().getRule();
	}

	////		('annotations' '{' annotations+=Annotation ( "," annotations+=Annotation)* '}' )?
	////		('extensions' '{' extensions+=AbstractExtension ( "," extensions+=AbstractExtension)* '}' )?
	////		('attributes' '{' attributes+=StringToAttributeMapEntry ( "," attributes+=StringToAttributeMapEntry)* '}' )?
	////	'}'
	//Invariant: //	(localGenerated?='localGenerated')?
	////	'Invariant'
	//	"@" name=EString //	'{'
	//	//		('internalId' internalId=EString)?
	//	//		'is' 
	//	predicate=EString? theorem?="theorem"? ("//" comment=EString)?;
	public InvariantElements getInvariantAccess() {
		return (pInvariant != null) ? pInvariant : (pInvariant = new InvariantElements());
	}
	
	public ParserRule getInvariantRule() {
		return getInvariantAccess().getRule();
	}

	////		('annotations' '{' annotations+=Annotation ( "," annotations+=Annotation)* '}' )?
	////		('extensions' '{' extensions+=AbstractExtension ( "," extensions+=AbstractExtension)* '}' )?
	////		('attributes' '{' attributes+=StringToAttributeMapEntry ( "," attributes+=StringToAttributeMapEntry)* '}' )?
	////	'}'
	//Variant: //	(localGenerated?='localGenerated')?
	//	"Variant" //	'{'
	//	//		('internalId' internalId=EString)?
	//	"expression" expression=EString? ("//" comment=EString)?;
	public VariantElements getVariantAccess() {
		return (pVariant != null) ? pVariant : (pVariant = new VariantElements());
	}
	
	public ParserRule getVariantRule() {
		return getVariantAccess().getRule();
	}

	//event returns Event:
	//	{Event} //	(localGenerated?='localGenerated')?
	//	"event" name=EString extended?="extended"? //	'{'
	//	//		('internalId' internalId=EString)?
	//	/ *'convergence'* / convergence=Convergence? ("//" comment=EString)? ("refines" / *'('* / refines+=[Event|EString] (","
	//	refines+=[Event|EString])*)? / *')'* / //		('annotations' '{' annotations+=Annotation ( "," annotations+=Annotation)* '}' )?
	//	//		('extensions' '{' extensions+=AbstractExtension ( "," extensions+=AbstractExtension)* '}' )?
	//	//		('attributes' '{' attributes+=StringToAttributeMapEntry ( "," attributes+=StringToAttributeMapEntry)* '}' )?
	//	("when" / *'{'* / guards+=Guard / *","* / guards+=Guard*)? / *'}'* / ("any" / *'{'* / parameters+=Parameter / *","* /
	//	parameters+=Parameter* / *'}'* / "where" / *'{'* / guards+=Guard / *","* / guards+=Guard*)? / *'}'* / ("with" / *'{'* /
	//	witnesses+=Witness / *","* / witnesses+=Witness*)? / *'}'* / ("then" / *'{'* / actions+=Action / *","* / actions+=Action*)?
	//	/ *'}'* / //	'}'
	//	"end";
	public EventElements getEventAccess() {
		return (pEvent != null) ? pEvent : (pEvent = new EventElements());
	}
	
	public ParserRule getEventRule() {
		return getEventAccess().getRule();
	}

	////StringToStringMapEntry returns core::StringToStringMapEntry:
	////	{core::StringToStringMapEntry}
	////	'StringToStringMapEntry'
	////	'{'
	////		('key' key=EString)?
	////		('value' value=EString)?
	////	'}';
	////EObject returns ecore::EObject:
	////	{ecore::EObject}
	////	'EObject'
	////	;
	////Extension returns core::Extension:
	////	(localGenerated?='localGenerated')?
	////	'Extension'
	////	'{'
	////		('internalId' internalId=EString)?
	////		'extensionId' extensionId=EString
	////		('annotations' '{' annotations+=Annotation ( "," annotations+=Annotation)* '}' )?
	////		('extensions' '{' extensions+=AbstractExtension ( "," extensions+=AbstractExtension)* '}' )?
	////		('attributes' '{' attributes+=StringToAttributeMapEntry ( "," attributes+=StringToAttributeMapEntry)* '}' )?
	////	'}'
	////	;
	////Attribute returns core::Attribute:
	////	'Attribute'
	////	'{'
	////		'type' type=AttributeType
	////		'value' value=EJavaObject
	////		('annotations' '{' annotations+=Annotation ( "," annotations+=Annotation)* '}' )?
	////	'}'
	////	;
	////enum AttributeType returns core::AttributeType:
	////				Boolean = 'Boolean' | Handle = 'Handle' | Integer = 'Integer' | Long = 'Long' | String = 'String';
	////EJavaObject returns ecore::EJavaObject:
	////	'EJavaObject' / * TODO: implement this rule and an appropriate IValueConverter * /;
	////CarrierSet returns context::CarrierSet:
	////	{context::CarrierSet}
	////	(localGenerated?='localGenerated')?
	////	'carrierSet'
	////	name=EString
	////	'{'
	////		('internalId' internalId=EString)?
	////		('//' comment=EString)?
	////		('annotations' '{' annotations+=Annotation ( "," annotations+=Annotation)* '}' )?
	////		('extensions' '{' extensions+=AbstractExtension ( "," extensions+=AbstractExtension)* '}' )?
	////		('attributes' '{' attributes+=StringToAttributeMapEntry ( "," attributes+=StringToAttributeMapEntry)* '}' )?
	////	'}'
	////	;
	////Constant returns context::Constant:
	////	{context::Constant}
	////	(localGenerated?='localGenerated')?
	////	'constant'
	////	name=EString
	////	'{'
	////		('internalId' internalId=EString)?
	////		('//' comment=EString)?
	////		('annotations' '{' annotations+=Annotation ( "," annotations+=Annotation)* '}' )?
	////		('extensions' '{' extensions+=AbstractExtension ( "," extensions+=AbstractExtension)* '}' )?
	////		('attributes' '{' attributes+=StringToAttributeMapEntry ( "," attributes+=StringToAttributeMapEntry)* '}' )?
	////	'}';
	////Axiom returns context::Axiom:
	////	(localGenerated?='localGenerated')?
	////	(theorem?='theorem')?
	////	'axiom'
	////	'@'name=EString
	////	'{'
	////		('internalId' internalId=EString)?
	////		('//' comment=EString)?
	////		'predicate' predicate=EString
	////		('annotations' '{' annotations+=Annotation ( "," annotations+=Annotation)* '}' )?
	////		('extensions' '{' extensions+=AbstractExtension ( "," extensions+=AbstractExtension)* '}' )?
	////		('attributes' '{' attributes+=StringToAttributeMapEntry ( "," attributes+=StringToAttributeMapEntry)* '}' )?
	////	'}'
	////	;
	//enum Convergence:
	//	ordinary | convergent | anticipated;
	public ConvergenceElements getConvergenceAccess() {
		return (unknownRuleConvergence != null) ? unknownRuleConvergence : (unknownRuleConvergence = new ConvergenceElements());
	}
	
	public EnumRule getConvergenceRule() {
		return getConvergenceAccess().getRule();
	}

	////		('annotations' '{' annotations+=Annotation ( "," annotations+=Annotation)* '}' )?
	////		('extensions' '{' extensions+=AbstractExtension ( "," extensions+=AbstractExtension)* '}' )?
	////		('attributes' '{' attributes+=StringToAttributeMapEntry ( "," attributes+=StringToAttributeMapEntry)* '}' )?
	////	'}'
	//Parameter:
	//	{Parameter} //	(localGenerated?='localGenerated')?
	//	//	'Parameter'
	//	name=EString //	'{'
	//	//		('internalId' internalId=EString)?
	//	("//" comment=EString)?;
	public ParameterElements getParameterAccess() {
		return (pParameter != null) ? pParameter : (pParameter = new ParameterElements());
	}
	
	public ParserRule getParameterRule() {
		return getParameterAccess().getRule();
	}

	////		('annotations' '{' annotations+=Annotation ( "," annotations+=Annotation)* '}' )?
	////		('extensions' '{' extensions+=AbstractExtension ( "," extensions+=AbstractExtension)* '}' )?
	////		('attributes' '{' attributes+=StringToAttributeMapEntry ( "," attributes+=StringToAttributeMapEntry)* '}' )?
	////	'}'
	//Guard: //	(localGenerated?='localGenerated')?
	////	'Guard'
	//	"@" name=EString //	'{'
	//	//		('internalId' internalId=EString)?
	//	predicate=EString? theorem?="theorem"? ("//" comment=EString)?;
	public GuardElements getGuardAccess() {
		return (pGuard != null) ? pGuard : (pGuard = new GuardElements());
	}
	
	public ParserRule getGuardRule() {
		return getGuardAccess().getRule();
	}

	////		('annotations' '{' annotations+=Annotation ( "," annotations+=Annotation)* '}' )?
	////		('extensions' '{' extensions+=AbstractExtension ( "," extensions+=AbstractExtension)* '}' )?
	////		('attributes' '{' attributes+=StringToAttributeMapEntry ( "," attributes+=StringToAttributeMapEntry)* '}' )?
	////	'}'
	//Witness:
	//	localGenerated?="localGenerated"? //	'witness'
	//	"@" name=EString //	'{'
	//	//		('internalId' internalId=EString)?
	//	/ *'predicate'* / predicate=EString? ("//" comment=EString)?;
	public WitnessElements getWitnessAccess() {
		return (pWitness != null) ? pWitness : (pWitness = new WitnessElements());
	}
	
	public ParserRule getWitnessRule() {
		return getWitnessAccess().getRule();
	}

	////		('annotations' '{' annotations+=Annotation ( "," annotations+=Annotation)* '}' )?
	////		('extensions' '{' extensions+=AbstractExtension ( "," extensions+=AbstractExtension)* '}' )?
	////		('attributes' '{' attributes+=StringToAttributeMapEntry ( "," attributes+=StringToAttributeMapEntry)* '}' )?
	////	'}'
	//Action: //	(localGenerated?='localGenerated')?
	////	'Action'
	//	"@" name=EString //	'{'
	//	//		('internalId' internalId=EString)?
	//	//		'then' 
	//	action=EString? ("//" comment=EString)?;
	public ActionElements getActionAccess() {
		return (pAction != null) ? pAction : (pAction = new ActionElements());
	}
	
	public ParserRule getActionRule() {
		return getActionAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" |
	//	"n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
