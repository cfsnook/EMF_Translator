/*
* generated by Xtext
*/
package ac.soton.xtext.parseTreeConstruction;

import org.eclipse.emf.ecore.*;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parsetree.reconstr.IEObjectConsumer;

import ac.soton.xtext.services.ContextDslGrammarAccess;

import com.google.inject.Inject;

@SuppressWarnings("all")
public class ContextDslParsetreeConstructor extends org.eclipse.xtext.parsetree.reconstr.impl.AbstractParseTreeConstructor {
		
	@Inject
	private ContextDslGrammarAccess grammarAccess;
	
	@Override
	protected AbstractToken getRootToken(IEObjectConsumer inst) {
		return new ThisRootNode(inst);	
	}
	
protected class ThisRootNode extends RootToken {
	public ThisRootNode(IEObjectConsumer inst) {
		super(inst);
	}
	
	@Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Context_Group(this, this, 0, inst);
			case 1: return new CarrierSet_Group(this, this, 1, inst);
			case 2: return new Constant_Group(this, this, 2, inst);
			case 3: return new Axiom_Group(this, this, 3, inst);
			default: return null;
		}	
	}	
}
	

/************ begin Rule Context ****************
 *
 * Context returns context::Context:
 * 	{context::Context} //	(localGenerated?='localGenerated')?
 * 	"context" name=EString //	'{'
 * 	//		('internalId' internalId=EString)?
 * 	("comment" comment=EString)? ("extends" / *'('* / extends+=[context::Context|EString] / *","* /
 * 	extends+=[context::Context|EString]*)? / *')'* / //		('annotations' '{' annotations+=Annotation ( "," annotations+=Annotation)* '}' )?
 * 	//		('extensions' '{' extensions+=AbstractExtension ( "," extensions+=AbstractExtension)* '}' )?
 * 	//		('attributes' '{' attributes+=StringToAttributeMapEntry ( "," attributes+=StringToAttributeMapEntry)* '}' )?
 * 	("sets" / *'{'* / sets+=CarrierSet / *","* / sets+=CarrierSet*)? / *'}'* / ("constants" / *'{'* / constants+=Constant / *","* /
 * 	constants+=Constant*)? / *'}'* / ("axioms" / *'{'* / axioms+=Axiom / *","* / axioms+=Axiom*)? / *'}'* / //	'}'
 * 	"end";
 *
 **/

// {context::Context} //	(localGenerated?='localGenerated')?
// "context" name=EString //	'{'
// //		('internalId' internalId=EString)?
// ("comment" comment=EString)? ("extends" / *'('* / extends+=[context::Context|EString] / *","* /
// extends+=[context::Context|EString]*)? / *')'* / //		('annotations' '{' annotations+=Annotation ( "," annotations+=Annotation)* '}' )?
// //		('extensions' '{' extensions+=AbstractExtension ( "," extensions+=AbstractExtension)* '}' )?
// //		('attributes' '{' attributes+=StringToAttributeMapEntry ( "," attributes+=StringToAttributeMapEntry)* '}' )?
// ("sets" / *'{'* / sets+=CarrierSet / *","* / sets+=CarrierSet*)? / *'}'* / ("constants" / *'{'* / constants+=Constant / *","* /
// constants+=Constant*)? / *'}'* / ("axioms" / *'{'* / axioms+=Axiom / *","* / axioms+=Axiom*)? / *'}'* / //	'}'
// "end"
protected class Context_Group extends GroupToken {
	
	public Context_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getContextAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Context_EndKeyword_8(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getContextAccess().getContextAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {context::Context}
protected class Context_ContextAction_0 extends ActionToken  {

	public Context_ContextAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getContextAccess().getContextAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// //	(localGenerated?='localGenerated')?
// "context"
protected class Context_ContextKeyword_1 extends KeywordToken  {
	
	public Context_ContextKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getContextAccess().getContextKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Context_ContextAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// name=EString
protected class Context_NameAssignment_2 extends AssignmentToken  {
	
	public Context_NameAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getContextAccess().getNameAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Context_ContextKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getContextAccess().getNameEStringParserRuleCall_2_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getContextAccess().getNameEStringParserRuleCall_2_0();
			return obj;
		}
		return null;
	}

}

// ("comment" comment=EString)?
protected class Context_Group_3 extends GroupToken {
	
	public Context_Group_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getContextAccess().getGroup_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Context_CommentAssignment_3_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "comment"
protected class Context_CommentKeyword_3_0 extends KeywordToken  {
	
	public Context_CommentKeyword_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getContextAccess().getCommentKeyword_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Context_NameAssignment_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// comment=EString
protected class Context_CommentAssignment_3_1 extends AssignmentToken  {
	
	public Context_CommentAssignment_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getContextAccess().getCommentAssignment_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Context_CommentKeyword_3_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("comment",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("comment");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getContextAccess().getCommentEStringParserRuleCall_3_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getContextAccess().getCommentEStringParserRuleCall_3_1_0();
			return obj;
		}
		return null;
	}

}


// ("extends" / *'('* / extends+=[context::Context|EString] / *","* / extends+=[context::Context|EString]*)?
protected class Context_Group_4 extends GroupToken {
	
	public Context_Group_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getContextAccess().getGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Context_ExtendsAssignment_4_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Context_ExtendsAssignment_4_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// "extends"
protected class Context_ExtendsKeyword_4_0 extends KeywordToken  {
	
	public Context_ExtendsKeyword_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getContextAccess().getExtendsKeyword_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Context_Group_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Context_NameAssignment_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// / *'('* / extends+=[context::Context|EString]
protected class Context_ExtendsAssignment_4_1 extends AssignmentToken  {
	
	public Context_ExtendsAssignment_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getContextAccess().getExtendsAssignment_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Context_ExtendsKeyword_4_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("extends",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("extends");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getContextAccess().getExtendsContextCrossReference_4_1_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getContextAccess().getExtendsContextCrossReference_4_1_0(); 
				return obj;
			}
		}
		return null;
	}

}

// / *","* / extends+=[context::Context|EString]*
protected class Context_ExtendsAssignment_4_2 extends AssignmentToken  {
	
	public Context_ExtendsAssignment_4_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getContextAccess().getExtendsAssignment_4_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Context_ExtendsAssignment_4_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Context_ExtendsAssignment_4_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("extends",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("extends");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getContextAccess().getExtendsContextCrossReference_4_2_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getContextAccess().getExtendsContextCrossReference_4_2_0(); 
				return obj;
			}
		}
		return null;
	}

}


// ("sets" / *'{'* / sets+=CarrierSet / *","* / sets+=CarrierSet*)?
protected class Context_Group_5 extends GroupToken {
	
	public Context_Group_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getContextAccess().getGroup_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Context_SetsAssignment_5_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Context_SetsAssignment_5_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// "sets"
protected class Context_SetsKeyword_5_0 extends KeywordToken  {
	
	public Context_SetsKeyword_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getContextAccess().getSetsKeyword_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Context_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Context_Group_3(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Context_NameAssignment_2(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// / *'{'* / sets+=CarrierSet
protected class Context_SetsAssignment_5_1 extends AssignmentToken  {
	
	public Context_SetsAssignment_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getContextAccess().getSetsAssignment_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CarrierSet_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("sets",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("sets");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getCarrierSetRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getContextAccess().getSetsCarrierSetParserRuleCall_5_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Context_SetsKeyword_5_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// / *","* / sets+=CarrierSet*
protected class Context_SetsAssignment_5_2 extends AssignmentToken  {
	
	public Context_SetsAssignment_5_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getContextAccess().getSetsAssignment_5_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CarrierSet_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("sets",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("sets");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getCarrierSetRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getContextAccess().getSetsCarrierSetParserRuleCall_5_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Context_SetsAssignment_5_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new Context_SetsAssignment_5_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ("constants" / *'{'* / constants+=Constant / *","* / constants+=Constant*)?
protected class Context_Group_6 extends GroupToken {
	
	public Context_Group_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getContextAccess().getGroup_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Context_ConstantsAssignment_6_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Context_ConstantsAssignment_6_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// "constants"
protected class Context_ConstantsKeyword_6_0 extends KeywordToken  {
	
	public Context_ConstantsKeyword_6_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getContextAccess().getConstantsKeyword_6_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Context_Group_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Context_Group_4(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Context_Group_3(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Context_NameAssignment_2(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// / *'{'* / constants+=Constant
protected class Context_ConstantsAssignment_6_1 extends AssignmentToken  {
	
	public Context_ConstantsAssignment_6_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getContextAccess().getConstantsAssignment_6_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Constant_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("constants",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("constants");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getConstantRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getContextAccess().getConstantsConstantParserRuleCall_6_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Context_ConstantsKeyword_6_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// / *","* / constants+=Constant*
protected class Context_ConstantsAssignment_6_2 extends AssignmentToken  {
	
	public Context_ConstantsAssignment_6_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getContextAccess().getConstantsAssignment_6_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Constant_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("constants",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("constants");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getConstantRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getContextAccess().getConstantsConstantParserRuleCall_6_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Context_ConstantsAssignment_6_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new Context_ConstantsAssignment_6_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ("axioms" / *'{'* / axioms+=Axiom / *","* / axioms+=Axiom*)?
protected class Context_Group_7 extends GroupToken {
	
	public Context_Group_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getContextAccess().getGroup_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Context_AxiomsAssignment_7_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Context_AxiomsAssignment_7_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// "axioms"
protected class Context_AxiomsKeyword_7_0 extends KeywordToken  {
	
	public Context_AxiomsKeyword_7_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getContextAccess().getAxiomsKeyword_7_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Context_Group_6(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Context_Group_5(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Context_Group_4(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Context_Group_3(lastRuleCallOrigin, this, 3, inst);
			case 4: return new Context_NameAssignment_2(lastRuleCallOrigin, this, 4, inst);
			default: return null;
		}	
	}

}

// / *'{'* / axioms+=Axiom
protected class Context_AxiomsAssignment_7_1 extends AssignmentToken  {
	
	public Context_AxiomsAssignment_7_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getContextAccess().getAxiomsAssignment_7_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Axiom_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("axioms",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("axioms");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAxiomRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getContextAccess().getAxiomsAxiomParserRuleCall_7_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Context_AxiomsKeyword_7_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// / *","* / axioms+=Axiom*
protected class Context_AxiomsAssignment_7_2 extends AssignmentToken  {
	
	public Context_AxiomsAssignment_7_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getContextAccess().getAxiomsAssignment_7_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Axiom_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("axioms",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("axioms");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAxiomRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getContextAccess().getAxiomsAxiomParserRuleCall_7_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Context_AxiomsAssignment_7_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new Context_AxiomsAssignment_7_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// //	'}'
// "end"
protected class Context_EndKeyword_8 extends KeywordToken  {
	
	public Context_EndKeyword_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getContextAccess().getEndKeyword_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Context_Group_7(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Context_Group_6(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Context_Group_5(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Context_Group_4(lastRuleCallOrigin, this, 3, inst);
			case 4: return new Context_Group_3(lastRuleCallOrigin, this, 4, inst);
			case 5: return new Context_NameAssignment_2(lastRuleCallOrigin, this, 5, inst);
			default: return null;
		}	
	}

}


/************ end Rule Context ****************/



/************ begin Rule CarrierSet ****************
 *
 * //		('annotations' '{' annotations+=Annotation ( "," annotations+=Annotation)* '}' )?
 * //		('extensions' '{' extensions+=AbstractExtension ( "," extensions+=AbstractExtension)* '}' )?
 * //		('attributes' '{' attributes+=StringToAttributeMapEntry ( "," attributes+=StringToAttributeMapEntry)* '}' )?
 * //	'}'
 * CarrierSet returns context::CarrierSet:
 * 	{context::CarrierSet} //	(localGenerated?='localGenerated')?
 * 	//	'CarrierSet'
 * 	name=EString //	'{'
 * 	//		('internalId' internalId=EString)?
 * 	("//" comment=EString)?;
 *
 **/

// {context::CarrierSet} //	(localGenerated?='localGenerated')?
// //	'CarrierSet'
// name=EString //	'{'
// //		('internalId' internalId=EString)?
// ("//" comment=EString)?
protected class CarrierSet_Group extends GroupToken {
	
	public CarrierSet_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getCarrierSetAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CarrierSet_Group_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new CarrierSet_NameAssignment_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getCarrierSetAccess().getCarrierSetAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {context::CarrierSet}
protected class CarrierSet_CarrierSetAction_0 extends ActionToken  {

	public CarrierSet_CarrierSetAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getCarrierSetAccess().getCarrierSetAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// //	(localGenerated?='localGenerated')?
// //	'CarrierSet'
// name=EString
protected class CarrierSet_NameAssignment_1 extends AssignmentToken  {
	
	public CarrierSet_NameAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getCarrierSetAccess().getNameAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CarrierSet_CarrierSetAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getCarrierSetAccess().getNameEStringParserRuleCall_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getCarrierSetAccess().getNameEStringParserRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// ("//" comment=EString)?
protected class CarrierSet_Group_2 extends GroupToken {
	
	public CarrierSet_Group_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getCarrierSetAccess().getGroup_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CarrierSet_CommentAssignment_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "//"
protected class CarrierSet_SolidusSolidusKeyword_2_0 extends KeywordToken  {
	
	public CarrierSet_SolidusSolidusKeyword_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getCarrierSetAccess().getSolidusSolidusKeyword_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CarrierSet_NameAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// comment=EString
protected class CarrierSet_CommentAssignment_2_1 extends AssignmentToken  {
	
	public CarrierSet_CommentAssignment_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getCarrierSetAccess().getCommentAssignment_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CarrierSet_SolidusSolidusKeyword_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("comment",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("comment");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getCarrierSetAccess().getCommentEStringParserRuleCall_2_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getCarrierSetAccess().getCommentEStringParserRuleCall_2_1_0();
			return obj;
		}
		return null;
	}

}



/************ end Rule CarrierSet ****************/


/************ begin Rule Constant ****************
 *
 * //		('annotations' '{' annotations+=Annotation ( "," annotations+=Annotation)* '}' )?
 * //		('extensions' '{' extensions+=AbstractExtension ( "," extensions+=AbstractExtension)* '}' )?
 * //		('attributes' '{' attributes+=StringToAttributeMapEntry ( "," attributes+=StringToAttributeMapEntry)* '}' )?
 * //	'}'
 * Constant returns context::Constant:
 * 	{context::Constant} //	(localGenerated?='localGenerated')?
 * 	//	'Constant'
 * 	name=EString //	'{'
 * 	//		('internalId' internalId=EString)?
 * 	("//" comment=EString)?;
 *
 **/

// {context::Constant} //	(localGenerated?='localGenerated')?
// //	'Constant'
// name=EString //	'{'
// //		('internalId' internalId=EString)?
// ("//" comment=EString)?
protected class Constant_Group extends GroupToken {
	
	public Constant_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getConstantAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Constant_Group_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Constant_NameAssignment_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getConstantAccess().getConstantAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {context::Constant}
protected class Constant_ConstantAction_0 extends ActionToken  {

	public Constant_ConstantAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getConstantAccess().getConstantAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// //	(localGenerated?='localGenerated')?
// //	'Constant'
// name=EString
protected class Constant_NameAssignment_1 extends AssignmentToken  {
	
	public Constant_NameAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getConstantAccess().getNameAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Constant_ConstantAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getConstantAccess().getNameEStringParserRuleCall_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getConstantAccess().getNameEStringParserRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// ("//" comment=EString)?
protected class Constant_Group_2 extends GroupToken {
	
	public Constant_Group_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getConstantAccess().getGroup_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Constant_CommentAssignment_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "//"
protected class Constant_SolidusSolidusKeyword_2_0 extends KeywordToken  {
	
	public Constant_SolidusSolidusKeyword_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getConstantAccess().getSolidusSolidusKeyword_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Constant_NameAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// comment=EString
protected class Constant_CommentAssignment_2_1 extends AssignmentToken  {
	
	public Constant_CommentAssignment_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getConstantAccess().getCommentAssignment_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Constant_SolidusSolidusKeyword_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("comment",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("comment");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getConstantAccess().getCommentEStringParserRuleCall_2_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getConstantAccess().getCommentEStringParserRuleCall_2_1_0();
			return obj;
		}
		return null;
	}

}



/************ end Rule Constant ****************/


/************ begin Rule Axiom ****************
 *
 * //		('annotations' '{' annotations+=Annotation ( "," annotations+=Annotation)* '}' )?
 * //		('extensions' '{' extensions+=AbstractExtension ( "," extensions+=AbstractExtension)* '}' )?
 * //		('attributes' '{' attributes+=StringToAttributeMapEntry ( "," attributes+=StringToAttributeMapEntry)* '}' )?
 * //	'}'
 * //StringToStringMapEntry returns StringToStringMapEntry:
 * //	{StringToStringMapEntry}
 * //	'StringToStringMapEntry'
 * //	'{'
 * //		('key' key=EString)?
 * //		('value' value=EString)?
 * //	'}';
 * //EObject returns ecore::EObject:
 * //	{ecore::EObject}
 * //	'EObject'
 * //	;
 * //Extension returns Extension:
 * //	(localGenerated?='localGenerated')?
 * //	'Extension'
 * //	'{'
 * //		('internalId' internalId=EString)?
 * //		'extensionId' extensionId=EString
 * //		('annotations' '{' annotations+=Annotation ( "," annotations+=Annotation)* '}' )?
 * //		('extensions' '{' extensions+=AbstractExtension ( "," extensions+=AbstractExtension)* '}' )?
 * //		('attributes' '{' attributes+=StringToAttributeMapEntry ( "," attributes+=StringToAttributeMapEntry)* '}' )?
 * //	'}';
 * //Attribute returns Attribute:
 * //	'Attribute'
 * //	'{'
 * //		'type' type=AttributeType
 * //		'value' value=EJavaObject
 * //		('annotations' '{' annotations+=Annotation ( "," annotations+=Annotation)* '}' )?
 * //	'}';
 * //AttributeType returns AttributeType:
 * //	'AttributeType' / * TODO: implement this rule and an appropriate IValueConverter * /;
 * //EJavaObject returns ecore::EJavaObject:
 * //	'EJavaObject' / * TODO: implement this rule and an appropriate IValueConverter * /;
 * Axiom returns context::Axiom: //	(localGenerated?='localGenerated')?
 * //	'Axiom'
 * 	"@" name=EString //	'{'
 * 	//		('internalId' internalId=EString)?
 * 	/ *'predicate'* / predicate=EString? theorem?="theorem"? ("//" comment=EString)?;
 *
 **/

// //	(localGenerated?='localGenerated')?
// //	'Axiom'
// "@" name=EString //	'{'
// //		('internalId' internalId=EString)?
// / *'predicate'* / predicate=EString? theorem?="theorem"? ("//" comment=EString)?
protected class Axiom_Group extends GroupToken {
	
	public Axiom_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAxiomAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Axiom_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Axiom_TheoremAssignment_3(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Axiom_PredicateAssignment_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new Axiom_NameAssignment_1(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getAxiomRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// //	(localGenerated?='localGenerated')?
// //	'Axiom'
// "@"
protected class Axiom_CommercialAtKeyword_0 extends KeywordToken  {
	
	public Axiom_CommercialAtKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAxiomAccess().getCommercialAtKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// name=EString
protected class Axiom_NameAssignment_1 extends AssignmentToken  {
	
	public Axiom_NameAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAxiomAccess().getNameAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Axiom_CommercialAtKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getAxiomAccess().getNameEStringParserRuleCall_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getAxiomAccess().getNameEStringParserRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// //	'{'
// //		('internalId' internalId=EString)?
// / *'predicate'* / predicate=EString?
protected class Axiom_PredicateAssignment_2 extends AssignmentToken  {
	
	public Axiom_PredicateAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAxiomAccess().getPredicateAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Axiom_NameAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("predicate",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("predicate");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getAxiomAccess().getPredicateEStringParserRuleCall_2_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getAxiomAccess().getPredicateEStringParserRuleCall_2_0();
			return obj;
		}
		return null;
	}

}

// theorem?="theorem"?
protected class Axiom_TheoremAssignment_3 extends AssignmentToken  {
	
	public Axiom_TheoremAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAxiomAccess().getTheoremAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Axiom_PredicateAssignment_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Axiom_NameAssignment_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("theorem",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("theorem");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getAxiomAccess().getTheoremTheoremKeyword_3_0();
			return obj;
		}
		return null;
	}

}

// ("//" comment=EString)?
protected class Axiom_Group_4 extends GroupToken {
	
	public Axiom_Group_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAxiomAccess().getGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Axiom_CommentAssignment_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "//"
protected class Axiom_SolidusSolidusKeyword_4_0 extends KeywordToken  {
	
	public Axiom_SolidusSolidusKeyword_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAxiomAccess().getSolidusSolidusKeyword_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Axiom_TheoremAssignment_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Axiom_PredicateAssignment_2(lastRuleCallOrigin, this, 1, inst);
			case 2: return new Axiom_NameAssignment_1(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// comment=EString
protected class Axiom_CommentAssignment_4_1 extends AssignmentToken  {
	
	public Axiom_CommentAssignment_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAxiomAccess().getCommentAssignment_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Axiom_SolidusSolidusKeyword_4_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("comment",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("comment");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getAxiomAccess().getCommentEStringParserRuleCall_4_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getAxiomAccess().getCommentEStringParserRuleCall_4_1_0();
			return obj;
		}
		return null;
	}

}



/************ end Rule Axiom ****************/

}
